Editorials

 1.  Users on ITS:   say ZORK^K to DDT rather than :ZORK to get a
      zork--this keeps you from tying up more than one of the three
      available slots.
 2.  Bugs, comments, etc. are always welcome.  
     Send mail to DUNGEON@MIT-DMS

Special characters, cautions, &c.
    The characters ctrl-D and ctrl-L are useful for redisplaying what
you've typed before you terminate--particularly when you're on a
printing terminal (or TENEX/TOPS-20) where <rubout> echoes the
character deleted rather than erasing it.  Ctrl-@ (null) deletes the
entire line you've typed.
    Dungeon may occasionally type out a message 'GIN FREE STORAGE-
<long pause> GOUT TIME=10.92'.  This indicates that a garbage
collection is occurring.  We have attempted to prevent this, since it
may take a significant amount of real time on a loaded system; should
it ever occur, please send mail to DUNGEON@MIT-DMS describing the
circumstances--how many moves have been made, whether a RESTORE has
been done, and so on.  THIS IS NOT FATAL:  after the GOUT message is
printed, you may continue playing.

Useful commands

    The 'brief' command suppresses printing of long room descriptions
for rooms which have been visited.  The 'unbrief' command turns this
off.  The 'superbrief' command suppresses printing of long room
descriptions for all rooms; 'unsup' turns this off.
    The 'info' command prints a file which might give some idea of
what the game is about.
    The 'quit' command (or ctrl-G) prints your score, and asks whether
you wish to continue playing.
    The 'script', 'unscript', 'save', and 'restore' commands are
useful if you are a local user.  
    Although the best way to report bugs is to send mail to
DUNGEON@MIT-DMS, there are 'bug' and 'feature' commands built in to
the game.  These generate files which must, alas, be manually
transmitted to the maintainers.  It is, however, better than nothing.

Dungeon Command Parser
    
    A command is one line of text terminated by a carriage return.
For reasons of simplicity all words are distinguished by their first
five letters.  All others are ignored.  For example, your typing
'DISASSEMBLE THE ENCYLOPEDIA' while meaningless is also creating
excess effort for your fingers.  Note also that ambiguities can be
introduced by this:  'unscr' is 'UNSCRipt', not 'UNSCRew'.

    You are talking to a fairly stupid parser, which understands the
following types of things.

 Actions:	
    Among the more obvious of these, TAKE, DROP, etc.  Fairly general
    forms of these may be used:  PICK UP, PUT DOWN, etc.

 Directions:
    NORTH, SOUTH, UP, DOWN, etc. and their various abbreviations.
    Other more obscure directions (LAND, CLIMB) are appropriate in
    only certain situations.  Because words are only five letters,
    you must say 'nw' for 'northwest':  the latter is truncated to
    'north', which isn't quite what you had in mind.
    
 Objects: 
    Most objects have names, and can be referenced by them.

 Adjectives:
    Some adjectives are understood and are required when there are
    two objects which can be referenced with the same 'name' (e.g.
    DOORs, BUTTONs)

 Prepositions:

    It may be necessary in some cases to include prepositions, but
    the parser attempts to handle cases which aren't ambiguous
    without.  Thus 'Give car to demon' will work, as will 'Give demon
    car.'  'Give car demon' probably won't do anything interesting. 
    When a preposition is used, it should be appropriate:  'Give car
    with demon' does not parse.

 Sentences:

    The parser understands a reasonable number of things.  Rather
    than listing them, we advise you to do reasonable things.

 Multiple Objects:

    Sentences of the following forms will parse:
	Put A and B and C in trophy case
	Put A, B, and C in trophy case
	Give A and B to the troll
    The following will not:
	Put A B in case
	Take A B C
    The point is that an AND or a <comma> are required so as not
    to hopelessly confuse the parser.

 Ambiguity:

    The parser tries to be clever about what to do in the case of
    actions which require objects in the case that the object is not
    specified.  If there is only one possible object, the parser will
    assume that it should be used.  Otherwise, the parser will ask.
    Most questions asked by the parser can be answered (e.g. With
    what?).
	 
  Inventory:  Lists the objects in your possession.

  Look: Prints a description of your surroundings.

  Containment:  

     Some objects can contain other objects.  Many such containers can
     be opened and closed; the rest are always open.  They may or may
     not be transparent.  For you to access (take, for example) an
     object which is in a container, the container must be open; for you
     to see such an object, the container must either be open or
     transparent.  Containers have a capacity, and objects have sizes;
     the number of objects which will fit therefore depends on their
     sizes.  You may "put" any object you have access to (it need not be
     in your hands) into any other object; at some point, the program
     will attempt to pick it up if you don't already have it, which
     process may fail if you're carrying too much.  Although  containers
     can contain other containers, the program doesn't access more than
     one level down.

  Fighting:

     Occupants of the dungeon will, as a rule, fight back when
     attacked; they may in some cases attack you unprovoked.  Useful
     verbs here are 'attack <villain> with <weapon>', 'kill', etc. 
     Knife-throwing may or may not be useful.  The adventurer has a
     fighting strength, which varies with time:  in particular, being
     in a fight, getting killed, and getting injured, all lower it. 
     One's carrying capacity may also be reduced after a fight. 
     Strength is regained with time.  (Thus, it is not a good idea to
     fight someone immediately after being killed.)  Other details
     may become apparent in the course of a few melees.  The
     'diagnose' command describes your state of health.


There are two sections in this file; the first is a sample
run on MC (exhibiting KL performance) and the second a sample
run on ML (exhibiting KA performance).  ML's memory is uniformly
MF-10's with 1.0 usec cycle time (I think).  For MC generally
the memory references are being satisfied by the cache.
----------------------------------------------------------
MIT-MC KL-10:

100 checks per exper, 1000 executes per check
<#>(# of correction chk): Name - <avg usec/instr>, sd=<std dev>
	avg usec/chk, corrected usec/chk
Control: 551.46 avg/chk, 3.91062254 std dev (usec) per chk
1: MOVEI 0 - 0.3349 usec, sd=6.2861454E-3
	886.36	334.9
2(1): Indexing - 0.0415599975 usec, sd=4.8822062E-3
	927.92	41.559998
3: MOVE 70 - 0.50144 usec, sd=4.8169621E-3
	1052.9	501.439994
4: SETZ A, - 0.33419 usec, sd=4.1655206E-3
	885.65	334.19
5: MOVEI A,0 - 0.33476 usec, sd=4.9220486E-3
	886.22	334.76
6: TDC A,A - 0.58499 usec, sd=4.4791182E-3
	1136.45	584.99
7: TDZ A,A - 0.58566 usec, sd=6.8590724E-3
	1137.12	585.66
8: TLC A, - 0.45984 usec, sd=6.0136563E-3
	1011.3	459.840004
9: MOVEI A,1(A) - 0.37678 usec, sd=5.6630655E-3
	928.24	376.78
10: ADDI A,1 - 0.37653 usec, sd=5.5438592E-3
	927.99	376.53
11: AOJ A, - 0.54412 usec, sd=6.2462488E-3
	1095.58	544.12
12: AOS A - 0.75400001 usec, sd=6.8271059E-3
	1305.46	754.00001
13: SUBI A,1 - 0.50171 usec, sd=5.6789083E-3
	1053.17	501.71
14: SOJ A, - 0.54387 usec, sd=6.0518591E-3
	1095.33	543.87
15: SOS A - 0.7523 usec, sd=5.326819E-3
	1303.76	752.3
16: MOVEI A,-1(A) - 0.37698 usec, sd=6.2243222E-3
	928.44	376.98
17: MOVE A,B - 0.460090004 usec, sd=5.4112151E-3
	1011.55	460.090004
18: MOVE A,70 - 0.5028 usec, sd=7.4340852E-3
	1054.26	502.799995
19: HRRI A,0 - 0.37664 usec, sd=5.0859795E-3
	928.1	376.64
20: HRRZI A,0 - 0.33478 usec, sd=5.8690129E-3
	886.24	334.78
21: HRRZ A,A - 0.46052 usec, sd=6.7215836E-3
	1011.98	460.520004
22: HRRZ A,70 - 0.50198 usec, sd=5.0342576E-3
	1053.44	501.98
23: HRR A,70 - 0.54337 usec, sd=4.1495482E-3
	1094.83	543.37
24: HLL A,70 - 0.5436 usec, sd=4.5017357E-3
	1095.06	543.6
25: HRL A,70 - 0.54419 usec, sd=5.96212E-3
	1095.65	544.19
26: MOVEI A,(B) - 0.37656 usec, sd=6.0337591E-3
	928.02	376.56
27: MOVSI A,(B) - 0.37639 usec, sd=4.4756284E-3
	927.85	376.39
28: MOVNS A - 0.9192 usec, sd=5.0124844E-3
	1470.66	919.2
29: MOVNI A,(A) - 0.58523 usec, sd=6.0389361E-3
	1136.69	585.23
30: MOVN A,A - 0.66904 usec, sd=5.7090936E-3
	1220.5	669.04
31: HRRM A,70 - 0.92095 usec, sd=6.9664373E-3
	1472.41	920.95
32: MOVEM A,70 - 0.71172 usec, sd=7.655676E-3
	1263.18	711.72
33: Control for PUSHJ - 1.08767 usec, sd=6.6001893E-3
	1639.13	1087.67
34: Control for IDPB - 2.00908 usec, sd=9.516433E-3
	2560.54	2009.08001
35: Control for indexing/indirect (movei) - 0.33402 usec, sd=3.7395688E-3
	885.48	334.020004
36(35): Indexing (movei (a)) - 0.042079994 usec, sd=5.3786324E-3
	927.56	42.079994
37(35): Indirect (movei @a) - 0.293659996 usec, sd=7.0721726E-3
	1179.14	293.659996
38(35): Indirect (movei @70) - 0.335840005 usec, sd=6.3307285E-3
	1221.32	335.840004
39(35): Indexing & indirect (movei @([70])) - 0.37704999 usec, sd=5.9002118E-3
	1262.53	377.049995
40: MOVEI  - 0.33356 usec, sd=4.0658639E-3
	885.02	333.56
41: MOVE A,A - 0.45986 usec, sd=6.2786841E-3
	1011.32	459.86
42: MOVE A,70 - 0.50211001 usec, sd=5.125E-3
	1053.57	502.11001
43: HRR A,70 - 0.54388 usec, sd=5.983049E-3
	1095.34	543.88
44: SETOM 0 - 0.58493 usec, sd=5.5028401E-3
	1136.39	584.93
45: JRST - 0.37635 usec, sd=4.5276925E-3
	927.81	376.35
46(45): JSR <mem> - 0.71152 usec, sd=7.9392222E-3
	1639.33	711.52
47(33): PUSHJ - 0.87926001 usec, sd=9.899495E-3
	2518.39	879.26001
48: ADD A,70 - 0.54412 usec, sd=5.9055059E-3
	1095.58	544.12
49: DMOVE A,70 - 0.92068 usec, sd=7.185054E-3
	1472.14	920.68
50: MOVEM A,70 - 0.71159 usec, sd=6.619101E-3
	1263.05	711.59
51: LSH A, 35. - 0.66909 usec, sd=5.1931444E-3
	1220.55	669.09
52: LSH A,-35. - 0.7944 usec, sd=5.7987067E-3
	1345.86	794.4
53: LSHC A, 71. - 1.17078002 usec, sd=6.3442887E-3
	1722.24	1170.78
54: LSHC A,-71. - 1.21274 usec, sd=6.3835726E-3
	1764.2	1212.74
55: IBP 70 - 1.06226001 usec, sd=6.6001893E-3
	1613.72	1062.26
56: ILDB 70 - 1.5277 usec, sd=0.015811388
	2079.16	1527.7
57(34): IDPB 70 - 1.91547 usec, sd=0.01174734
	4476.01	1915.47
58: JFCL - 0.92124 usec, sd=8.470537E-3
	1472.7	921.24
59: CAI - 0.50215 usec, sd=5.7744046E-3
	1053.61	502.15
60: JUMP - 0.50202 usec, sd=5.9187203E-3
	1053.48	502.02
61: CAM - 0.62759 usec, sd=6.4153137E-3
	1179.05	627.59
62: EQV A,A - 0.50211001 usec, sd=5.6499446E-3
	1053.57	502.11001
63: EQV A,70 - 0.54438 usec, sd=5.5915672E-3
	1095.84	544.38
64: SETOB 0,0 - 0.58538 usec, sd=5.6720256E-3
	1136.84	585.38
65: AOS 70 - 0.87857 usec, sd=6.4006835E-3
	1430.03	878.57
66: EXCH A,B - 0.66909 usec, sd=5.3033008E-3
	1220.55	669.09
67: EXCH A,70 - 0.87791 usec, sd=6.2861454E-3
	1429.37	877.91
68(45): XCT 70 - 0.50196001 usec, sd=6.6567634E-3
	1429.77	501.96001

MIT-ML KA-10:

100 checks per exper, 1000 executes per check
<#>(# of correction chk): Name - <avg usec/instr>, sd=<std dev>
	avg usec/chk, corrected usec/chk
Control: 2986.24 avg/chk, 7.5415515 std dev (usec) per chk
1: MOVEI 0 - 2.20160004 usec, sd=3.24037033E-3
	5187.84	2201.60004
2(1): Indexing - 0.30527997 usec, sd=0.01698528766
	5493.12	305.27997
3: MOVE 70 - 3.80076 usec, sd=3.7416574E-3
	6787.0	3800.76
4: SETZ A, - 2.2034 usec, sd=0.01324764127
	5189.64	2203.4
5: MOVEI A,0 - 2.21088 usec, sd=0.030062435
	5197.12	2210.88
6: TDC A,A - 3.23228 usec, sd=0.0144568323
	6218.52	3232.28
7: TDZ A,A - 3.23316005 usec, sd=0.01797220064
	6219.4	3233.16003
8: TLC A, - 2.73788 usec, sd=0.014422205
	5724.12	2737.88
9: MOVEI A,1(A) - 2.50544 usec, sd=0.0142741024
	5491.68	2505.44
10: ADDI A,1 - 2.5428 usec, sd=0.01303840486
	5529.04	2542.8
11: AOJ A, - 2.54152 usec, sd=5.5452682E-3
	5527.76	2541.52
12: AOS A - 3.50208 usec, sd=9.3005376E-3
	6488.32	3502.08
13: SUBI A,1 - 2.54092 usec, sd=4.0926763E-3
	5527.16	2540.92
14: SOJ A, - 2.54172003 usec, sd=0.01036822074
	5527.96	2541.72003
15: SOS A - 3.50096 usec, sd=3.8729833E-3
	6487.2	3500.96
16: MOVEI A,-1(A) - 2.5064 usec, sd=7.615773E-3
	5492.64	2506.4
17: MOVE A,B - 2.69796 usec, sd=0.01142365962
	5684.2	2697.96
18: MOVE A,70 - 3.80084 usec, sd=8.093207E-3
	6787.08	3800.84
19: HRRI A,0 - 2.42588 usec, sd=0.118072011
	5412.12	2425.88
20: HRRZI A,0 - 2.20712 usec, sd=0.031264996
	5193.36	2207.12
21: HRRZ A,A - 2.6984 usec, sd=3.7749172E-3
	5684.64	2698.4
22: HRRZ A,70 - 3.80096003 usec, sd=3.6742346E-3
	6787.2	3800.96
23: HRR A,70 - 3.95512 usec, sd=3.8078865E-3
	6941.36	3955.12
24: HLL A,70 - 3.96792 usec, sd=0.072374028
	6954.16	3967.92
25: HRL A,70 - 4.34016 usec, sd=0.02393741836
	7326.4	4340.16
26: MOVEI A,(B) - 2.50356 usec, sd=3.96862695E-3
	5489.8	2503.56
27: MOVSI A,(B) - 2.50264 usec, sd=3.6742346E-3
	5488.88	2502.64
28: MOVNS A - 3.5002 usec, sd=4.0620192E-3
	6486.44	3500.2
29: MOVNI A,(A) - 2.68676 usec, sd=3.6742346E-3
	5673.0	2686.76
30: MOVN A,A - 2.88224 usec, sd=3.5355339E-3
	5868.48	2882.24
31: HRRM A,70 - 4.88032 usec, sd=3.082207E-3
	7866.56	4880.32
32: MOVEM A,70 - 4.0232 usec, sd=3.31662476E-3
	7009.44	4023.2
33: Control for PUSHJ - 6.60316 usec, sd=2.99999997E-3
	9589.4	6603.16
34: Control for IDPB - 11.48592 usec, sd=4.0E-3
	14472.16	11485.92
35: Control for indexing/indirect (movei) - 2.2022 usec, sd=3.6400549E-3
	5188.44	2202.2
36(35): Indexing (movei (a)) - 0.30035999 usec, sd=3.60555124E-3
	5488.8	300.359985
37(35): Indirect (movei @a) - 0.65764002 usec, sd=4.0E-3
	5846.08	657.64001
38(35): Indirect (movei @70) - 1.76115997 usec, sd=3.7416574E-3
	6949.6	1761.15997
39(35): Indexing & indirect (movei @([70])) - 2.06244 usec, sd=3.5355339E-3
	7250.88	2062.44
40: MOVEI  - 2.205 usec, sd=0.015411035
	5191.24	2205.0
41: MOVE A,A - 2.70168 usec, sd=0.01928730146
	5687.92	2701.68
42: MOVE A,70 - 3.8034 usec, sd=0.01058300514
	6789.64	3803.4
43: HRR A,70 - 3.95596004 usec, sd=3.5355339E-3
	6942.2	3955.96
44: SETOM 0 - 2.70804 usec, sd=3.6742346E-3
	5694.28	2708.04004
45: JRST - 2.20464 usec, sd=0.017930421
	5190.88	2204.64
46(45): JSR <mem> - 4.251 usec, sd=0.017117243
	9441.88	4251.0
47(33): PUSHJ - 4.9694 usec, sd=0.036769553
	14558.8	4969.4
48: ADD A,70 - 4.19648 usec, sd=0.133626345
	7182.72	4196.48
49: DMOVE A,70 - 0.0 usec, sd=0.0
	0.0	0.0
50: MOVEM A,70 - 4.02444 usec, sd=0.0107238053
	7010.68	4024.44
51: LSH A, 35. - 8.09752 usec, sd=0.0498798555
	11083.76	8097.52
52: LSH A,-35. - 7.9282 usec, sd=4.6904157E-3
	10914.44	7928.2
53: LSHC A, 71. - 14.1233998 usec, sd=6.6332495E-3
	17109.64	14123.4
54: LSHC A,-71. - 13.9616 usec, sd=4.8989795E-3
	16947.84	13961.6
55: IBP 70 - 4.84176 usec, sd=3.60555124E-3
	7828.0	4841.76
56: ILDB 70 - 10.2694 usec, sd=4.8989795E-3
	13255.64	10269.4
57(34): IDPB 70 - 12.7122 usec, sd=7.4833147E-3
	27184.36	12712.2
58: JFCL - 2.20176 usec, sd=3.5355339E-3
	5188.0	2201.76
59: CAI - 2.54088 usec, sd=3.8729833E-3
	5527.12	2540.88
60: JUMP - 2.54004005 usec, sd=3.4641016E-3
	5526.28	2540.04004
61: CAM - 3.03544 usec, sd=3.7416574E-3
	6021.68	3035.44
62: EQV A,A - 2.8518 usec, sd=3.5355339E-3
	5838.04	2851.8
63: EQV A,70 - 3.95548 usec, sd=3.5355339E-3
	6941.72	3955.48
64: SETOB 0,0 - 3.05616003 usec, sd=3.60555124E-3
	öÌ2]4	3056.16003
65: AOS 70 - 4.90824 usec, sd=3.082207E-3
	7894.48	4908.24
66: EXCH A,B - 3.83560005 usec, sd=3.4641016E-3
	6821.84	3835.60004
67: EXCH A,70 - 5.24576 usec, sd=3.31662476E-3
	8232.0	5245.76
68(45): XCT 70 - 2.19848 usec, sd=3.8729833E-3
	7389.36	2198.48

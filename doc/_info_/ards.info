
ARDS GRAPHICS

   ARDS uses an ASCII character to enter one of three graphics, remains
in that mode for 2 or 4 characters of argument, then stays in that mode
until explicitly changed to another mode.
   The modes are as follows:

   MODE		args	octal	ctl	comment
   character	-	34	^\	leave graphics mode *
   set-point	4	35	^]	absolute coordinates
   long-vector	4	36	^^	relative, visible/invisible,
					solid/dotted
   short-vector	2	37	^_	visible vectors only
 
 Notes:
 * Character mode is entered by receipt of any ASCII "control"
character,   and the control function (eg CR, FF) is also executed.
  An ARDS does not have a control function associated with the ASCII
character   34 (GS, ^\)
 ** short vectors are nice "fast" ways of doing curves, especially over
slow TTY lines.
 
   Argument characters are in the range 100 <_ a <_ 177 (@ to DEL)
 
 SETPOINT ABSOLUTE FORMAT
 
   --35--  --x1--  --x2--  --y1--  --y2--  --**--
 
 X and Y coordinate information are sign-magnitude numbers
 x1, y1 are the low order bits;  x2, y2 are high order bits
 
 x1 = < |X| & 37 > _ 1 <ifl x, + 1> + 100
 
2i.e: shift left 1; if < 0 add 1; then add 100

 x2 = < |X| _ -5 > & 37 + 100
 
 y1 like x1
 
 y2 like x2

** since setpoints do not plot, it is not useful to stay in setpoint
mode - this should be followed by an escape to character mode, or one
of the vector modes.
 
 LONG-VECTOR RELATIVE FORMAT
 
   --36--  --x1--  --x2--  --y1--  --y2--  --...--
 
 x1, y1 are like setpoint, only they specify relative coordianates
instead of absolute

 x2 ditto, + if invisible then 40
 
 y2 ditto, + if dotted then 40
 
 ... additional groups of four characters follow, doing more vectors,
until a  control character comes.
 
 SHORT-VECTOR RELATIVE FORMAT
 
   --37--  --x1--  --y1--  --...--
 
 x1, y1 are like setpoint
 
 note that only the low order character is sent for short vector, so
"invisible" or "dotted" may not be specified.
 
 note |x|, |y| < 40 (8)


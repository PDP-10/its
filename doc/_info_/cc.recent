18 April 1977

--- C ---

C is an implementation language, similar to BCPL except with data
types.  Further information is be available from Alan Snyder (AS@DM).
C is currently available only on DM and MC.

--- Compiling ---

CC is the C compiler command.  Usage is

	:CC file1.name file2.name ...

where the arguments are the path names of C source files which are to
be compiled.  Each file will be compiled in turn, and if the
compilation is successful, the resulting relocatable file will be
placed in the file file?.rel.  Arguments beginning with the '-'
character are taken to be compiler options.  Available options include:

	-c	compile only, do not assemble
	-g	do not delete MIDAS file
	-x	syntax check only
	-s	produce a symbol table listing
	-b	compile big function (FUNCTION TOO LARGE)

For example, the command

	:cc foo.c

would compile the C program in the file FOO C in the current
directory, and place the resulting relocatable program in the file
FOO REL.

--- Loading ---

Relocatable programs produced by the C compiler are loaded together
with the C support routines by using the STINKR loader.  In order
to load files FOO REL, BAR REL, and BLETCH REL and produce a
runnable file TS FOO, type the following to STINKR:

	x c/clib
	l foo
	l bar
	l bletch
	o ts.foo
	^@

The ^@ (ASCII NUL) terminates the teletype input file.  These
commands (minus the ^@) could also be written in a file, say
FOO STINKR, in which case one could invoke STINKR with FOO
as a JCL argument and STINKR would read the commands from the
command file.

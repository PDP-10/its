                                 DIDL Commands

(didl) enters the debugger.  It is entered automatically when stepping or
       when a breakpoint is hit.
(dstep form) starts stepping form.

n       indicates an optional numeric argument, typed before the command.
	1 is assumed if no argument is given.
-       - indicates the command will take a negative argument.
	- without a number following it is taken to be -1.
form    indicates the command prompts for a form to be typed in.
func    indicates the command prompts for a function name.
bpt     indicates the command prompts for a breakpoint name.

Window Manipulation

  <        First window.
  >        Last window.
n V        n'th next window.
-nV	   n'th previous window.
  L        Redisplay.
  (        Show left parenthesis of current form.
  )        Show right parenthesis.


Frame Display

  F        Show the stack frames.
n P        Go up a stack frame.
n N        Go down a stack frame.
n J        Jump to stack frame n.
  .        Select the current stack frame and display the user code
           it corresponds to, if possible.


Looking at function definitions

  X func   Examine a user function.
n I        Move forward to the left parenthesis of the next form, no
           matter what depth it is at, making that form the current form. (In)
n O        Move backward to the previous form.  (Out)
n N        Move forward to the next form at this depth.  (Next)
n P        Move backward to the previous form at this depth.  (Previous)
  G func   Regrind a user function, even if it has been ground before.


Doing things in the current frame

  E form   Evaluate a form using the environment of the current frame.
  R form   Force the return of a given value from the current frame.


Stepping and breakpoints

  C        Continue from stepping or a breakpoint.
  ,        Continue from stepping or a breakpoint, but show the value
           that will be returned before continuing.
  ;        Step deeper, and show the value that will be returned.
  BS       Set a breakpoint at the current form.
  BC       Clear the breakpoint at the current form.
  BI form  Set an if-condition on the current breakpoint, or reenable the
	   previously set if-condition.  The breakpoint will break only
           if the condition is non-nil.
- BI	   Disable the if-condition.
  BA form  Set an action on the current breakpoint,
	   or reenable the previously set action.  The action will always
           be done, even if the breakpoint does not break because of a
           condition.
- BA	   Disable the action.
  BP form  Set a patch on the current breakpoint,
	   or reenable the previously set patch.  The value of the patch
           will be returned instead of the value given by the form at the
           breakpoint.  The form at the breakpoint will not be eval'd.
- BP	   Disable the patch.
  BT       Tell about the current breakpoint, listing its name, condition,
           action, and patch.
  BL       List the names of all breakpoints.
  BG bpt   Go to the given breakpoint, displaying where it is.


When-conditions

  WG	   Set a global when-condition, or reenable the previously set one.
	   If the given condition becomes non-NIL, a break will occur.
	   The condition is checked at all times.
- WG	   Disable the global when-condition.
  WL	   Set a local when-condition, or reeanble the previously set one.
	   The condition is checked only at the point at which it was set
	   and deeper into the stack.
- WL	   Disable the local when-condition.
  WT	   Tell about the global and local when-conditions.

Miscellaneous

  Q        Quit from DIDL.
  ?        Print a list of all commands, with short descriptions.
  ^L       Clear the Echo-Area.
  ^A       Turn off the split screen used by DIDL.  Useful if you accidently
           or deliberately get out of DIDL without it turning off the split
           screening.  Do not use while DIDL is running.
  ^E	   Enter DIDL. Same as typing "(didl)".
  <space>
  <cr>
  <lf>     are ignored.

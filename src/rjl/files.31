;LOGO FILE ROUTINES
;CALL:
;	MOVEI TA,TBL
;	PUSHJ P,X
;	JUMPN A,ERROR
;TBL IS A 2 (3 FOR FILPRR, FILPRO) WORD TABLE
;	TBL:	SIXBIT USER NAME
;	TBL+1:	POINTER TO FILE NAME 1,,POINTER TO FILE NAME 2
;	TBL+2:	(FILPRR, FILPRO ONLY) PROTECTION BITS
;ON RETURN FROM THE ROUTINES A=0 OR CONTAINS AN ERROR CODE
;	-1	SCREWED IN SOME STRANGE WAY(BUG OR SYS EATS AGAIN!)
;	1	NON-EX USER REQUESTED
;	2	FILE NOT FOUND
;	3	FILE ALREADY EXISTS(WRITE)
;	4	ATEMPTED I/O WITH NO FILE OPEN (BUG IN CALLING ROUTINES.
;	5	SOMEONE ELSE IS USEING THE NEEDED DIRECTORY (NOT FULLY IMPLEMENTED)
;	6	FILE DIRECTORY FULL (WRITE)
;	7	NO CORE AVAILABLE
;	10	PROTECTION VIOLATION
;SYMBOL DEFINITIONS FOR HIGH CORE(BLOCK 300)

FILDBF=FD
FILBTB=FD
FILNMB=FD+1
FILNME=FD+2
FILPTB=FD+3
FILPTE=FD+4
FILBIT=FD+20
FILNIC=FD+120
FILNMS=FD+200
FILPNT=FD+700
FILCCD=FD+1400
FILBUF=FD+1600
FILBLK=<FD/2000>_11+<FD/2000>

;PROTECTION BITS

FILPLS==1
FILPRD==2
FILPDL==4
READF:	MOVNI A,1	;IN CASE WE LOSE BADLY
	PUSHJ P,FILOPR	;GO OPEN FOR READ AND READ IN DIRECTORY
	PUSHJ P,FILOOK	;TRY TO FIND THE FILE
	JRST FILFNF	;DIDN'T FIND IT
	MOVEI TA,FILCCD	;GET POINTER INTO FILE DIRECTORY
	MOVEM TA,FILNFL	;FOR READC
	MOVE TA,(TA)	;GOBBLE THE POINTER
	MOVE TB,FD+1(TA)	;GET PROTECTION BITS
	TRNE TB,FILPRD	;SHOULD I LET HIM READ THIS FILE?
	JRST DELPRV	;NO, MAYBE MAKE IT LOOK LIKE FNF.
	MOVE TB,FD(TA)	;GET BLOCK NUMBER
IFDEF FILHED,PUSHJ P,FILHED	;FOR FHACK, HEADERS FOR FILES
	MOVEI A,1
	MOVEM A,FILOX	;SET FILE SWITCH TO READING
	MOVEI A,0	;GUESS WE'RE WINNING
READF1:	ANDI TB,7777
	MOVEM TB,FILACC	;SET BLOCK TO BE READ
	PUSHJ P,FILBIO	;READ IT
	MOVE TB,[440700,,FILBUF]	;SET UP BYTE POINTER
	MOVEM TB,FILBYT
	POPJ P,

READC:	SKIPG FILOX	;ARE WE READING?
	JRST READC2	;NO,SOMEONE BIT THE BAG
	ILDB CH,FILBYT	;READ CHAR
	CAIE CH,ENDFIL	;EOF CHAR?
	POPJ P,
	PUSH P,TB
	HRRZ TB,FILBYT
	CAIN TB,FILBUF+77	;WERE WE AT THE END OF THE BUFFER?
	JRST READC1	;YES,GO REFILL IT
READC3:	AOS FILNFL	;TO GET THE NEXT POINTER
	MOVE TB,FILNFL
	MOVE TB,(TB)	;GET THE POINTER THAT THE POINTER POINTED TO??
	JUMPE TB,READC4
	MOVE TB,FD(TB)	;GET ADDRESS OF FIRST BLOCK OF THIS FILE
IFDEF FILHED,PUSHJ P,FILHED	;FOR FHACK, HEADERS FOR FILES
	JRST READC5
READC4:	MOVEI TB,FILBLK	;NO, ITS A REAL EOF
	.CBLK TB,	;FLUSH THE DIRECTORY BLOCK
	.VALUE	;THE SYSTEM'S EATING IT
	SETZM FILOX	;NO FILE OPEN NOW
	SETZM FILBFX	;NO BUFFER NOW
	POP P,TB
	POPJ P,
READC1:	MOVE TB,FILBUF+77	;GET ADDRESS OF NEXT BLOCK
READC5:	ANDI TB,7777
	JUMPE TB,READC3	;ITS REALLY AN EOF
	PUSHJ P,READF1	;READ THE NEXT BLOCK
	POP P,TB
	JRST READC	;GO READ THE FIRST CHAR
READC2:	MOVEI A,4	;ATTEMPT TO READ, NO FILE OPEN
	MOVEI CH,ENDFIL
	POPJ P,
LISTFD:	MOVNI A,1	;SET LOSE FLAG, IF WE POPJ WITHOUT RESETING IT, WE LOST
	PUSHJ P,FILOPR	;GO OPEN THE FILE AND READ IN THE DIRECOTRY
	.CLOSE DCHN,	;ALL WE NEED IS THE DIRECTORY, CLOSE THE FILE
	MOVEI A,0	;NO WAY WE CAN LOSE NOW?
	MOVE TA,FILPTB	;START OF POINTER AREA
LISTF1:	CAML TA,FILPTE	;ARE WE AT THE END?
	JRST LISTFF	;YES, GO CLEAN UP
	MOVE TB,FD(TA)	;GET THE NAME POINTERS
	ADDI TA,2	;MOVE TO THE NEXT POINTERS
	JUMPE TB,LISTF1	;GO USE THE NEW POINTERS IF THESE AREN'T REAL
	MOVE TD,FD-1(TA)	;GET PROTECTION BITS
	SKIPE FILPLX
	JRST .+2
	TRNE TD,FILPLS	;SHOULD I MAKE LIKE ITS NOT REALLY THERE?
	JRST LISTF1	;YES, GO GET ANOTHER
	LDB TD,[301400,,TB]
	ADDI TD,FD
	PUSHJ P,FILATY	;PRINT THE FIRST FILE NAME
	PUSHJ P,TAB
	LDB TD,[141400,,TB]
	ADDI TD,FD
	PUSHJ P,FILATY	;GO PRINT THE SECOND FILE NAME
	PUSHJ P,TAB
	MOVE TB,FD-1(TA)	;GET THE TIME AND DATE FOR THIS FILE
	SETCAM TB,TC	;SKIP IF TIME AND DATE IS NEGATIVE
	TLNE TC,-1
	JRST LISTF3
	MOVEI CH,"-
	PUSHJ P,TYO	;TYPE DASH IF TIME AND DATE NOT KNOWN
	PUSHJ P,CRLF
	JRST LISTF1
LISTF3:	MOVE TC,[440600,,TB]
	MOVEI TE,3
LISTF2:	ILDB TD,TC	;GET HOUR, MINUTE OR SEC.
	PUSHJ P,FILNTY	;TYPE IT
	SOSG TE
	JRST .+4	;IF SEC DON'T TYPE COLON
	MOVEI CH,":
	PUSHJ P,TYO	;TYPE COLON
	JRST LISTF2
	PUSHJ P,TAB
	ILDB TD,TC	;GET DAY
	PUSHJ P,FILNTY	;TYPE IT
	MOVEI CH,40
	PUSHJ P,TYO	;TYPE SPACE
	ILDB TD,TC	;GET MONTH
	MOVEI TD,FILMNS-1(TD)	;GET DATE IN ASCII COMPLETE WITH SPACE
	PUSHJ P,FILATY 	;TYPE IT
	MOVEI TD,[ASCIZ \197\]
	PUSHJ P,FILATY	;TYPE PART OF YEAR
	ILDB TD,TC	;GET YEAR
	LSH TD,-5	;ONLY 1 BIT LONG (SIGH)
	ADDI TD,1	;PUT THIS IN FOR 71
	ADDI TD,60
	MOVE CH,TD
	PUSHJ P,TYO	;TYPE IT
	PUSHJ P,CRLF
	JRST LISTF1
FILMNS:	ASCII \JAN \
	ASCII \FEB \
	ASCII \MAR \
	ASCII \APR \
	ASCII \MAY \
	ASCII \JUN \
	ASCII \JUL \
	ASCII \AUG \
	ASCII \SEP \
	ASCII \OCT \
	ASCII \NOV \
	ASCII \DEC \

LISTFF:	.CLOSE DCHN,
	MOVEI TA,FILBLK
	.CBLK TA,
	MOVNI A,1
	POPJ P,

WRITEF:	SETZM FILLNG	;SET LENGTH TO ZERO
	MOVNI A,1	;IN CASE WE LOSE BADLY
	PUSHJ P,FILOPR	;READ IN THE DIRECORY
	MOVEM TA,FILTM1	;SAVE THE ARG
	PUSHJ P,FILOOK	;SEE IF THE FILE ALREADY EXISTS
	JRST WRTEF1	;NO, GREAT
	MOVEI A,3	;YES, BARF
	JRST LISTFF	;GO CLEAN UP
WRTEF1:	MOVE TA,FILTM1
	MOVE TA,1(TA)	;GET POINTERS
	MOVEM TA,FILTM1	;SAVE THEM
	HRRZS TA	;GET POINTER TO SECOND FILE NAME
	PUSHJ P,FILNMF	;GO GET POINTER TO NAME
	EXCH TC,FILTM1	;SAVE POINTER INTO DIRECTORY, GET POINT ER TO FIRST FILE NAME
	HLRZ TA,TC
	PUSHJ P,FILNMF
	SETZB TB,TA
	DPB TC,[301400,,TB]	;START MAKING POINTER ENTRY, PUT IN SECOND NAME POINTER
	MOVE TC,FILTM1
	DPB TC,[141400,,TB]	;PUT IN FIRST NAME POINTER
	MOVE TD,FILBTB
	ADDI TD,FD
	HRLI TD,440100	;BYTE POINTER INTO BIT TABLE
	MOVNI TE,1
	ILDB TA,TD	;LOOK FOR A FREE BLOCK
	ADDI TE,1
	JUMPN TA,.-2
	MOVEI TA,1	;FOUND ONE
	DPB TA,TD	;ITS NOT FREE ANY MORE
	DPB TE,[1400,,TB]	;PUT IN ADDRESS, COMPLETING POINTER ENTRY
	MOVE TA,FILPTB
	MOVE TC,FD(TA)	;FIND A FREE PLACE FOR THE ENTRY
	ADDI TA,2
	JUMPN TC,.-2
	CAILE TA,1400
	JRST FILFUL
	CAML TA,FILPTE	;DID WE GO OFF THE END OF THE LIST?
	MOVEM TA,FILPTE	;YES, EXPAND IT
	SUBI TA,2
	MOVEM TB,FD(TA)	;PUT IN THE POINTER

	;FALLS THROUGH

	PUSH P,TA
	PUSH P,TB
	.RTIME TA,	;GET TIME OF DAY
	MOVE TB,[440600,,TA]	;PONITER INTO TIME
	MOVEI TE,0	;ZAP!
	PUSHJ P,FILSB	;INSERT HOUR
	LSH TE,6
	PUSHJ P,FILSB	;INSERT MINUTE
	LSH TE,6
	PUSHJ P,FILSB	;INSERT SEC
	LSH TE,6
	.RDATE TA,	;GET DATE
	ROT TA,30	;PUT YEAR AT THE END
	MOVE TB,[440600,,TA]	;ZOTS! YOU'RE APPONITED
	PUSHJ P,FILSB	;DAY
	LSH TE,6
	ROT TA,14	;BLETCH!
	PUSHJ P,FILSB	;MONTH
	ROT TA,14	;BLETCH!!
	LSH TE,6
	ANDI TA,1	;YEAR
	XORI TA,1
	LSH TA,5
	IOR TE,TA
	POP P,TB
	POP P,TA
	MOVEM TE,FD+1(TA)
	.RTIME TE,
	AOSN TE
	SETOM FD+1(TA)	;WE DON'T REALLY KNOW(ALL THAT HAIR FOR NOTHING!!)
	MOVEI TE,27
	ANDCAM TE,FD+1(TA)	;MAKE SURE PROTECT BITS ARE OFF


	ANDI TB,7777	;GET RID OF THE EXCESS CRAP
	MOVEM TB,FILACC	;SET THE ACCESS POINTER
	MOVE TA,[440700,,FILBUF]
	MOVEM TA,FILBYT	;SETUP THE CHARACTER POINTER
	MOVEI TA,473
	MOVEM TA,FILNCH	;SETUP CHARATER COUNT TO END OF BLOCK
	PUSHJ P,FILOPW	;OPEN FOR WRITE MODIFY
	SETOM FILOX	;FILE OPEN FOR READING
	MOVEI A,0	;WE WON
	POPJ P,


FILSB:	ILDB TC,TB
	ANDI TC,17
	IMULI TC,10.
	ILDB TD,TB
	ANDI TD,17
	ADD TC,TD
	IOR TE,TC
	POPJ P,
WRITEC:	AOS FILLNG
	SKIPL FILOX
	JRST READC2	;SOMEONE BIT THE BAG, THERE'S NO FILE OPEN FOR WRITEING
	CAIN CH,ENDFIL
	JRST WRTECE	;GO END THE FILE
	IDPB CH,FILBYT	;PUT CHARATCER INTO BUFFER
	SOSE FILNCH	;NUMBER OF CHARACTERS=0?
	POPJ P,
	PUSH P,TA	;GET SOME AC'S, WE HAVE TO FIND A NEW BLOCK
	PUSH P,TB
	PUSH P,TC
	MOVEI TC,0
	MOVE TA,FILBTB	;MAKE A BYTE POINTER INTO THE BIT TABLE
	ADD TA,[440100,,FD]
	MOVNI TB,1
	ADDI TB,1
	ILDB TC,TA	;LOOK FOR A FREE BLOCK
	JUMPN TC,.-2
	MOVEI TC,1
	DPB TC,TA	;ITS NOT FREE ANY MORE
	HRLI TB,<ENDFIL>_13
	MOVEM TB,FILBUF+77
	PUSHJ P,FILBIO
	ANDI TB,-1
	MOVEM TB,FILACC	;SETUP FOR NEXT ACCESS
	MOVE TA,[440700,,FILBUF]	;SETUP BYTE POINTER
	MOVEM TA,FILBYT
	MOVEI TA,473	;SETUP CHARACTER COUNT
	MOVEM TA,FILNCH
	POP P,TC
	POP P,TB
	POP P,TA
	POPJ P,

WRTECE:	IDPB CH,FILBYT
	SOSE FILNCH
	JRST WRTECE	;FILL OUT BLOCK WITH EOF CHARS
	SETZM FILBUF+77	;NO NEXT BLOCK
	PUSH P,TA
	PUSHJ P,FILBIO	;WRITE OUT BLOCK
	MOVE TA,[-1400,,FD]
	.ACCESS DCHN,[0]
	.IOT DCHN,TA	;WRITE OUT DIRECTORY
	SETZM FILOX	;NO FILE OPEN
	SETZM FILBFX	;NO BUFFER
	POP P,TA
	JRST LISTFF
DELETE:	MOVNI A,1	;IN CASE WE LOSE BADLY
	MOVE TB,1(TA)
	JUMPE TB,DELETA	;IF BOTH POINTERS ARE ZERO, DELETE ALL ALL
	PUSHJ P,FILOPR
	PUSHJ P,FILOOK	;GO LOOK UP FILE NAME
	JRST FILFNF	;GO BARF, ITS NOT THERE
	MOVEI A,FILCCD
DELET3:	MOVE TA,(A)	;FILE TO DELETE
	JUMPE TA,DELET2
	ADDI A,1	;POINT TO NEXT ONE
	MOVE TB,FD+1(TA)
	TRNE TB,FILPDL	;IS IT PROTECTED AGAINST DELETE?
	JRST DELPRV	;YES, EITHER PROTECT VIOLATE OR FNF.
	MOVE TB,FD(TA)	;GET ADDRESS OF FIRST BLOCK
	SETZM FD(TA)	;ZAP THE FILE NAME PONITERS
	SETZB TE,FD+1(TA)	;ZAP THE TIME AND DATE
	ANDI TB,7777	;GET JUST THE ADDRESS
DELET1:	MOVE TC,TB
	IDIVI TC,44	;CREATE A BYTE POINTER TO THE RIGHT BIT IN THE BIT TABLE
	MOVNS TD
	ADDI TD,43
	ROT TD,-6
	IOR TD,[100,,FD(TC)]
	ADD TC,FILBTB
	DPB TE,TD	;ZAP THE BIT (REMEMBER THAT AC WE CLEARED?)
	MOVEM TB,FILACC	;SET THE BLOCK TO BE ACCESSSED
	PUSHJ P,FILBIO	;GO INPUT THE RIGHT BLOCK
	MOVE TB,FILBUF+77	;GET ADDRESSS OF THE NEXTT BLOCK OF THIS FILE
	JUMPN TB,DELET1	;GO DELETE THE NEXT BLOCK IN THE FILE IF THERE IS ONE
	JRST DELET3
DELET2:	PUSHJ P,FILOPW	;GO OPEN FOR WRITEING
	MOVE TA,[-1400,,FILDBF]
	.IOT DCHN,TA	;WRITE OUT THE MODIFIYED FILE DIRECTORY
	MOVEI A,0	;INDICATE WE WON
	JRST LISTFF	;GO RELEASE CORE AND POPJ
DELPRV:	TRNN TB,FILPLS	;IF IT DOSN'T LIST, FAKE A FNF(SNICKER!)
	SKIPA A,[10]	;OTHERWISE IT'S A PROTECT VIOLATE
FILFNF:	MOVEI A,2	;INDICATE FILE NOT FOUND
	JRST LISTFF	;GO RELEASE CORE AND POPJ
DELETA:	MOVE TB,(TA)
	MOVEM TB,FILEO+1	;SETUP FOR USER NAME
	MOVE TB,[4000,,400000+FILBLK]
	.CBLK TB,	;GET CORE BLOCK
	JRST FILNC1	;CAN'T GET CORE
	MOVEI TB,7
	HRLM TB,FILEO	;SETUP FOR IMAGE BLOCK WRITE
	MOVEI TB,FILBIT-FD	;ADDRESS OF BIT TABLE
	MOVEM TB,FILBTB
	MOVEI TB,FILNMS-FD	;ADDRESS OF BEGINING AND END OF NAMES AREA
	MOVEM TB,FILNMB
	MOVEM TB,FILNME
	MOVEI TB,FILPNT-FD	;ADDRESS OF BEGINNING AND END OF POINTER AREA
	MOVEM TB,FILPTB
	MOVEM TB,FILPTE
	MOVSI TB,777700	;INTIALLY BUSY BLOCKS (FILE DIRECTORY)
	MOVEM TB,FILBIT
	.OPEN DCHN,FILEO	;OPEN A NEW FILE
	JRST .-1	;CAN'T POSSIBLY FAIL FOREVER(????)
	MOVE TB,[-1400,,FILDBF]
	.IOT DCHN,TB	;OUTPUT A FRESH, CLEAN FILE DIRECTORY
	MOVEI A,0	;WINNER!
	JRST LISTFF
FILPRO:	MOVEI A,10	;PROTECT VIOLATE
	SKIPN FILPLX	;IF THE FILES HAVE NOT BEEN UNLOCKED
	POPJ P,
	MOVNI A,1	;JUST IN CASE
	MOVEM TA,FILTM1
	PUSHJ P,FILOPR
	PUSHJ P,FILOOK
	JRST FILFNF	;REALLY NOT THER, I WOULN'T KID YOU.
	MOVE TA,FILTM1
	MOVE TB,2(TA)	;DESIRED PROTECT BITS
	ANDI TB,27	;JUST IN CASE
	MOVEI A,FILCCD
FILPR1:	MOVE TA,(A)	;NOTE THAT BITS MAY BE SET FOR MANY FILES
	JUMPE TA,DELET2	;END OF LIST(CAN'T HAPPEN FIRST TIME)
	ADDI A,1	;TO GET NEXT ONE
	MOVE TC,FD+1(TA)	;GET WORD WITH PROTECT BITS
	ANDCMI TC,27	;FLUSH OLD BITS
	IOR TC,TB	;NEW BITS
	MOVEM TC,FD+1(TA)	;DONE WITH THIS ONE
	JRST FILPR1

FILPRR:	MOVEI A,10	;PROTECTION VIOLATION
	SKIPN FILPLX	;IF LOCK NOT RELEASED
	POPJ P,
	MOVE TB,1(TA)
	TRNN TB,-1	;ALSO IF TRYING TO READ BITS FROM "ALL"
	POPJ P,
	TLNN TB,-1
	POPJ P,
	MOVNI A,1	;JUST IN CASE
	MOVEM TA,FILTM1
	PUSHJ P,FILOPR
	PUSHJ P,FILOOK
	JRST FILFNF
	MOVE TA,FILTM1
	MOVE TB,FILCCD	;POINTER TO FILE ENTRY
	MOVE TB,FD+1(TB)	;TIME DATE AND PROTECT BITS
	ANDI TB,27	;ONLY WANT PROTECT BITS
	MOVEM TB,2(TA)
	MOVEI A,0	;WINNER!!
	JRST LISTFF
FILOOK:	MOVEI TE,7777
	MOVEM TA,FILTEM	;STORE POINTER, WE NEED A LOT OF AC'S
	HRRZ TA,1(TA)	;GET POINTER TO FIRST FILE NAME
	JUMPN TA,FILOK7	;REALLY A POINTER?
	IOR TE,[77770000]
	MOVEI TC,0
	JRST FILOK8
FILOK7:	PUSHJ P,FILOKA	;GO TRY TO FIND FILE NAME
	POPJ P,		;LOSE, DON'T SKIP
FILOK8:	EXCH TC,FILTEM	;SAVE PONITER TO FILE NAME, GET POINTER TO BLOCK
	HLRZ TA,1(TC)	;GET SECOND FILE NAME
	JUMPN TA,FILOK9	;REALLLY A POINTER?
	IOR TE,[777700000000]	;NO, SET MASK
	MOVEI TC,0
	JRST FILK10
FILOK9:	PUSHJ P,FILOKA	;GO LOOK IT UP
	POPJ P,		;LOSE
FILK10:	MOVEI TB,0
	DPB TC,[301400,,TB]	;PUT ADDRESS OF SECOND FILE NAME IN THE RIGHT PLACE
	MOVE TA,FILTEM	;GET BACK THE POINTER TO THE FIRST FILE NAME
	DPB TA,[141400,,TB]	;PUT IT IN THE RIGHT PLACE
	MOVE TA,FILPTB	;GET THE ADDRESS OF THE BEGGINNING OF THE POINTER AREA
	MOVEI TC,FILCCD	;PLACE TO PUT HE FIRST POINTER
FILOK6:	CAML TA,FILPTE	;HAVE WE HIT HE END OF THE POINTERS?
	JRST FILK12
	MOVE TD,FD(TA)	;GET NAME PONITERS
	JUMPE TD,FILK13
	ANDCM TD,TE	;GET RID OF ADDRESS PART
	CAMN TD,TB	;ARE THEY THE POINTERS WE'RE LOOKING FOR?
	JRST FILK11
FILK13:	ADDI TA,2	;NO, LOOK AT THE NEXT ONES
	JRST FILOK6
FILK11:	MOVEM TA,(TC)
	AOJA TC,FILK13
FILK12:	SETZM (TC)
	CAIE TC,FILCCD
	AOS (P)
	POPJ P,
FILOKA:	MOVE TB,TA	;IF THE POINTER IS ZERO, ITS A MATCH
	PUSH P,A	;WE NEED ALL THE ACS WE CAN GET!
	PUSH P,TE
	ADD TB,[MOVE TB,]	;IN THE COMPILED CODE, THIS WILL GET ONE WORD
				;OF THE THING WE'RE LOOKING FOR
	MOVE TC,[CAME TB,FD(TC)]	;THIS WILL CHECK FOR A MATCH
	MOVE TD,[JRST FILOK4]	;AND THIS WILL INDICATE A LOSS
	MOVEI A,FILCCD	;FIRST WORD OF COMPILED CODE
FILOK1:	MOVEM TB,(A)	;MOVE
	MOVEM TC,1(A)	;CAME
	MOVEM TD,2(A)	;JRST
	ADDI A,3	;POINT TO NEXT WORD TO BE COMPILED
	MOVE TE,(TA)	;CURRENT WORD TO BE COMPARED
	TRNN TE,276	;IS IT THE LAST WORD TO BE COMPARED?
	JRST FILOK2	;YES, GO TERMINATED COMPILED CODE
	ADDI TA,1	;LOOK AT NEXT WORD IN FILE NAME
	ADDI TB,1	;MAKE THE MOVE LOOK THERE TO
	AOJA TC,FILOK1	;MAKE THE CAME LOOK AT THE NEXT WORD IN THE TABLE
FILOK2:	HRRI TD,FILPJ1	;LAST INSTRUCTION POPJ1'S
	MOVEM TD,(A)
	POP P,TE
	POP P,A
	MOVE TC,FILNMB	;FIRST WORD OF FILE NAMES
FILOK3:	CAML TC,FILNME	;ARE WE AT THE END OF THE FILE NAMES?
	POPJ P,		;YES, DON'T SKIP
	JRST FILCCD	;NO, GO DO COMPILED CODE
FILOK4:			;GETS HERE IF NO MATCH, OTHERWISE POPJ1'S IN COMPILED CODE
	MOVE TD,FD(TC)
	TRNE TD,276	;LOOK FOR END OF A FILE NAME
	AOJA TC,FILOK4
	AOJA TC,FILOK3	;FOUND END, POINT AT THE NEXT ONE AND SEE IF IT MATCHES
FILNMF:	PUSH P,TA
	PUSHJ P,FILOKA	;GO SEE IF THE NAME IS ALREADY THERE
	JRST FILNM1	;NO, GO CREATE IT
	POP P,TA
	POPJ P,	;YES, THAT'S IT
FILNM1:	MOVE TD,FILNME	;POINT AT THE END OF THE CURRENT NAMES
	MOVE TC,TD	;THAT'S WHERE THE NEW NAME WILL BE
	MOVE TA,(P)	;PLACE TO FIND NAME
FILNM3:	MOVE TE,(TA)	;GET A WORD OF THE NAME
	TRZ TE,1
	MOVEM TE,FD(TD)	;STORE IT
	TRNN TE,276	;IS IT HE LAST WORD OF THE NAME
	JRST FILNM2
	ADDI TA,1
	AOJA TD,FILNM3
FILNM2:	POP P,TA
	CAML TD,FILPTB	;DID THE NAME FIT INTO THE AVAIL ABLE NAME SPACE?
	JRST FILNM4	;NO, GO LOSE
	ADDI TD,1
	MOVEM TD,FILNME	;YES, SET NEW END OF ACTIVE NAMES
	POPJ P,
FILNM4:	POP P,TA	;WE WANT TO POP TWO LEVELS
FILFUL:	MOVEI A,6	;FILES FULL
	JRST LISTFF
FILNTY:	PUSH P,TE
	IDIVI TD,10.
	ADDI TE,60
	ADDI TD,60
	MOVE CH,TD
	PUSHJ P,TYO
	MOVE CH,TE
	POP P,TE
	JRST TYO

FILATY:	HRLI TD,440700
	ILDB CH,TD
	JUMPE CH,FILPJ
	PUSHJ P,TYO
	JRST .-3

FILPJ1:	AOS (P)
FILPJ:	POPJ P,
FILOPR:	MOVEI TB,6
	HRLM TB,FILEO	;SET TO OPEN IN BLOCK INPUT
	MOVE TB,@TA
	MOVEM TB,FILEO+1	;SET TO OPEN REQUESTE D USER
	.OPEN DCHN,FILEO
	JRST FILOSE	;GO SEE WHY WE LOST
	MOVE TB,[4000,,400000+FILBLK]
	.CBLK TB,	;GET THE BLOCK FOR HACKING
	JRST FILNOC
	SETOM FILBFX
	MOVE TB,[-1400,,FILDBF]
	.IOT DCHN,TB	;READ IN THE FILE DIRECTORY
	POPJ P,
FILNOC:	POP P,TB	;WE WANT TO POP TWO LEVELS
FILNC1:	MOVEI A,7	;INDICATE CAN'T GET CORE
	POPJ P,
FILOSE:	POP P,TB	;WANT TO POP TWO LEVELS
	MOVEI A,1	;FOR NOW, ASSUME THE FILES NOT THERE
	POPJ P,

FILOPW:	MOVEI TB,100007	;IMAGE BLOCK OUTPUT, WRITE OVER MODE
	HRLM TB,FILEO
	.CALL FILSTB	;SET DUMP BIT=0 (SYS FAILS TO DO IT)
	SKIPA
	.OPEN DCHN,FILEO
	SKIPA A,[5]	;FOR NOW, ASSUME DIRECTORY REALLY NOT THERE
	POPJ P,
	POP P,TB	;WE WANT TO POP TWO LEVELS
	JRST LISTFF

FILSTB:	SETZ
	SIXBIT /SDMPBT/
	[DCHN]
	SETZ [0]
FILBIO:	PUSH P,TA
	MOVE TA,FILACC	;GET ADDRESS WANTED
	LSH TA,6	;MULTIPLY BY 100
	.ACCESS DCHN,TA
	MOVE TA,[-100,,FILBUF]
	.IOT DCHN,TA	;GET THE BLOCK(OR WRITE IT OUT)
	POP P,TA
	POPJ P,


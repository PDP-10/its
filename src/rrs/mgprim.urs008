
<PACKAGE "MGPRIM">
<ENTRY BOOK DRAW DTXT ECHO ERASEP ERASET L LAYOUT LINE MARKP MARKT 
       MIGSSEND
       MOVE OPENP OPENT PAGE PICTUR PLOTV POINT READTB SETORG TABLE 
       TBCON TRANS TXT>
<USE "DISPLA">
<USE "SMCELLS">
 
<MOBLIST BOOK>
<BLOCK (<GET MIGS OBLIST><ROOT>)>
XORG YORG ABSOLUTE-POSITION TENEX PHYCEN
<ENDBLOCK>

<BLOCK (<GET DISPCOM OBLIST><ROOT>)>
COMSWITCH
<ENDBLOCK>

<BLOCK (!.OBLIST <GET MIGS OBLIST> <GET DISPCOM OBLIST>)>
<SET ABSOLUTE-POSITION '![0 0]>
<SETG XORG 0>
<SETG YORG 0>
<GDECL (XORG YORG) FIX>
<SET REDEFINE T>

<DEFINE SETORG ("OPTIONAL" (X 0) (Y 0))
	#DECL ((X Y) FIX
	       (VALUE) <UVECTOR [REST FIX]>
		(COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH ><APPLY ,STRG .X .Y> ![0])
	      (T ![<SETG XORG .X> <SETG YORG .Y>])>>



<DEFINE LAYOUT!-BOOK ("OPTIONAL"(LINES 25) (LLONG 72) (PIC 127) 
				(PLONG 127)(FIG 1) (FLONG 40)
				(GRF 1) (GLONG 100) (TBL 5)
				(TLONG 10) (CHAR 0))
	#DECL (( LINES LLONG PIC PLONG FIG FLONG GRF GLONG TBL 
		 TLONG CHAR) FIX)
	<MIGSSEND 4 %<ASCII !"O> .LINES .LLONG .PIC .PLONG
		  .FIG .FLONG .GRF .GLONG .TBL .TLONG .CHAR>>

<DEFINE OPENP!-BOOK ("OPTIONAL" (NUM 0))
	#DECL ((NUM) FIX)
	<MIGSSEND 4 %<ASCII !"P> .NUM>>

<DEFINE MARKP!-BOOK (L)
	#DECL ((L ) FIX
               (VALUE) ATOM)
	<MIGSSEND 4
		  %<ASCII !"L>
		  .L>
	,NULL>


<DEFINE ERASEP!-BOOK ()
	<MIGSSEND 4 %<ASCII !"E> %<ASCII !"P>>>



<DEFINE	VECTR!-BOOK (X Y "TUPLE" Z)
	#DECL ((X  Y) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH><APPLY ,DRL .X .Y !.Z>)
	      (T <MIGSSEND 4 %<ASCII !"V>>
		 <CORD .X><CORD .Y>)>
	,NULL>

<DEFINE SETPT!-BOOK (X Y "TUPLE" Z)
	#DECL ((X Y)<OR FIX FLOAT>
	       (Z)<TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH)<SPECIAL ANY>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH><APPLY ,STP .X .Y !.Z>)
	      (T <MIGSSEND 4 %<ASCII !"S>>
		 <CORD .X><CORD .Y>)>
	,NULL>

<DEFINE	PICTURE!-BOOK (P L)
	#DECL ((P L)<OR FIX FLOAT>
		(COMSWITCH) <SPECIAL ANY>
		(VALUE) ATOM)
	<COND (<BOUND? COMSWITCH> <APPLY ,PCT .P .L>)
	      (T <MIGSSEND 4
			   %<ASCII !"C>
			   %<ASCII !"P>
			   .P .L>)>
	,NULL>

<DEFINE MOVE!-BOOK (X Y)
	#DECL ((X Y) FIX
	       (VALUE) ATOM)
	<MIGSSEND 4
		  %<ASCII !"M>>
	<CORD .X><CORD .Y>
	,NULL>

<DEFINE DOT!-BOOK (X Y)
	#DECL ((X Y) FIX
	       (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"D>>
	<CORD .X> <CORD .Y>
	,NULL>



<DEFINE CORD (X "AUX" T1 L H)
	#DECL((X T1 L H) FIX
	      (VALUE) ATOM)
	<SET T1 <- .X <* </ .X 8192> 8192>>>
	<COND (<L? .T1 .0><SET T1 <+ .T1 16384>>)>
	<SET H </ .T1 128>>
	<SET L <- .T1 <* .H 128>>>
	<MIGSSEND .H .L>
	,NULL>


<DEFINE BITSB!-BOOK (B1 B2 B3 B4)
	#DECL((B1 B2 B3 B4) FIX
	      (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"B> .B1 .B2 .B3 .B4>>

<DEFINE OPENF!-BOOK (F)
	#DECL ((F) FIX
	       (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"F> .F>
	,NULL>

<DEFINE OPENT!-BOOK ("OPTIONAL" (I 0))
	#DECL ((I VALUE) FIX)
	<MIGSSEND 4 %<ASCII !"T> .I>
	.I>

<DEFINE MARKT!-BOOK ("OPTIONAL" (T 0))
	#DECL ((T VALUE) FIX)
	<MIGSSEND 4 %<ASCII !"K> .T>
	.T>

<DEFINE ERASET!-BOOK ()
	#DECL ((VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"E> %<ASCII !"T>>
	,NULL>

<DEFINE TABLE!-BOOK (P "OPTIONAL" (L 0))
	#DECL ((P L) FIX (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"C> %<ASCII !"T> .P .L>
	,NULL>

<DEFINE TXT!-BOOK (S)
	#DECL ((S)STRING (VALUE)ATOM)
	<MIGSSEND 4
		  %<ASCII !"Q>
		  <LENGTH .S>>
	<PRINC .S>
	,NULL>



<DEFINE MARKF!-BOOK (L)
	#DECL ((L) FIX (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"I> .L>
	,NULL>

<DEFINE ERASF!-BOOK () <MIGSSEND 4 %<ASCII !"E> %<ASCII !"F>>>

<DEFINE DOTFIG!-BOOK (P L)
	#DECL ((P L) FIX (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"C> %<ASCII !"D> .P .L>
	,NULL>

<DEFINE VECFIG!-BOOK (P L)
	#DECL ((P L) FIX (VALUE) ATOM)
	<MIGSSEND 4 %<ASCII !"C> %<ASCII !"V> .P .L>
	,NULL>

<DEFINE JOT!-BOOK (X Y)
	#DECL ((X Y)FIX (VALUE) ATOM)
	<MIGSSEND 4 74 .X .Y>
	,NULL>

<DEFINE NOJOT!-BOOK (X Y)
	#DECL ((X Y) FIX (VALUE) ATOM)
	<MIGSSEND 4 78 .X .Y>
	,NULL>

<DEFINE MIGSSEND ("TUPLE" A)
	#DECL ((A) <TUPLE [REST FIX]>)
	<MAPF <> ,IMAGE .A>
	,NULL>>

<COND (.TENEX 



<SETG READTB
      <FIXUP!-RSUBRS '[
#CODE ![29662117965 24159191474 17215782913 17322475584 9126805568 17322475585 
9126805575 23882366978 -15015605056 9126805576 26071793666 23088857102 
17330864134 23088857106 28222685201 17330864133 23088857106 17330864130 
9126805545 17322475584 17339252744 9126805653 23088857126 23849036801 
23848812546 9126805653 23088857126 23849036801 23848812546 9126805653 
23088857126 23849036801 23848812546 17322475585 24016584706 9126805576 293838286
23085677464 17322475585 24016584706 9126805576 23852482566 23852482567 277057214
23085677464 7201294908 0 2!]
		       READTB
		       #DECL ("VALUE" <UVECTOR FIX FIX FIX> FIX)
		       "NIN ERROR "]
		     '(51
		       INTFLG!-MUDDLE
		       77
		       (1)
		       LCKINT!-MUDDLE
		       434
		       (2)
		       $TLOSE!-MUDDLE
		       224256
		       (32 28 24)
		       UVECTOR
		       237006
		       (37)
		       FINIS!-MUDDLE
		       228248
		       (45 38)
		       ERROR
		       233150
		       (44))>>




<SETG TBCON
      <FIXUP!-RSUBRS '[
#CODE ![17322475585 9126805575 23882366978 -15015608128 9126805576 17330864131 
9126805545 17199005697 9126805545 24016584706 9126805576 17190617088 17199005697
23085678206 7398560256 0 2!]
		       TBCON
		       #DECL ("VALUE" FIX FIX)]
		     '(49 FINIS!-MUDDLE 228990 (14))>>


<SETG ECHO
      <FIXUP!-RSUBRS '[
#CODE ![17322475585 9126805575 17207394305 28214296583 -10720638976 9126805576 
23088857097 -15015605248 9126805576 17199005697 17188483073 23085678206 
5865439296 0 2!]
		       ECHO
		       #DECL ("VALUE" FIX FIX)]
		     '(49
		       $TLOSE!-MUDDLE
		       225280
		       (11)
		       FINIS!-MUDDLE
		       228990
		       (12))>>



,NULL )>







<DEFINE MOVE (X Y "TUPLE" Z 
		  "AUX" (ABSOLUTE-POSITION .ABSOLUTE-POSITION))
	#DECL ((X Y) FIX
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
		(VALUE) ATOM
		(COMSWITCH) <SPECIAL ANY>
		(ABSOLUTE-POSITION)<UVECTOR FIX FIX>)
	<COND (<BOUND? COMSWITCH> <APPLY ,MV .X .Y !.Z>)
	      (T <PUT .ABSOLUTE-POSITION 1 0>
		 <PUT .ABSOLUTE-POSITION 2 0>
		 <MIGSSEND 4
			   %<ASCII !"S>>
		 <TRANS .X .Y>) >
	,NULL>

<DEFINE DRAW (X Y "TUPLE" Z)
	#DECL (	(X Y) <OR FIX FLOAT>
		(Z) <TUPLE [REST <OR FIX FLOAT>]>
		(VALUE) ATOM
		(COMSWITCH) <SPECIAL ANY>)
	<COND (	<BOUND? COMSWITCH><APPLY ,DR .X .Y !.Z>)
	      (T <MIGSSEND 4
			   %<ASCII !"V>
			   ><TRANS .X .Y>)>
	,NULL>

<DEFINE POINT (X Y "TUPLE" Z
		   "AUX" (ABSOLUTE-POSITION .ABSOLUTE-POSITION))
	#DECL ((X Y) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (VALUE) ATOM
	       (ABSOLUTE-POSITION) <UVECTOR FIX FIX>
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,PT .X .Y !.Z>)
	      (T <PUT .ABSOLUTE-POSITION 1 0>
		 <PUT .ABSOLUTE-POSITION 2 0>
		 <MIGSSEND 4 %<ASCII !"D>>
		 <TRANS .X .Y>)>
	,NULL>



<COND (<NOT .TENEX>


 ,NULL)>

<DEFINE LINE (X0 Y0 X1 Y1 "TUPLE" Z
			  "AUX"(ABSOLUTE-POSITION .ABSOLUTE-POSITION))
	#DECL ((X0 Y0 X1 Y1) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>
	       (ABSOLUTE-POSITION) <UVECTOR FIX FIX>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH><APPLY ,LN .X0 .Y0 .X1 .Y1 !.Z>)
	      (T <PUT .ABSOLUTE-POSITION 1 0>
		 <PUT .ABSOLUTE-POSITION 2 0>
		 <MIGSSEND 4 %<ASCII !"S>>
		 <TRANS .X0 .Y0>
		 <MIGSSEND 4 %<ASCII !"V>>
		 <TRANS .X1 .Y1> )>
	,NULL>


<DEFINE TRANS (X Y
	       "AUX" (DX1 <+ .X ,XORG>)
		     (DY1 <+ .Y ,YORG>)
		     (ABSOLUTE-POSITION .ABSOLUTE-POSITION)
		     (DX <- .DX1 <1 .ABSOLUTE-POSITION>>)
		     (DY <- .DY1 <2 .ABSOLUTE-POSITION>>))
	#DECL ((X Y DX DY DX1 DY1 ) FIX
	       (ABSOLUTE-POSITION) <UVECTOR FIX FIX>
	       (VALUE) ATOM)
	<PUT .ABSOLUTE-POSITION 1 .DX1>
	<PUT .ABSOLUTE-POSITION 2 .DY1>
	<CORD .DX>
	<CORD .DY>
	,NULL>

<DEFINE PLOTV (X Y "TUPLE" Z)
	#DECL ((X Y) <OR LIST VECTOR UVECTOR>
	       (Z) <TUPLE [REST <OR LIST VECTOR UVECTOR>]>
	       (VALUE) ATOM
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH><APPLY ,PV .X .Y !.Z>)
	      (T 
		 <COND (<TYPE? .X LIST>
		        <PROG ((X .X) (Y .Y))
			      #DECL ((X Y) <LIST [REST FIX]>)
                 	      <MOVE <1 .X> <1 .Y>>
		              <MAPF <>
		       		    ,DRAW
		       		    <REST .X>
		       		    <REST .Y>> >)
		       (<TYPE? .X VECTOR>
			<PROG ((X .X) (Y .Y))
			      #DECL (( X Y) <VECTOR [REST FIX]>)
			      <MOVE <1 .X> <1 .Y>>
		              <MAPF <>
		       		    ,DRAW
		       		    <REST .X>
		       		    <REST .Y>> >)
		      (T
		       <PROG ((X .X) (Y .Y))
			     #DECL ((X Y) <UVECTOR [REST FIX]>)
			     <MOVE <1 .X> <1 .Y>>
		  	     <MAPF <>
		       		   ,DRAW
		       		   <REST .X>
		       		   <REST .Y>> >)> )>
	,NULL>

<DEFINE DTXT (X Y T "OPTIONAL" L)
	#DECL ((X Y T L) FIX (VALUE) ATOM)
	<SETPT!-BOOK .X .Y>			;"MUST BE IN A PICTURE"
	<COND (<ASSIGNED? L> <TABLE!-BOOK .T .L>)
	      (T <TABLE!-BOOK .T>)>
	,NULL>

<DEFINE PAGE () <MIGSSEND 12> <OPENP 0> <MARKP 0> <ERASEP!-BOOK>>

<DEFINE L () <LAYOUT 10 72 12 127 1 1 1 1 10 15>>


<SETG LAYOUT ,LAYOUT!-BOOK>
<SETG OPENP ,OPENP!-BOOK>
<SETG MARKP ,MARKP!-BOOK>
<SETG ERASEP ,ERASEP!-BOOK>
<SETG PICTUR ,PICTURE!-BOOK>
<SETG TABLE ,TABLE!-BOOK>
<SETG OPENT ,OPENT!-BOOK>
<SETG MARKT ,MARKT!-BOOK>
<SETG ERASET ,ERASET!-BOOK>
<SETG TXT ,TXT!-BOOK>

<SET REDEFINE <>>
<ENDBLOCK>
<ENDPACKAGE>


<PACKAGE "MIGSMN">

<ENTRY PROJ SETPROJ LINE3D MOVE3D DRAW3D POINT3D
       PLOTV3D ELIPSE CIRCLE DSKIMAGE M3DSK SFXYP
       FNCTG M3D MIJPL PARAG POLRP TENEX  >
<USE "SMCELLS">
<USE "DISPLA">
<BLOCK (<MOBLIST DISPCOM> <ROOT>)>
COMSWITCH
<ENDBLOCK>

<BLOCK (<MOBLIST MIGS> <ROOT>)>
TRMTYP DASH PROJX PROJY PROJZ
<ENDBLOCK>

<BLOCK (!.OBLIST <GET DISPCOM OBLIST> <GET MIGS OBLIST>)>

<COND (<GASSIGNED? TRMTYP> "OK")
      (YOU-LOSE <ERROR PACKAGES.LOADED.IN.THE.WRONG.ORDER.START.OVER>)>
<COND (<=? <SET FOO ,TRMTYP> !\T> <USE "MTPRIM">)
      (<=? .FOO !\A> <USE "MAPRIM">)
      (<=? .FOO !\I> <USE "MAPRIM">)
      (<=? .FOO !\G> <USE "MGPRIM">)
      (<=? .FOO !\V> <USE "MVPRIM">)
      (T <ERROR HELP-THIS-ISNT-POSSIBLE>)>


<SETG DASH 0>
<GC-MON <>>

<SET REDEFINE T>


<DEFINE PROJ (X Y Z
	      "OPTIONAL" (ZE ,PROJZ)
	      "AUX" (X1 <FLOAT .X>)
		    (Y1 <FLOAT .Y>)
		    (Z1 <FLOAT .Z>)
		    (PF </ .ZE <+ .ZE .Z1>>)
		    (PX ,PROJX)
		    (PY ,PROJY))
	#DECL ((X Y Z) <OR FIX FLOAT>
	       (X1 Y1 Z1) FLOAT
	       (ZE PF PX PY) FLOAT
	       (VALUE) <LIST FIX FIX>)
	(<FIX <+ .PX <* .PF <- .X1 .PX>>>>
	 <FIX <+ .PY <* .PF <- .Y1 .PY>>>>)>

<DEFINE SETPROJ ("OPTIONAL" (X 500.00000) (Y 400.00000) (Z 1024.0000))
	#DECL ((X Y Z) <OR FIX FLOAT>
	       (VALUE) <LIST [REST FLOAT]>
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,STPJ .X .Y .Z> ())
	      (ELSE
	       (<SETG PROJX <FLOAT .X>>
		<SETG PROJY <FLOAT .Y>>
		<SETG PROJZ <FLOAT .Z>>))>>

<SETPROJ>

<DEFINE LINE3D (X0 Y0 Z0 X1 Y1 Z1)
	#DECL ((X0 Y0 Z0 X1 Y1 Z1) <OR FIX FLOAT>
	       (VALUE) ATOM
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH>
	       <APPLY ,LN .X0 .Y0 .Z0 .X1 .Y1 .Z1>)
	      (ELSE
	       <APPLY ,LINE !<PROJ .X0 .Y0 .Z0!> !<PROJ .X1 .Y1 .Z1!>>)>
	,NULL>

<DEFINE MOVE3D (X Y Z)
	#DECL ((X Y Z) <OR FIX FLOAT>
	       (VALUE) ATOM
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,MV .X .Y .Z>)
	      (ELSE <APPLY ,MOVE !<PROJ .X .Y .Z!>>)>
	,NULL>

<DEFINE DRAW3D (X Y Z)
	#DECL ((X Y Z) <OR FIX FLOAT>
	       (VALUE) ATOM
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,DR .X .Y .Z>)
	      (ELSE <APPLY ,DRAW !<PROJ .X .Y .Z!>>)>
	,NULL>

<DEFINE POINT3D (X Y Z)
	#DECL ((X Y Z) <OR FIX FLOAT>
	       (VALUE) ATOM
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,PT .X .Y .Z>)
	      (ELSE <APPLY ,POINT !<PROJ .X .Y .Z!>>)>
	,NULL>

<DEFINE PLOTV3D (X Y Z "AUX" X1)
	#DECL ((X Y Z) <OR LIST VECTOR UVECTOR>
	       (X1) <UVECTOR [REST <LIST FIX FIX>]>
	       (VALUE) ATOM
	       (COMSWITCHS) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,PV .X .Y .Z>)
	      (ELSE
	<COND (<TYPE? .X VECTOR>
		<PROG ((X .X) (Y .Y) (Z .Z))
		      #DECL ((X Y Z) <VECTOR [REST <PRIMTYPE WORD>]>)
		      <COND (<NOT <AND <==? <LENGTH .X> <LENGTH .Y>>
				       <==? <LENGTH .Y> <LENGTH .Z>>>>
		             <ERROR "LENGTHS NOT EQUAL" "PLOTV3D">)>
	       	      <SET X1 <MAPF ,UVECTOR ,PROJ .X .Y .Z>>
	              <APPLY ,PLOTV <MAPF ,UVECTOR 1 .X1>
				    <MAPF ,UVECTOR 2 .X1>>>)

	      (<TYPE? .X LIST>
	       <PROG ((X .X) (Y .Y) (Z .Z))
		     #DECL ((X Y Z) <LIST [REST <PRIMTYPE WORD>]>)
	   	     <COND (<NOT <AND <==? <LENGTH .X> <LENGTH .Y>>
				      <==? <LENGTH .Y> <LENGTH .Z>>>>
		            <ERROR "LENGTHS NOT EQUAL" "PLOTV3D">)>
	       	     <SET X1 <MAPF ,UVECTOR ,PROJ .X .Y .Z>>
	             <APPLY ,PLOTV <MAPF ,UVECTOR 1 .X1> 
				   <MAPF ,UVECTOR 2 .X1>>>)
	      (<TYPE? .X UVECTOR>
	       <PROG ((X .X) (Y .Y) (Z .Z))
		     #DECL ((X Y Z) <UVECTOR [REST <PRIMTYPE WORD>]>)		
		     <COND (<NOT <AND <==? <LENGTH .X> <LENGTH .Y>>
				      <==? <LENGTH .Y> <LENGTH .Z>>>>
		            <ERROR "LENGTHS NOT EQUAL" "PLOTV3D">)>
	             <SET X1 <MAPF ,UVECTOR ,PROJ .X .Y .Z>>
	             <APPLY ,PLOTV <MAPF ,UVECTOR 1 .X1> 
				   <MAPF ,UVECTOR 2 .X1>>>)>)>
	,NULL>

<DEFINE ELIPSE (X Y A B P
		"AUX" (I </ 6.2830000 <FLOAT .P>>) (H <+ .I 6.2830000>))
	#DECL ((I H) FLOAT (X Y A B P) FIX (VALUE) ATOM)
	<APPLY ,MOVE <+ .X .A> .Y>
	<REPEAT ((Q .I)
		 (A1 <FLOAT .A>)
		 (B1 <FLOAT .B>)
		 (X1 <FLOAT .X>)
		 (Y1 <FLOAT .Y>))
		#DECL ((X1 Y1 A1 B1 Q) FLOAT (VALUE) ATOM)
		<APPLY ,DRAW
		       <FIX <+ .X1 <* .A1 <COS .Q>>>>
		       <FIX <+ .Y1 <* .B1 <SIN .Q>>>>>
		<COND (<G? <SET Q <+ .Q .I>> .H> <IMAGE 13> <RETURN ,NULL>)>>>

<DEFINE CIRCLE (X Y R P "AUX" (I </ 6.2830000 <FLOAT .P>>) (H <+ 6.2830000 .I>))
	#DECL ((I H) FLOAT (X Y R P) FIX (VALUE) ATOM)
	<APPLY ,MOVE <+ .X .R> .Y>
	<REPEAT ((Q .I) (X1 <FLOAT .X>) (Y1 <FLOAT .Y>) (R1 <FLOAT .R>))
		#DECL ((X1 Y1 R1 Q) FLOAT (VALUE) ATOM)
		<APPLY ,DRAW
		       <FIX <+ .X1 <* .R1 <COS .Q>>>>
		       <FIX <+ .Y1 <* .R1 <SIN .Q>>>>>
		<COND (<G? <SET Q <+ .I .Q>> .H> <IMAGE 13> <RETURN ,NULL>)>>>

<DEFINE DSKIMAGE ("OPTIONAL" (FILE <STRING <SNAME> ";M3D MIGPUT">)
		  "AUX" (CHN <OPEN "READ" .FILE>))
	#DECL ((FILE) STRING
	       (CHN) <OR CHANNEL FALSE>
	       (VALUE) <OR ATOM FALSE>)
	<COND (.CHN
	       <REPEAT A ()
			#DECL ((A) ACTIVATION)
		       <IMAGE <ASCII <READCHR .CHN '<RETURN <CLOSE .CHN> .A>>>>>
	       <PRINC <ASCII 7>>
	       ,NULL)
	      (ELSE #FALSE (DS NAME ERROR))>>

<DEFINE M3DSK (MATRIX
	       "OPTIONAL" (FILE <STRING <SNAME> ";M3D MIGPUT">)
	       "AUX" (L <LENGTH <1 .MATRIX>>)
		     (CHN <OPEN "PRINT" .FILE>)
		     (DX </ 420 .L>)
		     (DY </ 300 .L>)
		     (DY1 .DY)
		     (J -1)
		     (XV <IVECTOR .L '<* .DX <SET J <+ .J 1>>>>)
		     (MAX <1 .MATRIX>))
	#DECL ((MATRIX) <VECTOR [REST <VECTOR [REST FIX]>]>
	       (FILE) STRING
	       (L J) FIX
	       (DX DY DY1) FIX
	       (CHN) <OR CHANNEL FALSE>
	       (XV MAX) <VECTOR [REST FIX]>
	       (VALUE) STRING)
	<COND (<NOT .CHN> <ERROR "CHN NOT OPENED" "M3DSK">)>
	<PUT .CHN 13 <+ <* .L .L 4> .L>>
	<APPLY ,PLOTVDSK .XV .MAX .CHN>
	<MAPF <>
	      #FUNCTION ((T)
			 #DECL ((T XV MAX) <VECTOR [REST FIX]>
				(DY DY1) FIX
				(CHN) <OR CHANNEL FALSE>)
			      <MAPR <>
				    #FUNCTION ((XE)
					       #DECL ((XE VALUE) <VECTOR [REST  FIX]>
						      (DX) FIX)
					       <PUT .XE 1 <+ .DX <1 .XE>>>)
				    .XV>
			      <MAPR <>
				    #FUNCTION ((TE)
					       #DECL ((TE VALUE) <VECTOR [REST FIX]>
						      (DY1) FIX)
					       <PUT .TE 1 <+ .DY1 <1 .T>>>)
				    .T>
			 <MAPR <>
			       #FUNCTION ((V)
					  #DECL ((V VALUE)<VECTOR [REST FIX]>)
					  <PUT .V
						1
					       <COND (<G? <LENGTH .V>1>
					             <2 .V>)
	     						     (T 0)>>)
			       .MAX>			 <MAPR <>
			       #FUNCTION ((MX T1)
					 #DECL ((MX T1 VALUE)
					       <VECTOR [REST FIX]>)
				         <PUT .MX
					      1
					      <MAX <1 .MX><1 .T1>>>)
			      .MAX .T>
			 <SET DY1 <+ .DY1 .DY>>
			 <APPLY ,PLOTVDSK .XV .MAX .CHN>)
	      <REST .MATRIX>>
	<CLOSE .CHN>
	"DONE">

<DEFINE SFXYP (XL1 XH1 YL1 YH1 FNCT
	       "OPTIONAL" (PARAM ())
			  (P 60)
			  (DSK #FALSE (NO DSK OUTPUT))
			  (FILE <STRING <SNAME> ";M3D MIGPUT">)
	       "AUX" (XL <FLOAT .XL1>)
		     (XH <FLOAT .XH1>)
		     (YL <FLOAT .YL1>)
		     (YH <FLOAT .YH1>)
		     (DX </ <- .XH .XL> .P>)
		     (DY </ <- .YH .YL> .P>)
		     (X1 <- .XL .DX>)
		     (Y1 <- .YL .DY>)
		     (X <IUVECTOR .P '<SET X1 <+ .X1 .DX>>>)
		     (Y <IUVECTOR .P '<SET Y1 <+ .Y1 .DY>>>)
		     MXN
		     SCL
		     HPTS
		     TEMP1
		     MATRIX)
	#DECL ((XL XH YL YH) FLOAT
	       (XL1 XH1 YL1 YH1) <OR FIX FLOAT>
	       (FNCT) ATOM
	       (PARAM) <LIST [REST <OR FIX FLOAT>]>
	       (P) FIX
	       (DSK) <OR ATOM FALSE>
	       (FILE) STRING
	       (DX DY X1 Y1 TEMP1) FLOAT
	       (SCL HPTS) FLOAT
	       (X) <UVECTOR [REST FLOAT]>
	       (Y) <UVECTOR [REST FLOAT]>
	       (MXN) <LIST FLOAT FLOAT>
	       (MATRIX) <VECTOR [REST <VECTOR [REST <OR FIX FLOAT>]>]>)
	<SET MATRIX
	     <MAPF ,VECTOR
		   #FUNCTION ((YE)
			      #DECL ((YE) FLOAT
				     (VALUE) <VECTOR [REST FLOAT]>
				     (X) <UVECTOR [REST FLOAT]>)
			      <MAPF ,VECTOR
				    #FUNCTION ((XE)
					       #DECL ((XE) FLOAT
						      (PARAM)
						      <LIST [REST <OR FIX FLOAT>]>
						      (YE) FLOAT
						      (VALUE) FLOAT
						      (FNCT) ATOM)
					       <FLOAT
						<APPLY ,.FNCT .XE .YE !.PARAM>>)
				    .X>)
		   .Y>>
	<SET TEMP1
	     <MAPF ,MAX
		   #FUNCTION ((ME)
			      #DECL ((ME) <VECTOR [REST FLOAT]>
				     (VALUE) FLOAT)
			      <MAX !.ME>)
		   .MATRIX>>
	<SET MXN
	     (<MAPF ,MIN
		    #FUNCTION ((ME)
			       #DECL ((ME) <VECTOR [REST FLOAT]>
				      (VALUE) FLOAT)
			       <MIN !.ME>)
		    .MATRIX>
	      .TEMP1)>
	<SET SCL
	     <COND (<NOT <==? <1 .MXN> <2 .MXN>>>
		    </ -400.00000 <- <1 .MXN> <2 .MXN>>>)
		   (ELSE
		    <COND (<0? <1 .MXN>> 400.00000)
			  (ELSE </ 400.00000 <1 .MXN>>)>)>>
	<SET HPTS <* .50000000 <+ <1 .MXN> <2 .MXN>>>>
	<REPEAT ((I 1) (L <LENGTH .MATRIX>))
		#DECL ((L I) FIX)
		<MAPR <>
		      #FUNCTION ((R) #DECL ((R) <VECTOR [REST <OR FLOAT FIX>]>)
			      <PUT .R 
				    1
				    <FIX <+ <* .SCL <- <1 .R> .HPTS>>
					    201>> >)
		      <NTH .MATRIX .I>>
		<COND (<G=? .I .L> <RETURN T>)
		      (ELSE <SET I <+ .I 1>>)>>
	<COND (.DSK <M3DSK .MATRIX .FILE>)
	      (ELSE <M3D .MATRIX> <IMAGE 13>)>
	,NULL>

<DEFINE MINIMAX (X)
	#DECL ((X) <UVECTOR [REST <OR FIX FLOAT>]>
	       (VALUE) <LIST [2 FLOAT]>)
	<COND (<TYPE? <1 .X> FLOAT>
	       <PROG ((X .X))
		     =#DECL ((X) <UVECTOR [REST FLOAT]>)
		     (<MIN !.X> <MAX !.X>)>)
	      (T
		<PROG ((X .X))
		      #DECL ((X) <UVECTOR [REST FIX]>)
		      (<FLOAT <MIN !.X>> <FLOAT <MAX !.X>>)>)>>

<DEFINE FNCTG (XL1 XH1 FNCT
	       "OPTIONAL" (SCALE1 (0 0)) (XYDIS1 (0 0)) (P 60)
	       "AUX" (SCALE (<FLOAT <1 .SCALE1>> <FLOAT <2 .SCALE1>>))
		     (XYDIS (<FLOAT <1 .XYDIS1>> <FLOAT <2 .XYDIS1>>))
		     (XL <FLOAT .XL1>)
		     (XH <FLOAT .XH1>)
		     (DX </ <- .XH .XL> .P>)
		     (X1 <- .XL .DX>)
		     (XU <IUVECTOR .P '<SET X1 <+ .X1 .DX>>>)
		     YU
		     YM
		     HPTS
		     SX
		     SY
		     X
		     Y)
	#DECL ((SCALE1 XYDIS1) <LIST [2 <OR FIX FLOAT>]>
	       (XL1 XH1) <OR FIX FLOAT>
	       (XL XH) FLOAT
	       (FNCT) <OR FUNCTION SUBR RSUBR FSUBR>
	       (XYDIS YM) <LIST [2 FLOAT]>
	       (SCALE HPTS) <LIST [2 FLOAT]>
	       (X Y) <UVECTOR [REST FIX]>
	       (P SX SY) FIX
	       (DX X1) FLOAT
	       (XU YU) <UVECTOR [REST FLOAT]>)
	<SET YU <MAPF ,UVECTOR
		    #FUNCTION ((X)
			       #DECL ((X VALUE) FLOAT
				      (FNCT)
				      <OR FUNCTION
					   SUBR
					   RSUBR
					   FSUBR>)
			       <FLOAT <APPLY .FNCT .X>>)
		    .XU>>
	<COND (<==? <+ <1 .SCALE> <2 .SCALE>> 0.0>
	       <SET YM <MINIMAX .YU>>
	       <SET SCALE
		    (</ 800.00000 <- .XH .XL>>
		     <COND (<NOT <==? <1 .YM> <2 .YM>>> 
			    </ -800.00000 <- <1 .YM> <2 .YM>>>)
			   (ELSE
			    <COND (<==? <1 .YM> 0.0> 800.00000)
				  (ELSE </ 800.00000 <1 .YM>>)>)>)>
	       <SET HPTS
		    (<* .50000000 <+ .XL .XH>> <* .50000000 <+ <1 .YM><2 .YM>>>)>)
	      (ELSE <SET HPTS .XYDIS> <SET YM (0.0 0.0)>)>
	<SET X
	     <MAPF ,UVECTOR
		   #FUNCTION ((X)
			      #DECL ((X) FLOAT
				     (VALUE) FIX
				     (SCALE HPTS)
				     <LIST [2 FLOAT]>)
			      <FIX <+ <* <1 .SCALE> <- .X <1 .HPTS>>> 500>>)
		   .XU>>
	<SET Y
	     <MAPF ,UVECTOR
		   #FUNCTION ((Y)
			      #DECL ((Y) FLOAT
				     (VALUE) FIX
				     (SCALE HPTS)
				     <LIST [2 FLOAT]>)
			      <FIX <+ <* <2 .SCALE> <- .Y <2 .HPTS>>> 400>>)
		   .YU>>
	<APPLY ,PLOTV .X .Y>
	<COND (<NOT <G? 100
			<SET SX
			     <FIX <+ <* <1 .SCALE> <- 0.0000000 <1 .HPTS>>>
				     500>>>>>
	       <COND (<NOT <G? .SX 900>> <APPLY ,LINE .SX 0 .SX 800>)>)>
	<COND (<NOT <G? 0
			<SET SY
			     <FIX <+ <* <2 .SCALE> <- 0.0000000 <2 .HPTS>>>
				     400>>>>>
	       <COND (<NOT <G? .SY 800>> <APPLY ,LINE 100 .SY 900 .SY>)>)>
	<APPLY ,MOVE 0 800>
	<TERPRI>
	("XMIN
"
	 .XL
	 "
XMAX
"
	 .XH
	 "
YMIN
"
	 <1 .YM>
	 "
YMAX
"
	 <2 .YM>
	 "
SCALE
"
	 .SCALE)>

<DEFINE M3D (MATRIX
	     "AUX" (L <LENGTH <1 .MATRIX>>)
		   (DX </ 420 .L>)
		   (DY </ 300 .L>)
		   (DY1 .DY)
		   (J -1)
		   (XV <IVECTOR .L '<* .DX <SET J <+ .J 1>>>>)
		   (MAX <1 .MATRIX>))
	#DECL ((MATRIX) <VECTOR [REST <VECTOR [REST FIX]>]>
	       (L J) FIX
	       (DX DY DY1) FIX
	       (MAX) <VECTOR [REST FIX]>
	       (XV ) <VECTOR [REST FIX]>)
	<APPLY ,PLOTV .XV .MAX>
	<MAPF <>
	      #FUNCTION ((T)
			 #DECL (( XV ) <VECTOR [REST FIX]>
				 (T MAX) <VECTOR [REST FIX]>
				(DY1 DY) FIX)
			      <MAPR <>
				    #FUNCTION ((XE)
					       #DECL ((XE VALUE) <VECTOR [REST  FIX]>
						      (DX) FIX)
					       < PUT .XE 1 <+ .DX <1 .XE>>>)
				    .XV>
			      <MAPR <>
				    #FUNCTION ((TE)
					       #DECL ((TE VALUE) <VECTOR [REST FIX]>
						      (DY1) FIX)
					       <PUT .TE 1 <+ .DY1 <1 .TE>>>)
				    .T>
			 <MAPR <>
			       #FUNCTION ((V)
					  #DECL ((V VALUE)<VECTOR [REST FIX]>)
					  <PUT .V
						1
					       <COND (<G? <LENGTH .V>1>
					             <2 .V>)
	     						     (T 0)>>)
			       .MAX>			 <MAPR <>
			       #FUNCTION ((MX T1)
					 #DECL ((MX T1 VALUE)
					       <VECTOR [REST FIX]>)
				         <PUT .MX
					      1
					      <MAX <1 .MX><1 .T1>>>)
			      .MAX .T>
			 <SET DY1 <+ .DY1 .DY>>
			 <APPLY ,PLOTV .XV .MAX>)
	      <REST .MATRIX>>
	,NULL>

<DEFINE MIJPL (MATRIX0
	       "OPTIONAL" (DSK #FALSE (NO DSK OUTPUT))
			  (FILE <STRING <SNAME> ";M3D MIGPUT">)
	       "AUX" MATRIX MXN SCL HPTS TEMP1)
	#DECL ((MATRIX MATRIX0) <VECTOR [REST <VECTOR [REST <OR FIX FLOAT>]>]>
	       (DSK) <OR ATOM FALSE>
	       (FILE) STRING
	       (MXN) <LIST [REST <OR FIX FLOAT>]>
	       (SCL HPTS) FLOAT
	       (TEMP1) <OR FIX FLOAT>)
	<SET MATRIX <MAPF ,VECTOR
			  #FUNCTION ((V)
			 	     #DECL ((V VALUE)<VECTOR [REST <OR FIX FLOAD>]>)
				     [!.V])
			  .MATRIX0>>
	<SET TEMP1
	     <MAPF ,MAX
		   #FUNCTION ((ME)
			      #DECL ((ME) <VECTOR [REST <OR FIX FLOAT>]>
				     (VALUE) <OR FIX FLOAT>)
			      <MAX !.ME>)
		   .MATRIX>>
	<SET MXN
	     (<MAPF ,MIN
		    #FUNCTION ((ME)
			       #DECL ((ME) <VECTOR [REST <OR FIX FLOAT>]>
				      (VALUE) <OR FIX FLOAT>)
			       <MIN !.ME>)
		    .MATRIX>
	      .TEMP1)>
	<SET SCL
	     <COND (<NOT <==? !.MXN>> </ -400.00000 <- !.MXN>>)
		   (ELSE
		    <COND (<==? <1 .MXN> 0> 400.00000)
			  (ELSE </ 400.00000 <1 .MXN>>)>)>>
	<SET HPTS <* .50000000 <+ !.MXN>>>
	<REPEAT ((L <LENGTH .MATRIX>) (I 1))
		#DECL ((L I) FIX)
		<MAPR <>
		      #FUNCTION ((R) #DECL ((R) <VECTOR [REST <OR FIX FLOAT>]>)
				 <PUT .R
				      1
				      <FIX <+ <* .SCL <- <1 .R> .HPTS>> 201>>>)
		     <NTH .MATRIX .I>>
		<COND (<G=? .I .L> <RETURN T>)
		      (ELSE <SET I <+ .I 1>>)>>
	<COND (.DSK <M3DSK .MATRIX .FILE>)
	      (ELSE <M3D .MATRIX> <IMAGE 13>)>
	,NULL>


<DEFINE PARAG (TL TH FX FY
	       "OPTIONAL" (P 60) (MODE "SAS") (SCALE (0 0)) (XYDIS (0 0))
	       "AUX" (DT </ <FLOAT <- .TH .TL>> .P>)
		     (T1 <- .TL .DT>)
		     (T <IUVECTOR .P '<SET T1 <+ .T1 .DT>>>)
		     X
		     Y
		     XM
		     YM
		     HPTS
		     SX
		     SY
		     C
		     X1
		     Y1)
	#DECL ((TL TH) <OR FIX FLOAT>
	       (FX FY) ATOM
	       (P SX SY) FIX
	       (MODE) STRING
	       (XYDIS XM YM HPTS) <LIST [2 <OR FIX FLOAT>]>
	       (SCALE C) <LIST [2 <OR FIX FLOAT>]>
	       (DT T1 SCALE1) FLOAT
	       (T X Y) <UVECTOR [REST FLOAT]>
	       (X1 Y1) <UVECTOR [REST FIX]>)
	<SET X <MAPF ,UVECTOR
	              #FUNCTION ((T)
			       #DECL ((T VALUE) FLOAT
				      (FX) ATOM)
			       <FLOAT <APPLY <VALUE .FX> .T>>)
		    .T>>
	<SET Y <MAPF ,UVECTOR
		    #FUNCTION ((T)
			       #DECL ((T VALUE) FLOAT
				      (FY) ATOM)
			       <FLOAT <APPLY <VALUE .FY> .T>>)
		    .T>>
	<COND (<=? .MODE "NAS">
	       <SET HPTS .XYDIS>
	       <SET XM <SET YM (0 0)>>
	       <SET C
		    (<- 501 <* <1 .SCALE> <1 .HPTS>>>
		     <- 401 <* <2 .SCALE> <2 .HPTS>>>)>)
	      (<=? .MODE "DAS">
	       <SET XM <MINIMAX .X>>
	       <SET YM <MINIMAX .Y>>
	       <SET HPTS (<* .50000000 <+ !.XM>> <* .50000000 <+ !.YM>>)>
	       <SET SCALE
		    (</ -800.00000 <- !.XM>> </ -800.00000 <- !.YM>>)>
	       <SET C
		    (<- 501 <* <1 .SCALE> <1 .HPTS>>>
		     <- 401 <* <2 .SCALE> <2 .HPTS>>>)>)
	      (ELSE
	       <SET XM <MINIMAX .X>>
	       <SET YM <MINIMAX .Y>>
	       <SET HPTS (<* .50000000 <+ !.XM>> <* .50000000 <+ !.YM>>)>
	       <SET SCALE
		    (<SET SCALE1
			  </ -800.00000
			     <COND (<L? <- !.XM> <- !.YM>> <- !.XM>)
				   (ELSE <- !.YM>)>>>
		     .SCALE1)>
	       <SET C
		    (<- 501 <* <1 .SCALE> <1 .HPTS>>>
		     <- 401 <* <2 .SCALE> <2 .HPTS>>>)>)>
	<SET X1
	     <MAPF ,UVECTOR
		   #FUNCTION ((X)
			      #DECL ((X) FLOAT
				     (SCALE C)
				     <LIST [REST <OR FIX FLOAT>]>
				     (VALUE) FIX)
			      <FIX <+ <* <1 .SCALE> .X> <1 .C>>>)
		   .X>>
	<SET Y1
	     <MAPF ,UVECTOR
		   #FUNCTION ((Y)
			      #DECL ((Y) FLOAT
				     (SCALE C)
				     <LIST [REST <OR FIX FLOAT>]>
				     (VALUE) FIX)
			      <FIX <+ <* <2 .SCALE> .Y> <2 .C>>>)
		   .Y>>
	<APPLY ,PLOTV .X1 .Y1>
	<COND (<NOT <G? 100
			<SET SX <FIX <+ <* <1 .SCALE> <- <1 .HPTS>>> 501>>>>>
	       <COND (<NOT <G? .SX 900>> <APPLY ,LINE .SX 0 .SX 800>)>)>
	<COND (<NOT <G? 0 <SET SY <FIX <+ <* <2 .SCALE> <- <2 .HPTS>>> 401>>>>>
	       <COND (<NOT <G? .SY 800>> <APPLY ,LINE 100 .SY 900 .SY>)>)>
	<APPLY ,MOVE 0 800>
	<APPLY ,MIGSSEND 13 10>
	("TMIN
"
	 .TL
	 "
TMAX
"
	 .TH
	 "
XMIN
"
	 <1 .XM>
	 "
XMAX
"
	 <2 .XM>
	 "
YMIN
"
	 <1 .YM>
	 "
YMAX
"
	 <2 .YM>
	 "
SCALE
"
	 .SCALE
	 "
HPTS
"
	 .HPTS )>

<DEFINE POLRP (TL TH R
	       "OPTIONAL" (P 60) (MODE "SAS") (SCALE (0 0)) (XYDIS (0 0))
	       "AUX" (DT </ <FLOAT <- .TH .TL>> .P>)
		     (T1 <- .TL .DT>)
		     RM
		     RX
		     RY
		     SNARF)
	#DECL ((TL TH) <OR FIX FLOAT>
	       (R) <SPECIAL  ATOM>
	       (P) FIX
	       (MODE) STRING
	       (SCALE XYDIS ) <LIST [REST <OR FIX FLOAT>]>
	       (DT T1) FLOAT
	       (RM) <UVECTOR [2 <OR FIX FLOAT>]>
	       (RX RY) <SPECIAL <OR RSUBR FUNCTION>>
	       (SNARF) LIST)
	<SET RM <MAPF ,UVECTOR
	              #FUNCTION ((T)
			       #DECL ((T VALUE) FLOAT
				      (RX) ATOM)
			       <FLOAT <APPLY ,.R .T>>)
		    <IUVECTOR .P '<SET T1 <+ .DT .T1>>>>>
	<SET RX #FUNCTION ((T)
			 #DECL ((T VALUE) FLOAT (R) <SPECIAL ATOM>)
			 <FLOAT <* <COS .T> <APPLY ,.R .T>>>)>
	<SET RY #FUNCTION ((T)
			 #DECL ((T VALUE) FLOAT (R) <SPECIAL ATOM>)
			 <FLOAT <* <SIN .T> <APPLY ,.R .T>>>)>
	<SET SNARF <PARAG .TL .TH RX RY .P .MODE .SCALE .XYDIS>>
	<TERPRI>
	("TMIN
"
	 .TL
	 "
TMAX
"
	 .TH
	 "
RMIN
"
	 <1 .RM>
	 "
RMAX
"
	 <2 .RM>
	 !<REST .SNARF 12!>)>


<SET REDEFINE <>>

<ENDBLOCK>

<ENDPACKAGE>

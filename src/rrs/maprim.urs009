
<PACKAGE "MAPRIM">
<ENTRY SETORG MIGSSEND TRANS MOVE DRAW LINE POINT PAGE
       PLOTV PLOTVDSK >
<USE "DISPLA">
<USE "SMCELLS">
<BLOCK (<GET MIGS OBLIST> <ROOT>)>
XORG YORG  ABSOLUTE-POSITION
<ENDBLOCK>
<BLOCK (<GET DISPCOM OBLIST> <ROOT>)>
COMSWITCH
<ENDBLOCK>

<BLOCK (!.OBLIST <GET MIGS OBLIST> <GET DISPCOM OBLIST>)>


<SETG DASH 0>


<SET ABSOLUTE-POSITION '(0 0)>


<SETG XORG -512>

<SETG YORG -512>

<GDECL (XORG YORG DASH) FIX>

<DEFINE SETORG ("OPTIONAL" (X -512) (Y -512))
	#DECL ((X Y) <OR FIX FLOAT>
	       (VALUE) LIST
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,STRG .X .Y> ())
	      (T (<SETG XORG <FIX .X>> <SETG YORG <FIX .Y>>))>>

<DEFINE MIGSSEND ("TUPLE" LIST)
	#DECL ((LIST) <TUPLE [REST FIX]> (VALUE) ATOM)
	<MAPF <> ,IMAGE .LIST>
	,NULL>

<DEFINE TRANS (X Y
	       "OPTIONAL" (INV 1)
	       "AUX" (ABSOLUTE-POSITION .ABSOLUTE-POSITION)
		     (DSH ,DASH)
		     (DX1 <+ .X ,XORG>)
		     (DY1 <+ .Y ,YORG>)
		     (DX <- .DX1 <1 .ABSOLUTE-POSITION>>)
		     (DY <- .DY1 <2 .ABSOLUTE-POSITION>>)
		     (DXH </ <ABS .DX> 32>)
		     (DXL <- <ABS .DX> <* .DXH 32>>)
		     (DYH </ <ABS .DY> 32>)
		     (DYL <- <ABS .DY> <* .DYH 32>>))
	#DECL ((X Y DX DY DX1 DY1 DXH DXL DYH DYL INV DSH) FIX
	       (ABSOLUTE-POSITION) <LIST FIX FIX>
	       (VALUE) <LIST [4 FIX]>)
	<PUT .ABSOLUTE-POSITION 1 .DX1>
	<PUT .ABSOLUTE-POSITION 2 .DY1>
	(<+ 64 <* 2 .DXL> <COND (<L? .DX 0> 1) (ELSE 0)>>
	 <+ 64 <* 32 .INV> .DXH>
	 <+ 64 <* 2 .DYL> <COND (<L? .DY 0> 1) (ELSE 0)>>
	 <+ 64 <* 32 .DSH> .DYH>)>

<DEFINE MOVE (X Y "TUPLE" Z)
	#DECL ((X Y) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH> <APPLY ,MV .X .Y !.Z>)
	      (T <ORG <FIX .X> <FIX .Y>> <IMAGE 30>)>
	,NULL>

<DEFINE DRAW (X Y "TUPLE" Z)
	#DECL ((X Y) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH> <APPLY ,DR .X .Y !.Z>)
	      (T <MIGSSEND !<TRANS <FIX .X> <FIX .Y> 0>>)>
	,NULL>

<DEFINE LINE (X0 Y0 X1 Y1 "TUPLE" Z)
	#DECL ((X0 Y0 X1 Y1) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH>
	       <APPLY ,LN .X0 .Y0 .X1 .Y1 !.Z>)
	      (T
	       <ORG <FIX .X0> <FIX .Y0>>
	       <MIGSSEND 30 !<TRANS <FIX .X1> <FIX .Y1> 0!> 13>)>
	,NULL>

<DEFINE POINT (X Y "TUPLE" Z)
	#DECL ((X Y) <OR FIX FLOAT>
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>
	       (VALUE) ATOM)
	<COND (<BOUND? COMSWITCH> <APPLY ,PT .X .Y !.Z>)
	      (T
	       <ORG <FIX .X> <FIX .Y>>
	       <MIGSSEND 30 !<TRANS <FIX .X> <+ <FIX .Y> 1> 0!> 13>)>
	,NULL>

<DEFINE PAGE ()
	#DECL ((COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,PG>)
	      (T <PRINC "C"> <MIGSSEND 12>)>
	,NULL>

<DEFINE PLOTV (X Y "TUPLE" Z)
	#DECL ((X Y) <OR LIST VECTOR UVECTOR>
	       (VALUE) ATOM
	       (Z) <TUPLE [REST <OR FIX FLOAT>]>
	       (COMSWITCH) <SPECIAL ANY>)
	<COND (<BOUND? COMSWITCH> <APPLY ,PV .X .Y !.Z>)
	      (T
	       <COND (<TYPE? .X LIST>
		      <PROG ((X .X) (Y .Y))
			    #DECL ((X Y) <LIST [REST FIX]>)
			    <COND (<NOT <==? <LENGTH .X> <LENGTH .Y>>>
		                   <ERROR "LENGTHS NOT EQUAL" "PLOTV">)>
	       	            <ORG <1 .X> <1 .Y>>
	                    <IMAGE 30>
	                    <MIGSSEND !<TRANS <1 .X> <1 .Y> 1>>
	                    <SET X <REST .X>>
	                    <SET Y <REST .Y>>
	                    <MAPF <>
		                  #FUNCTION ((XE YE)
				            #DECL ((XE YE) FIX)
				            <MAPF <> ,IMAGE <TRANS .XE .YE 0>>)
		                  .X
		                  .Y>
	                    <IMAGE 13>>)

	       (<TYPE? .X VECTOR>
		<PROG ((X .X) (Y .Y))
	              #DECL ((X Y) <VECTOR [REST FIX]>)
		      <COND (<NOT <==? <LENGTH .X> <LENGTH .Y>>>
		             <ERROR "LENGTHS NOT EQUAL" "PLOTV">)>
	              <ORG <1 .X> <1 .Y>>
	              <IMAGE 30>
	              <MIGSSEND !<TRANS <1 .X> <1 .Y> 1>>
	              <SET X <REST .X>>
	              <SET Y <REST .Y>>
	              <MAPF <>
		            #FUNCTION ((XE YE)
				      #DECL ((XE YE) FIX)
				       <MAPF <> ,IMAGE <TRANS .XE .YE 0>>)
		            .X
		            .Y>
	              <IMAGE 13>>)

	       (T
		<PROG ((X .X)(Y .Y))
		      #DECL ((Y X) <UVECTOR [REST FIX]>)
		      <COND (<NOT <==? <LENGTH .X> <LENGTH .Y>>>
		             <ERROR "LENGTHS NOT EQUAL" "PLOTV">)>
	              <ORG <1 .X> <1 .Y>>
	              <IMAGE 30>
	              <MIGSSEND !<TRANS <1 .X> <1 .Y> 1>>
	              <SET X <REST .X>>
	              <SET Y <REST .Y>>
	              <MAPF <>
		            #FUNCTION ((XE YE)
				      #DECL ((XE YE) FIX)
				      <MAPF <> ,IMAGE <TRANS .XE .YE 0>>)
		            .X
		            .Y>
	              <IMAGE 13>>)> )>
	,NULL>

<DEFINE ORG (OX OY
             "AUX" (ABSOLUTE-POSITION .ABSOLUTE-POSITION)
		   (X <+ .OX ,XORG>)
                   (Y <+ .OY ,YORG>)
                   ABSX ABSY)
        #DECL ((OX OY X Y ABSX ABSY) FIX
               (ABSOLUTE-POSITION) <LIST FIX FIX>
               (VALUE) ATOM)
        <PUT .ABSOLUTE-POSITION 1 .X>
        <PUT .ABSOLUTE-POSITION 2 .Y>
        <SET ABSX <ABS .X>>
        <SET ABSY <ABS .Y>>
        <MIGSSEND 29
              <+ 64
                 <* 2 <MOD .ABSX 32>>
                 <COND (<L? .X 0> 1) (ELSE 0)> >
              <+ 64 </ .ABSX 32>>
              <+ 64
                 <* 2 <MOD .ABSY 32>>
                 <COND (<L? .Y 0> 1) (ELSE 0)> >
              <+ 64 </ .ABSY 32>> >>


<DEFINE PLOTVDSK (X Y OUTCHAN)
	#DECL ((X Y) <OR LIST VECTOR UVECTOR>
	       (OUTCHAN) <SPECIAL CHANNEL>
	       (VALUE) STRING)
	<COND (<NOT <==? <LENGTH .X> <LENGTH .Y>>>
	       <ERROR "LENGTHS NOT EQUAL" "PLOTVDSK">)>
	<PRINC <ASCII 29> .OUTCHAN>
	<SET ABSOLUTE-POSITION
	     (<+ <1 .X> ,XORG> <+ <1 .Y> ,YORG>)>
	<SNARF <1 .ABSOLUTE-POSITION> .OUTCHAN>
	<SNARF <2 .ABSOLUTE-POSITION> .OUTCHAN>
	<PRINC <ASCII 30> .OUTCHAN>
	<SET X <REST .X>>
	<SET Y <REST .Y>>
	<MAPF <>
	      #FUNCTION ((XE YE)
			 #DECL ((XE YE) FIX)
			 <MAPF <>
			       #FUNCTION ((Z)
					  #DECL ((Z) FIX
						 (OUTCHAN) <SPECIAL CHANNEL>)
					  <PRINC <ASCII .Z> .OUTCHAN>)
			       <TRANS .XE .YE 0>>)
	      .X
	      .Y>
	<PRINC <ASCII 13> .OUTCHAN>
	"DONE">


<DEFINE SNARF (Z CHN
	       "AUX" (ABSZ <ABS .Z>)
		     (SGN <COND (<L? .Z 0> 1) (ELSE 0)>)
		     (LOWZ <MOD .ABSZ 32>)
		     (HIZ </ .ABSZ 32>))
	#DECL ((Z ABSZ SGN LOWZ HIZ) FIX (CHN) CHANNEL)
	<PRINC <ASCII <+ 64 <* 2 .LOWZ> .SGN>> .CHN>
	<PRINC <ASCII <+ 64 .HIZ>> .CHN>>
<ENDBLOCK>
<ENDPACKAGE>

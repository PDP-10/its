
<NEWTYPE MCELL
	 LIST
	 '<LIST LIST
		LIST
		[2 <OR ATOM FALSE>]
		<LIST FIX [REST <OR FIX FLOAT FORM ATOM>]>>>

<SET PLOTVDSK_TEST
     <FUNCTION ("AUX" (CHN <OPEN "PRINT" "M3D" "OUTPUT" "DSK" "RBA">)
		      XY
		      (X ())
		      (Y ()))
	     <PUT .CHN 13 360>
	     <PLOTVDSK (0 1000) (0 0) .CHN>
	     <PLOTVDSK (500 500) (0 800) .CHN>
	     <REPEAT ((P .20000000))
		     <SET XY <WITCH .P>>
		     <SET X (!.X <1 .XY>)>
		     <SET Y (!.Y <2 .XY>)>
		     <COND (<G? <SET P <+ .P .040000000>> 2.9000000>
			    <RETURN <PLOTVDSK .X .Y .CHN>>)>>
	     <CLOSE .CHN>
	     <DSKIMAGE>
	     "PLOTVDSK TEST">>

<SET FNCTGTST
     <FUNCTION ()
	     <PRINT <FNCTG -2.1000000
			   5.3000000
			   #FUNCTION ((X)
				      <* <+ .X 2>
					 <+ .X 1>
					 .X
					 <- .X 3>
					 <- .X 5>>)>>
	     "FNCTG TEST">>

<SET MTRIANGLE
     <FUNCTION ()
	     <MOVE 170 285>
	     <DRAW 170 650>
	     <DRAW 200 670>
	     <DRAW 515 485>
	     <DRAW 515 450>
	     <DRAW 200 260>
	     <DRAW 170 285>
	     <DRAW 200 300>
	     <DRAW 200 670>
	     <MOVE 200 630>
	     <DRAW 515 450>
	     <MOVE 480 470>
	     <DRAW 480 505>
	     <MOVE 480 470>
	     <DRAW 200 300>
	     <DRAW 230 280>
	     <MOVE 235 360>
	     <DRAW 235 605>
	     <MOVE 235 570>
	     <DRAW 445 445>
	     <MOVE 410 465>
	     <DRAW 200 340>
	     <LINE 200 630 170 610>
	     <MOVE 0 200><TERPRI>
	     "MOBIUS TRIANGLE">>

<SET PLVTEST
     <FUNCTION ()
	     <PROG (X Y XY)
		   <SET X (<+ 500 <1 <WITCH .20000000>>>)>
		   <SET Y (<2 <WITCH .20000000>>)>
		   <LINE 0 0 1000 0>
		   <LINE 500 0 500 800>
		   <REPEAT ((P .20000000))
			   <SET XY <WITCH .P>>
			   <SET X (!.X <1 .XY>)>
			   <SET Y (!.Y <2 .XY>)>
			   <SET P <+ .P .040000000>>
			   <COND (<G? .P 2.9000000> <RETURN <PLOTV .X .Y>>)>>>>>

<SET WITCH
     <FUNCTION (P)
	     (<FIX <+ 500 <* 100.00000 </ <COS .P> <SIN .P>>>>>
	      <FIX <* 200.00000 <- 1.0000000 <COS <* 2.0000000 .P>>>>>)>>

<SET SINCURV
     <FUNCTION ()
	     <MOVE 0 400>
	     <REPEAT ((X 0))
		     <DRAW .X
			   <FIX <* 400.00000
				   <+ 1.0000000 <SIN </ .X 100.00000>>>>>>
		     <COND (<G? .X 625> <RETURN "DONE">)>
		     <SET X <+ .X 5>>>>>

<SET TEST3
     <FUNCTION () <LINE 0 0 0 800> <LINE 0 400 1000 400> <TEST> <SINCURV>>>

<SET TEST2
     <FUNCTION ()
	     <PROG (X Y Z)
		   <SET Z <LINE 300 0 700 0>>
		   <SET Z <LINE 500 0 500 780>>
		   <SET X 300>
		   LOOP
		   <SET Y </ <* <- .X 500> <- .X 500>> 40>>
		   <SET Z <POINT .X .Y>>
		   <COND (<G? .X 699> <RETURN "DONE">)>
		   <SET X <+ .X 1>>
		   <GO LOOP>>>>

<SET TEST1
     <FUNCTION ()
	     <PROG (X Y Z D)
		   <SET X 400>
		   LOOP
		   <SET Y </ <* <- .X 500> <- .X 500>> 10>>
		   <SET Z <POINT .X .Y>>
		   <SET D <POINT .X 0>>
		   <SET D <POINT 500 .Y>>
		   <COND (<G? .X 599> <RETURN "DONE">)>
		   <SET X <+ .X 1>>
		   <GO LOOP>>>>

<SET TEST
     <FUNCTION ()
	     <PROG (X Y Z D)
		   <SET X 0>
		   LOOP
		   <SET Y </ <* .X .X> 10>>
		   <SET Z <POINT .X .Y>>
		   <COND (<==? .X 100> <RETURN "DONE">)>
		   <SET X <+ .X 2>>
		   <GO LOOP>>>>

<DEFINE MOUNDR (X1 Y1
		"AUX" (X <+ .X1 .99999999E-7>)
		      (Y <+ .Y1 .99999999E-7>)
		      (A <SQRT <+ <* .X .X> <* .Y .Y>>>))
	</ <SIN <* .A 4.0000000>> .A>>

<DEFINE MOUND (X1 Y1 "AUX" (X <+ .X1 .99999999E-7>) (Y <+ .Y1 .99999999E-7>) A B
)
	<SET A </ <SIN <* .X 4.0000000>> .X>>
	<SET B </ <SIN <* .Y 4.0000000>> .Y>>
	<* .A .B>>

<DEFINE MOUNDL (X1 Y1 "AUX" (X <+ .99999999E-7 .X1>) (Y <+ .99999999E-7 .Y1>))
	<LOG <+ 5.0000000
		<* </ <SIN <* 4.0000000 .X>> .X>
		   </ <SIN <* 4.0000000 .Y>> .Y>>>>>

<DEFINE SPIRAL ("AUX" A B T X Y)
	<REPEAT ()
		<PAGE>
		<SLEEP 2>
		<SET A <ABS <* </ <RANDOM> 17179799000.> 3.8000000>>>
		<SET B <- 0.0000000 .A>>
		<SET T <IUVECTOR 100 '<SET B <+ .B .A>>>>
		<SET X
		     <MAPF ,UVECTOR
			   #FUNCTION ((T) <FIX <+ <* .T <COS .T>> 501>>)
			   .T>>
		<SET Y
		     <MAPF ,UVECTOR
			   #FUNCTION ((T) <FIX <+ <* .T <SIN .T>> 401>>)
			   .T>>
		<PLOTV .X .Y>
		<SLEEP 5>>>

<SET TRIDENT
     <FUNCTION ()
	     (<MOVE 250 100>
	      <DRAW 250 800>
	      <DRAW 650 800>
	      <DRAW 750 700>
	      <DRAW 750 100>
	      <MOVE 350 100>
	      <DRAW 350 700>
	      <DRAW 550 700>
	      <DRAW 550 100>
	      <MOVE 450 100>
	      <DRAW 450 600>
	      <DRAW 550 600>
	      <MOVE 450 600>
	      <DRAW 350 700>
	      <ELIPSE 300 100 50 25 50>
	      <ELIPSE 500 100 50 25 50>
	      <ELIPSE 700 100 50 25 50>
	      <LINE 650 800 650 100>)
	     <IMAGE 13>
	     TRIDENT>>

<SET IT
     <FUNCTION ()
	     (<MOVE 0 400>
	      <DRAW 400 400>
	      <MOVE 450 400>
	      <DRAW 550 400>
	      <MOVE 600 400>
	      <DRAW 1000 400>
	      <MOVE 500 0>
	      <DRAW 500 300>
	      <MOVE 500 350>
	      <DRAW 500 450>
	      <MOVE 500 500>
	      <DRAW 500 800>
	      <CIRCLE 500 400 400 100>
	      <CIRCLE 500 400 300 100>
	      <CIRCLE 500 400 200 100>
	      <CIRCLE 500 400 100 100>)
	     "IT">>

<SET DUMB
     <FUNCTION ()
	     (<ELIPSE 500 400 400 200 100>
	      <ELIPSE 500 400 200 400 100>
	      <CIRCLE 500 400 400 100>)
	     "DUMB">>

<SET PYRAMID
     <FUNCTION ()
	     (<MOVE 500 50>
	      <DRAW 500 650>
	      <DRAW 700 185>
	      <DRAW 500 50>
	      <DRAW 265 125>
	      <DRAW 320 253>
	      <MOVE 410 433>
	      <DRAW 500 650>
	      <MOVE 325 250>
	      <DRAW 475 346>
	      <DRAW 480 420>
	      <DRAW 325 375>
	      <DRAW 325 250>
	      <DRAW 225 275>
	      <DRAW 225 400>
	      <DRAW 325 375>
	      <MOVE 225 400>
	      <DRAW 420 436>
	      <DRAW 480 420>
	      <MOVE 580 460>
	      <DRAW 750 490>
	      <DRAW 606 405>
	      <DRAW 588 444>
	      <DRAW 750 490>)
	     <IMAGE 13>
	     "PYRAMID">>

<SET TESS
     <FUNCTION ()
	      <LINE 300 400 300 600>
	      <LINE 450 350 450 550>
	      <LINE 500 0 500 350>
	      <LINE 500 600 500 800>
	      <LINE 650 350 650 550>
	      <LINE 700 0 700 800>
	      <LINE 750 50 750 400>
	      <LINE 750 650 750 850>
	      <LINE 800 650 800 700>
	      <LINE 900 400 900 600>
	      <LINE 950 450 950 650>
	      <LINE 300 600 350 650>
	      <LINE 450 550 500 600>
	      <LINE 650 350 700 400>
	      <LINE 650 550 800 700>
	      <LINE 700 0 750 50>
	      <LINE 700 200 750 250>
	      <LINE 700 800 750 850>
	      <LINE 900 400 950 450>
	      <LINE 900 600 950 650>
	      <LINE 500 800 550 850>
	      <LINE 500 0 700 0>
	      <LINE 500 200 700 200>
	      <LINE 450 350 650 350>
	      <LINE 300 400 450 400>
	      <LINE 700 400 900 400>
	      <LINE 450 550 650 550>
	      <LINE 300 600 900 600>
	      <LINE 350 650 500 650>
	      <LINE 750 650 950 650>
	      <LINE 750 700 800 700>
	      <LINE 500 800 700 800>
	      <LINE 550 850 750 850>>>

<DEFINE CUBE (X0 Y0 Z0 X1 Y1 Z1)
	<PLOTV3D ![.X0 .X0 .X1 .X1 .X0!]
		 ![.Y0 .Y1 .Y1 .Y0 .Y0!]
		 ![.Z0 .Z0 .Z0 .Z0 .Z0!]>
	<PLOTV3D ![.X0 .X0 .X1 .X1 .X0!]
		 ![.Y0 .Y1 .Y1 .Y0 .Y0!]
		 ![.Z1 .Z1 .Z1 .Z1 .Z1!]>
	<LINE3D .X0 .Y0 .Z0 .X0 .Y0 .Z1>
	<LINE3D .X0 .Y1 .Z0 .X0 .Y1 .Z1>
	<LINE3D .X1 .Y1 .Z0 .X1 .Y1 .Z1>
	<LINE3D .X1 .Y0 .Z0 .X1 .Y0 .Z1>>

<SET PI 3.1415926>

<SET NPI -3.1415926>

<SET 2PI <* 2 .PI>>

<SET N2PI <* 2 .NPI>>

<DEFINE AMB (TAU1 NU1
	     "AUX" (TAU <+ .TAU1 .99999999E-7>) (NU <+ .NU1 .99999999E-7>))
	<ABS </ <SIN <* .PI .NU <- 1 <ABS .TAU>>>> <* .PI .NU>>>>

<DEFINE AMB2 (NU TAU) <AMB .TAU .NU>>

<DEFINE THIS ()
	<THAT 0 0 1020 0 1020 1020>
	<THAT 1020 0 1020 1020 0 1020>
	<THAT 1020 1020 0 1020 0 0>
	<THAT 0 1020 0 0 1020 0>
	<THAT 510 0 510 510 1020 510 25>
	<THAT 510 1020 510 510 1020 510 25>
	<THAT 510 1020 510 510 0 510 25>
	<THAT 510 0 510 510 0 510 25>>

<DEFINE THAT (X1 Y1 X2 Y2 X3 Y3 "OPTIONAL" (INK 51) "AUX" X1I X2I Y1I Y2I)
	<SET X1I </ <- .X2 .X1> .INK>>
	<SET Y1I </ <- .Y2 .Y1> .INK>>
	<SET X2I </ <- .X3 .X2> .INK>>
	<SET Y2I </ <- .Y3 .Y2> .INK>>
	<LINE3D .X1 .Y1 0 .X2 .Y2 0>
	<REPEAT ()
		<COND (<L? <SET INK <- .INK 1>> 0> <RETURN ,NULL>)>
		<LINE3D <SET X1 <+ .X1 .X1I>>
		      <SET Y1 <+ .Y1 .Y1I>> 0
		      <SET X2 <+ .X2 .X2I>>
		      <SET Y2 <+ .Y2 .Y2I>> 0>>>

<DEFINE CARD (STRING)
	<PAGE>
	<SLEEP 3>
	<MOVE 0 800>
	<TERPRI>
	<PRINC "                HAPPY HOLLY DAYS">
	<TERPRI>
	<PRINC "                    ">
	<PRINC .STRING>
	<DISP CARD1>
	,NULL>

<SET CARD1!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (-1 MT!-MCELLS <SCALE 5> <XLATE 0 0 5000>)
	     (-1 TREE!-MCELLS <SCALE .50000000> <XLATE 700 100>)
	     (-1 TREE!-MCELLS <SCALE .50000000> <XLATE -100 0 3000>)
	     (-1 BOX!-MCELLS <SCALE .50000000> <XLATE 100 0 50>)
	     (-1
	      BOX1!-MCELLS
	      <SCALE .50000000 .50000000 1>
	      <XLATE 205 0 200>)
	     (-1 TREE!-MCELLS <SCALE .30000000> <XLATE 50 50 325>))>

<SET BOX!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (0 -100 -100 -100)
	     (1 -100 100 -100)
	     (1 100 100 -100)
	     (1 100 -100 -100)
	     (1 -100 -100 -100)
	     (0 -100 -100 100)
	     (1 -100 100 100)
	     (1 100 100 100)
	     (1 100 -100 100)
	     (1 -100 -100 100)
	     (0 -100 -100 -100)
	     (1 -100 -100 100)
	     (0 -100 100 -100)
	     (1 -100 100 100)
	     (0 100 100 -100)
	     (1 100 100 100)
	     (0 100 -100 -100)
	     (1 100 -100 100)
	     (0 -10 -100 -100)
	     (1 -10 100 -100)
	     (1 10 100 -100)
	     (1 10 -100 -100)
	     (1 -10 -100 -100)
	     (0 -10 -100 100)
	     (1 -10 100 100)
	     (1 10 100 100)
	     (1 10 -100 100)
	     (1 -10 -100 100)
	     (0 -10 -100 -100)
	     (1 -10 -100 100)
	     (0 -10 100 -100)
	     (1 -10 100 100)
	     (0 10 100 -100)
	     (1 10 100 100)
	     (0 10 -100 -100)
	     (1 10 -100 100)
	     (0 -100 -10 -100)
	     (1 -100 10 -100)
	     (1 100 10 -100)
	     (1 100 -10 -100)
	     (1 -100 -10 -100)
	     (0 -100 -10 100)
	     (1 -100 10 100)
	     (1 100 10 100)
	     (1 100 -10 100)
	     (1 -100 -10 100)
	     (0 -100 -10 -100)
	     (1 -100 -10 100)
	     (0 -100 10 -100)
	     (1 -100 10 100)
	     (0 100 10 -100)
	     (1 100 10 100)
	     (0 100 -10 -100)
	     (1 100 -10 100))>

<SET BOX1!-MCELLS
     '#MCELL(() () 3D #FALSE () (-1 BOX!-MCELLS <ROTX 1.5707950>))>

<SET MT!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (0 -500 0 0)
	     (1 -250 300 0)
	     (1 -25 0 0)
	     (0 -300 250 0)
	     (1 -200 250 0)
	     (0 -100 100 0)
	     (1 150 350 0)
	     (1 425 0 0)
	     (0 50 250 0)
	     (1 150 200 0)
	     (1 245 250 0)
	     (0 350 100 0)
	     (1 550 300 0)
	     (1 775 0 0)
	     (0 500 250 0)
	     (1 600 252 0))>

<SET TREE!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (-1 TRLN!-MCELLS <ROTY 0.0000000>)
	     (-1 TRLN!-MCELLS <ROTY .69813112>)
	     (-1 TRLN!-MCELLS <ROTY 1.3962622>)
	     (-1 TRLN!-MCELLS <ROTY 2.0943933>)
	     (-1 TRLN!-MCELLS <ROTY 2.7925244>)
	     (-1 TRLN!-MCELLS <ROTY 3.4906556>)
	     (-1 TRLN!-MCELLS <ROTY 4.1887867>)
	     (-1 TRLN!-MCELLS <ROTY 4.8869178>)
	     (-1 TRLN!-MCELLS <ROTY 5.5850490>))>

<SET TRLN!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (0 0 -150 0)
	     (1 100 -150 0)
	     (1 100 -100 0)
	     (1 50 -100 0)
	     (1 50 0 0)
	     (1 350 0 0)
	     (1 250 100 0)
	     (1 300 100 0)
	     (1 150 300 0)
	     (1 200 300 0)
	     (1 50 500 0)
	     (1 100 500 0)
	     (1 0 650 0)
	     (1 0 -150 0))>


<DEFINE TRIP ()
<MCELL C () () 3D <>
       <CUBE -50 -50 -50 50 50 50>>;"A CUBE AROUND THE ORIGEN."


<MCELL TRIP () () 3D <>
       <REPEAT ( (8PI <* 8 3.14159>)
                 (T .8PI)
                 (DT </ .8PI 50 >)
                 (SF </ 500 .8PI>))
               <CALL C <ROTZ <- .T>>
                       <XLATE <* .SF .T <COS .T>>
                              <* .SF .T <SIN .T>>
                              <- 10000 <* 20 .SF .T>> >>
               <COND (<L? <SET T <- .T .DT>> 0> <RETURN T>)> >>
<PAGE>
<DISP TRIP <XLATE 500 500>>;"TRY IT YOU'LL LIKE IT">>


<DEFINE RPT ()
	<REPEAT ((I .10000000) (X 0.0000000))
		<DISP P2 <SCALE 2><ROTX .X> <ROTY <* 1.4000000 .X>>>
		<COND (<G? <SET X <+ .X .I>> 6.2830000> <RETURN FOOBAR>)>
		<SLEEP 3>
		<PAGE>>>

<SET P0!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (0 50 0 0)
	     (1 25 43 0)
	     (1 -25 43 0)
	     (1 -50 0 0)
	     (1 -26 -44 0)
	     (1 24 -44 0)
	     (1 49 -1 0)
	     (1 25 43 0)
	     (0 -45 0 0)
	     (1 45 0 0)
	     (0 0 -45 0)
	     (1 0 45 0)
	     (0 0 0 -50)
	     (1 0 0 50))>

<SET P1!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (-1 P0!-MCELLS <XLATE 0 0 -100>)
	     (0 0 0 -100)
	     (1 0 0 100)
	     (-1 P0!-MCELLS <XLATE 0 0 100>))>

<SET P2!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (-1 P1!-MCELLS <ROTX 1.5700000>)
	     (-1 P1!-MCELLS <ROTY 1.5700000>)
	     (-1 P1!-MCELLS))>

<SET SPCST!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (-1 SPCST1!-MCELLS)
	     (-1 SPCST0!-MCELLS)
	     (-1 SPCST0!-MCELLS <SCALE .50000000> <XLATE 0 0 -50>)
	     (-1 SPCST0!-MCELLS <SCALE .50000000> <XLATE 0 0 50>)
	     (-1 SPCST0!-MCELLS <SCALE .25000000> <XLATE 0 0 -100>)
	     (-1 SPCST0!-MCELLS <SCALE .25000000> <XLATE 0 0 100>))>

<SET SPCST0!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (0 100 0 0)
	     (1 97 20 0)
	     (1 91 40 0)
	     (1 80 58 0)
	     (1 66 74 0)
	     (1 50 86 0)
	     (1 30 95 0)
	     (1 10 99 0)
	     (1 -11 99 0)
	     (1 -31 95 0)
	     (1 -50 86 0)
	     (1 -67 74 0)
	     (1 -81 58 0)
	     (1 -92 40 0)
	     (1 -98 20 0)
	     (1 -100 0 0)
	     (1 -98 -21 0)
	     (1 -92 -41 0)
	     (1 -81 -59 0)
	     (1 -67 -75 0)
	     (1 -51 -87 0)
	     (1 -31 -96 0)
	     (1 -11 -100 0)
	     (1 10 -100 0)
	     (1 30 -96 0)
	     (1 49 -87 0)
	     (1 66 -75 0)
	     (1 80 -59 0)
	     (1 91 -41 0)
	     (1 97 -21 0)
	     (1 99 -1 0)
	     (1 97 20 0)
	     (0 0 0 0)
	     (1 100.00000 0.0000000 0)
	     (0 0 0 0)
	     (1 97.814764 20.791151 0)
	     (0 0 0 0)
	     (1 91.354558 40.673631 0)
	     (0 0 0 0)
	     (1 80.901730 58.778483 0)
	     (0 0 0 0)
	     (1 66.913110 74.314436 0)
	     (0 0 0 0)
	     (1 50.000069 86.602496 0)
	     (0 0 0 0)
	     (1 30.901796 95.105619 0)
	     (0 0 0 0)
	     (1 10.452961 99.452177 0)
	     (0 0 0 0)
	     (1 -10.452700 99.452204 0)
	     (0 0 0 0)
	     (1 -30.901554 95.105700 0)
	     (0 0 0 0)
	     (1 -49.999845 86.602629 0)
	     (0 0 0 0)
	     (1 -66.912918 74.314609 0)
	     (0 0 0 0)
	     (1 -80.901574 58.778694 0)
	     (0 0 0 0)
	     (1 -91.354458 40.673876 0)
	     (0 0 0 0)
	     (1 -97.814709 20.791403 0)
	     (0 0 0 0)
	     (1 -100.00000 .00026325746 0)
	     (0 0 0 0)
	     (1 -97.814816 -20.790891 0)
	     (0 0 0 0)
	     (1 -91.354666 -40.673406 0)
	     (0 0 0 0)
	     (1 -80.901884 -58.778275 0)
	     (0 0 0 0)
	     (1 -66.913307 -74.314266 0)
	     (0 0 0 0)
	     (1 -50.000309 -86.602366 0)
	     (0 0 0 0)
	     (1 -30.902046 -95.105544 0)
	     (0 0 0 0)
	     (1 -10.453220 -99.452155 0)
	     (0 0 0 0)
	     (1 10.452430 -99.452228 0)
	     (0 0 0 0)
	     (1 30.901309 -95.105776 0)
	     (0 0 0 0)
	     (1 49.999632 -86.602758 0)
	     (0 0 0 0)
	     (1 66.912712 -74.314791 0)
	     (0 0 0 0)
	     (1 80.901418 -58.778905 0)
	     (0 0 0 0)
	     (1 91.354348 -40.674097 0)
	     (0 0 0 0)
	     (1 97.814651 -20.791662 0))>

<SET SPCST1!-MCELLS
     '#MCELL(()
	     ()
	     3D
	     #FALSE ()
	     (0 0 0 100)
	     (1 0 0 -100)
	     (0 15.000000 0.0000000 -100)
	     (1 15.000000 0.0000000 100)
	     (0 14.672215 3.1186727 -100)
	     (1 14.672215 3.1186727 100)
	     (0 13.703183 6.1010447 -100)
	     (1 13.703183 6.1010447 100)
	     (0 12.135259 8.8167724 -100)
	     (1 12.135259 8.8167724 100)
	     (0 10.036966 11.147166 -100)
	     (1 10.036966 11.147166 100)
	     (0 7.5000103 12.990374 -100)
	     (1 7.5000103 12.990374 100)
	     (0 4.6352694 14.265843 -100)
	     (1 4.6352694 14.265843 100)
	     (0 1.5679442 14.917827 -100)
	     (1 1.5679442 14.917827 100)
	     (0 -1.5679050 14.917831 -100)
	     (1 -1.5679050 14.917831 100)
	     (0 -4.6352331 14.265855 -100)
	     (1 -4.6352331 14.265855 100)
	     (0 -7.4999768 12.990394 -100)
	     (1 -7.4999768 12.990394 100)
	     (0 -10.036937 11.147192 -100)
	     (1 -10.036937 11.147192 100)
	     (0 -12.135236 8.8168040 -100)
	     (1 -12.135236 8.8168040 100)
	     (0 -13.703168 6.1010814 -100)
	     (1 -13.703168 6.1010814 100)
	     (0 -14.672207 3.1187104 -100)
	     (1 -14.672207 3.1187104 100)
	     (0 -15.000000 .39488618E-4 -100)
	     (1 -15.000000 .39488618E-4 100)
	     (0 -14.672222 -3.1186337 -100)
	     (1 -14.672222 -3.1186337 100)
	     (0 -13.703200 -6.1010109 -100)
	     (1 -13.703200 -6.1010109 100)
	     (0 -12.135282 -8.8167412 -100)
	     (1 -12.135282 -8.8167412 100)
	     (0 -10.036996 -11.147140 -100)
	     (1 -10.036996 -11.147140 100)
	     (0 -7.5000464 -12.990355 -100)
	     (1 -7.5000464 -12.990355 100)
	     (0 -4.6353069 -14.265832 -100)
	     (1 -4.6353069 -14.265832 100)
	     (0 -1.5679831 -14.917823 -100)
	     (1 -1.5679831 -14.917823 100)
	     (0 1.5678645 -14.917834 -100)
	     (1 1.5678645 -14.917834 100)
	     (0 4.6351964 -14.265866 -100)
	     (1 4.6351964 -14.265866 100)
	     (0 7.4999449 -12.990414 -100)
	     (1 7.4999449 -12.990414 100)
	     (0 10.036907 -11.147218 -100)
	     (1 10.036907 -11.147218 100)
	     (0 12.135212 -8.8168358 -100)
	     (1 12.135212 -8.8168358 100)
	     (0 13.703152 -6.1011146 -100)
	     (1 13.703152 -6.1011146 100)
	     (0 14.672198 -3.1187494 -100)
	     (1 14.672198 -3.1187494 100))>

<MCELL CIR ()() 3D <> <CIRCLE 0 0 250 60>>

<DEFINE CIL (X Y Z DZ
            "AUX" (T <ATAN </ .DZ 250>>)
		  (S </ 1.0 <COS .T>>))
	<DISP CIR <XLATE .X .Y .Z>>
	<DISP CIR <SCALE .S 1.0 1.0>
		  <ROTY .T>
		  <XLATE .X .Y .Z>>
	<DISP CIR <SCALE .S 1.0 1.0>
		  <ROTY <- .T>>
		  <XLATE .X .Y .Z>>
	<DISP CIR <SCALE 1.0 .S 1.0>
		  <ROTX .T>
		  <XLATE .X .Y .Z>>
	<DISP CIR <SCALE 1.0 .S 1.0>
		  <ROTX <- .T>>
		  <XLATE .X .Y .Z>>>

<DEFINE CLN (X Y Z DZ ZH)
	<REPEAT ()
	<CIL .X .Y .Z .DZ>
	<COND (<L? <SET Z <- .Z .DZ>> .ZH><RETURN ,NULL>)> >>

<DEFINE MSENE1 ()
	<MCELL SENE1 ()()3D<>
		<CLN -511 -511 1500 250 -50>
		<P2TRIP7>
		<REPEAT ((X 200)(Y 200)(Z -100))
			<CUBE .X .Y .Z <+ .X 400><+ .Y 100><+ .Z 2100>>
			<COND (<G? <SET Z <+ .Z 500>> 2000><RETURN T>)>>
		<CALL SPT <ROTY 1.57><XLATE -600 250 50>>
		<CALL T3
		      <ROTX -1.57>
		      <ROTY 1.57>
		      <SCALE 2.0>
		      <XLATE 250 -511 1000>>
		<CALL T3 <ROTY 1.57><XLATE 0 250 1000>>
		<CALL T3 <ROTY 1.8><XLATE 0 250 1000>>>>

<DEFINE MT3 ()
	<MCELL T3 ()()3D<> <TEST3>>>

<DEFINE MSPT ()
	<MCELL SPT ()()3D<>
		<PARAG 0.0 <* 3.14159E3 .666667> A B 100>>>

<DEFINE A(X) <* .X <COS .X>>>
<DEFINE B(X) <* .X <SIN .X>>>

<DEFINE P2TRIP7 ("AUX" (8PI <* 3.14159 8.0>)
			(DT </ .8PI 50>)
			(Z 0)(T .8PI)(SF </ 500.0 .8PI>))
	<REPEAT ((I 1))
		<CALL P2
		      <ROTZ <- .T>>
		      <XLATE <* .SF <A .T>>
			     <* .SF <B .T>>
			     <* </ 10000.0 .8PI>
				<- .8PI .T>>>>
		<SET T <- .T .DT>>
		<COND (<G? <SET I <+ .I 1>> 7><RETURN T>)>>>

<DEFINE SENE1 ()
	<MT3>
	<MSPT>
	<MSENE1>>

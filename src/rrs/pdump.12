
<PACKAGE "PDUMP">

<ENTRY PDUMP>

<BLOCK (<ROOT>)>

<SET GLUE T>

PGLUE 

TMP 

IMPURE 

<ENDBLOCK>

<COND (<L? ,MUDDLE!- 100> <FLOAD "CLR;NBYTER NBIN">)
      (T <FLOAD "<BROOS>NBYTER.NBIN">)>

<MANIFEST R HW INDEX-FIELD>

<COND (<==? ,MUDDLE 104> <SETG TEMPDIR "MDLLIB">)
      (<SETG TEMPDIR "MUDTMP">)>

<SETG R 14>

<SETG HW <BITS 18>>

<SETG INDEX-FIELD <BITS 4 18>>

<SET TMPOB <MOBLIST TMP 7>>

<DEFINE FIXUP-MUNG (GOODS OFFSET
		    "AUX" TMP TYP IT FOO (POS 0)
			  (FIXUPS <CHUTYPE .GOODS WORD>))
   #DECL ((FIXUPS) <<PRIMTYPE UVECTOR> [REST WORD]>
	  (OFFSET TMP FOO EXTRA-COUNT) FIX (GOODS) <PRIMTYPE UVECTOR>
	  (EXTRA-SLOT-POS) LIST (IT FOO) <PRIMTYPE WORD>)
   <SET GOODS <REST .GOODS>>
   <SET FIXUPS <REST .FIXUPS>>
   <REPEAT ()
     <COND (<EMPTY? .FIXUPS> <RETURN .GOODS>)>
     <SET FIXUPS <REST .FIXUPS>>
     <SET POS 0>
     <REPEAT ()
	     <SET IT <1 .FIXUPS>>
	     <COND (<0? <SET FOO
			     <CHTYPE <GETBITS .IT <BITS 18 .POS>> FIX>>>
		    <SET FIXUPS <REST .FIXUPS>>
		    <RETURN>)>
	     <SET IT <PUTBITS .IT <BITS 18 .POS> <+ .FOO .OFFSET>>>
	     <PUT .FIXUPS 1 .IT>
	     <COND (<0? .POS> <SET FIXUPS <REST .FIXUPS>> <SET POS 18>)
		   (<SET POS 0>)>>>>

<DEFINE RSUB-DMP (RSUB NAM BINCHN FIXCHN
		  "AUX" OFF FIXES (EXTRA-SLOTS (1))
			(EXTRA-SLOT-POS .EXTRA-SLOTS)
			(EXTRA-COUNT <+ <* <LENGTH .RSUB> 2> 1>)
			(COD <CHTYPE <1 .RSUB> UVECTOR>) GB RNAM)
   #DECL ((RSUB) RSUBR (NAM) STRING
	  (COD) <SPECIAL <<PRIMTYPE UVECTOR> [REST <PRIMTYPE WORD>]>>
	  (EXTRA-COUNT) <SPECIAL <PRIMTYPE WORD>> (OFF) <PRIMTYPE WORD>
	  (GB FIXES) <OR FALSE <UVECTOR [REST <PRIMTYPE WORD>]>>
	  (EXTRA-SLOTS) LIST (EXTRA-SLOT-POS) <SPECIAL LIST>)
   <SET OFF <17 .BINCHN>>
   <SET FIXES
	<SET FIXES
	     <GET .RSUB RSUBR '<ERROR "NO FIXUPS AVAILABLE">>>>
   <COND (<NOT <TYPE? .FIXES UVECTOR>>
	  <ERROR "RSUBRS NOT IN MAGIC FORMAT">)>
   <SET FIXES <FIXUP-MUNG <SUBSTRUC .FIXES> .OFF>>
   <PRINTB .FIXES .FIXCHN>
   <PRINTB .COD .BINCHN>
   <PRINC " %<RSUBR!- '[ %<PCODE!- ">
   <PRIN1 .NAM>
   <PRINC " ">
   <PRINC .OFF>
   <PRINC ">">
   <REPEAT ((GOODS <LIST !<REST .RSUB> !<REST .EXTRA-SLOTS>>))
	   <COND (<EMPTY? .GOODS> <RETURN>)>
	   <PRINC " ">
	   <COND (<NOT <TYPE? <1 .GOODS> RSUBR RSUBR-ENTRY>> <PRIN1 <1 .GOODS>>)
		 (<OR <GASSIGNED? <SET RNAM <2 <1 .GOODS>>>>
		      <TYPE? <1 .GOODS> RSUBR-ENTRY>>
		  <PRIN1 <2 <1 .GOODS>>>)
		 (T
		  <PUT <1 .GOODS>
		       2
		       <OR <LOOKUP <SET RNAM <PNAME .RNAM>> .TMPOB>
			   <INSERT .RNAM .TMPOB>>>
		  <RSUB-DMP <1 .GOODS> .NAM .BINCHN .FIXCHN>)>
	   <SET GOODS <REST .GOODS>>>
   <PRINC "]>">
   <COND (<SET GB <GET .RSUB GLUE>>
	  <PROG (XG (COD <1 .RSUB>)
		 IL
		(LN  <- <LENGTH .COD>
		     <CHTYPE <GETBITS <NTH .COD <SET IL <LENGTH .COD>>>
				      <BITS 18>>
			     FIX>
		     <CHTYPE <GETBITS <NTH .COD .IL> <BITS 18 18>> FIX>
		     1>)
		 (NG
		  <BYTER <SET XG <IUVECTOR <+ 1 </ <LENGTH .RSUB> 16>> 0>>>)
		 (OG <BYTER .GB>) WD (CT 0))
		#DECL ((LN CT) FIX (WD) <PRIMTYPE WORD> (OG NG) <BYTES 2 0>
		       (XG) <UVECTOR [REST <PRIMTYPE WORD>]> (COD) CODE)
		<REPEAT ()
			<AND <G? <SET CT <+ .CT 1>> .LN> <RETURN>>
			<SET WD <NTH .COD .CT>>
			<AND <NOT <0? <1 .OG>>>
			     <==? <CHTYPE <GETBITS .WD ,INDEX-FIELD> FIX> ,R>
			     <PUT .NG
				  <+ </ <CHTYPE <GETBITS .WD ,HW> FIX> 2> 1>
				  <1 .OG>>>
			<SET OG <REST .OG>>>
		<PUT .RSUB PGLUE .XG>>)>>

<DEFINE PDUMP ("TUPLE" NAMS
	       "AUX"  (MUDDLE ,MUDDLE)RSUB NAM TMP DIR
	       	     (PNAM <COND (<==? .MUDDLE 104>
				  <UNIQUE-FILE-20 <SPNAME <1 .NAMS>>>)
				 (<UNIQUE-FILE <SPNAME <1 .NAMS>>>)>)
		     BINCHN FIXCHN
		     (OBL <COND (<EMPTY? .OBLIST> FULL-OBL) (BLOCK)>)
		     (OOBLIST .OBLIST) GOODS THIS-FORM FIXUPS POS OBLIST ITEM)
   #DECL ((PNAM MUDNUM) STRING (POS) FIX (FIXUPS) <UVECTOR <PRIMTYPE WORD>>
	  (THIS-FORM) FORM (OBLIST) <SPECIAL ANY> (GOODS) LIST
	  (BINCHN FIXCHN) <OR FALSE CHANNEL> (MUDDLE) FIX)
   <PROG ()
     <COND
      (<NOT <SET BINCHN
		 <OPEN "PRINTB"
		       .PNAM
		       <STRING "SAV" <UNPARSE .MUDDLE>>
		       "DSK"
		       ,TEMPDIR>>>
       <RETURN .BINCHN>)
      (<NOT <SET FIXCHN
		 <OPEN "PRINTB"
		       .PNAM
		       <COND (<==? .MUDDLE 104> "FIXUP")
			     (<STRING "FIX" <UNPARSE ,MUDDLE>>)>
		       "DSK"
		       ,TEMPDIR>>>
       <CLOSE .BINCHN>
       <RETURN .FIXCHN>)
      (ELSE
       <PRINTB '![0 0!] .FIXCHN>
       <REPEAT (OUTCHAN)
	 #DECL ((OUTCHAN) <SPECIAL <OR FALSE CHANNEL>>)
	 <COND (<EMPTY? .NAMS> <RETURN>)>
	 <SET NAM <1 .NAMS>>
	 <PROG ()
	   <COND
	    (<SET OUTCHAN <OPEN "PRINT"
				<COND (<G? .MUDDLE 100> "PDMP")
					      (T "_PDMP_")>
				<COND (<G? .MUDDLE 100> "TMP")
				      (T ">")>
				"DSK" <SNAME>>>)
	    (ELSE
	     <ERROR OUTPUT-OPEN-FAILED-ERRET-ANYTHING-TO-RETRY-ERRORS
		    PDUMP
		    .OUTCHAN>
	     <AGAIN>)>>
	 <PROG ()
	   <COND (<NOT <ASSIGNED? .NAM>>
		  <RETURN '#FALSE ("OBJECT NOT GROUP NAME")>)>
	   <SET GOODS ..NAM>
	   <SET OBLIST <GET .NAM .OBL '.OOBLIST>>
	   <PRINC "'<PCODE ">
	   <PRIN1 .PNAM>
	   <PRINC ">">
	   <CRLF>
	   <REPEAT (MCR)
		   <COND (<EMPTY? .GOODS> <RETURN>)>
		   <COND (<AND <TYPE? <1 .GOODS> FORM>
			       <SET THIS-FORM <1 .GOODS>>
			       <==? 3 <LENGTH .THIS-FORM>>
			       <OR <AND <SET MCR <TYPE? <3 .THIS-FORM> MACRO>>
					<TYPE? <SET RSUB <1 <3 .THIS-FORM>>>
					       RSUBR>>
				   <TYPE? <SET RSUB <3 .THIS-FORM>> RSUBR>>
			       <COND (<TYPE? <1 .RSUB> CODE>)
				     (ELSE
				      <PRINC "PURE-RSUBR-IN-GROUP " ,OUTCHAN>
				      <PRIN1 <2 .THIS-FORM> ,OUTCHAN>
				      <TERPRI ,OUTCHAN>)>
			       <NOT <GET .RSUB IMPURE>>>
			  <TERPRI>
			  <PRINC "<">
			  <PRIN1 <1 .THIS-FORM>>
			  <PRINC " ">
			  <PRIN1 <2 .THIS-FORM>>
			  <PRINC " ">
			  <COND (.MCR <PRINC "#MACRO (">)>
			  <RSUB-DMP .RSUB .PNAM .BINCHN .FIXCHN>
			  <PRINC <COND (.MCR ")> ") (ELSE "> ")>>
			  <AND <GET .RSUB PGLUE>
			       <PRINT <FORM AND
					    '<ASSIGNED? GLUE>
					    '.GLUE
					    <FORM PUT
						  <FORM GVAL <2 .RSUB>>
						  PGLUE
						  <GET .RSUB PGLUE>>>>>)
			 (<NOT <AND <TYPE? <SET ITEM <1 .GOODS>> FORM>
				    <==? <LENGTH .ITEM> 4>
				    <==? <1 .ITEM> AND>
				    <=? <2 .ITEM> '<ASSIGNED? GLUE>>
				    <=? <3 .ITEM> '.GLUE>
				    <TYPE? <SET ITEM <4 .ITEM>> FORM>
				    <==? <LENGTH .ITEM> 4>
				    <==? <1 .ITEM> PUT>
				    <==? <3 .ITEM> GLUE>
				    <TYPE? <2 .ITEM> FORM>
				    <==? <LENGTH <2 .ITEM>> 2>
				    <==? <1 <2 .ITEM>> GVAL>>>
			  <PRINT <1 .GOODS>>)>
		   <TERPRI>
		   <SET OBLIST <GETPROP .GOODS .OBL '.OBLIST>>
		   <SET GOODS <REST .GOODS>>>>
	 <COND
	  (<G? .MUDDLE 100>
	   <CLOSE .OUTCHAN>
	   <RENAME <STRING <9 .OUTCHAN> ":<" <10 .OUTCHAN> !\>
			   <7 .OUTCHAN> !\. <8 .OUTCHAN>>
		   TO
		   <STRING <9 .OUTCHAN> ":<" <10 .OUTCHAN> !\>
			   <SPNAME .NAM> !\. "FBIN">>)
	  (T
	   <COND (<RENAME .OUTCHAN <PNAME .NAM> "FBIN">)
		 (ELSE
		  <ERROR
		   RENAME-OF-TEMP-FAILED-ERRET-ANYTHING-TO-CONTINUE
		   PDUMP
		   .NAM>)>
	   <CLOSE .OUTCHAN>)>
	 <SET NAMS <REST .NAMS>>>
       <SET POS <17 .FIXCHN>>
       <ACCESS .FIXCHN 0>
       <PRINTB <UVECTOR .POS ,MUDDLE> .FIXCHN>
       <CLOSE .BINCHN>
       <CLOSE .FIXCHN>
       "DUMPED")>>>

<SETG LOW-BITS <BITS 6>>

;"LOW ORDER SIX BITS OF A WORD"

<COND (<N==? ,MUDDLE 104> <SETG DIRBUF <IUVECTOR 1024 0>>)>

;"BUFFER TO HOLD DIRECTORY"

<SETG RCL ![0!]>

;"SINGLE WORD BUFFER. USED TO READ LENGTHS AND SO FORTH"

<COND (<G? ,MUDDLE 100> <SETG SAV-FILE "<MUDSAV>SAV.FILE">)
      (<SETG SAV-FILE "MUDSAV;SAV FILE">)>

<SETG TSTRING <ISTRING 6>>
<GDECL (TSTRING) STRING>
<DEFINE UNIQUE-FILE-20 (PNAM "AUX" CH)
  #DECL ((PNAM) STRING (CH) <OR FALSE CHANNEL>)
  <REPEAT ((CNT 0) (TST ,TSTRING) NP (MST <STRING "SAV" <UNPARSE ,MUDDLE>>))
    #DECL ((CNT) FIX (TST) STRING)
    <COND (<0? .CNT>
	   <SET NP .PNAM>)
	  (<SET NP <STRING <UNPARSE .CNT> .PNAM>>)>
    <COND (<G? <LENGTH .NP> 6>
	   <SUBSTRUC .NP 0 6 .TST>
	   <SET NP .TST>)>
    <COND (<SET CH <OPEN "READB" .NP .MST "DSK" "MDLLIB">>
	   <CLOSE .CH>)
	  (<RETURN .NP>)>
    <SET CNT <+ .CNT 1>>>>

;"MAIN FILE DIRECTORY"

<DEFINE UNIQUE-FILE (PNAM "AUX" (CH <OPEN "READB" ,SAV-FILE>)) 
   #DECL ((PNAM) STRING (CH) <OR FALSE CHANNEL>)
   <COND (<NOT .CH> <ERROR CAN 'T-OPEN-MAIN-FILE!-ERRORS>)>
   <REPEAT ((CNT 0) (MAXD 1) CCH TNUM TSTRING)
     #DECL ((CNT MAXD) FIX (TNUM) <PRIMTYPE WORD> (CCH) <OR FALSE CHANNEL>
	    (TSTRING) STRING)
     <COND
      (<==? .CNT 0>
       <LOAD-DIRECTORY .CH
		       <SET TNUM <SIXBIT <SET TSTRING .PNAM>>>>)
      (<==? .CNT .MAXD>
       <LOAD-DIRECTORY
	.CH <SET TNUM
		 <SIXBIT <SET TSTRING <STRING <UNPARSE .CNT> .PNAM>>>>>
       <SET MAXD <* .MAXD 10>>)
      (<SET TNUM
	    <SIXBIT <SET TSTRING <STRING <UNPARSE .CNT> .PNAM>>>>)>
     <COND (<NOT <BINSRCH .TNUM <REST ,DIRBUF> <CHTYPE <1 ,DIRBUF> FIX>>>
	    <SET CCH
		 <OPEN-NR "READB"
			  <STRING ,TEMPDIR
				  ";"
				  <STRING .TSTRING " SAV" <UNPARSE ,MUDDLE>>>>>
	    <COND (.CCH <CLOSE .CCH>) (<CLOSE .CH> <RETURN .TSTRING>)>)>
     <SET CNT <+ .CNT 1>>>>

<DEFINE SIXBIT (STR "AUX" (WORD 0) (POS 30) (CHR 0))
	#DECL ((STR) STRING (WORD POS CHR) FIX)
	<REPEAT ()
		<COND (<OR <EMPTY? .STR> <L? .POS 0>>
		       <RETURN <CHTYPE .WORD FIX>>)
		      (<OR <L? <SET CHR <CHTYPE <1 .STR> FIX>> 32>
			   <G? .CHR 122>>
		       <ERROR "BAD CHAR IN SIXBIT" <1 .STR>>
		       <RETURN 0>)
		      (<G=? .CHR 96> <SET CHR <- .CHR 64>>)
		      (<SET CHR <- .CHR 32>>)>
		<SET WORD <PUTBITS .WORD <BITS 6 .POS> .CHR>>
		<SET STR <REST .STR>>
		<SET POS <- .POS 6>>>>

<DEFINE BINSRCH (NM1 DIR LNT "AUX" (EXIT .LNT)) 
	#DECL ((NM1) FIX (LNT) FIX (DIR) <UVECTOR [REST <PRIMTYPE WORD>]>)
	<REPEAT UP ()
		<COND (<0? <SET LNT <CHTYPE <ANDB </ .LNT 2> -2> FIX>>>
		       <REPEAT ()
			       <COND (<L=? .EXIT 0> <RETURN <> .UP>)
				     (<SET EXIT <- .EXIT 2>>
				      <AND <==? .NM1 <1 .DIR>>
					   <RETURN .DIR .UP>>
				      <SET DIR <REST .DIR 2>>)>>)
		      (<==? .NM1 <1 .DIR>> <RETURN .DIR>)
		      (<G=? .NM1 <NTH .DIR <+ .LNT 1>>>
		       <SET DIR <REST .DIR .LNT>>)>
		<SET EXIT <- .EXIT .LNT>>>>

<DEFINE LOAD-DIRECTORY (CHN NAME) 
	#DECL ((CHN) CHANNEL (NAME) FIX)
	<REPEAT (CH)
		#DECL ((CH) FIX)
		<SET CH <CHTYPE <GETBITS .NAME ,LOW-BITS> FIX>>
		<COND (<NOT <0? .CH>> <SET NAME .CH> <RETURN>)
		      (<SET NAME </ .NAME 64>>)>>
	<ACCESS .CHN 0>
	<READB ,RCL .CHN>
	<ACCESS .CHN <+ 1 <MOD .NAME <1 ,RCL>>>>
	<READB ,RCL .CHN>
	<ACCESS .CHN <* <1 ,RCL> 1024>>
	<READB ,DIRBUF .CHN>
	,DIRBUF>

<ENDPACKAGE>

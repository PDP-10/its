.ADD(ALLLOCS,LG627,LG627V)	;-*-Midas-*-
.ADD(ALLLOCS,LG631,LG627V)
MDWL,<
.ADD(ALLWW,LG627,L627TV)
.ADD(ALLWW,LG631,L627TV)
>;MDWL
;Note! These .ADD's must be outside of block structure

BEGIN LG627

;Nomenclature for universal style boards:
;    Field-size
;	(5)	%DIPG,  group A,B,C, ...
;	(5)	%DIPC,	column within group, A:S, A:T, A:S
;	(8)	%DIPN,  pin # within column (1-62)

%DIPG__<POINT 5,,22>-=18		;Group (A:C)
%DIPC__<POINT 5,,27>-=18		;Column (A:S)
%DIPN__<POINT 8,,35>-=18		;Pin number (up to 63)
GPINOF__=100				; (100-177) G pins are offset 100 from
					; neighboring pin
VPINOF__=200				; (200-277) V pins are offset 200 from
					; neighboring pin

%CONT__<POINT 1,,22>-=18		;CONNECTOR TYPE 0  DEC  1  FLAT CABLE "J"
%CONN__<POINT 4,,26>-=18		;CONNECTOR NUMBER (LETTER OR JACK #)
%CONP__<POINT 9,,35>-=18		;CONNECTOR PIN #

NGRPS__6			; For UML ????? A - F ROWS
;GPINS__400				;NOMEN FOR "G" PINS ON BOARD STARTS AT 400
;					; 401 IS "G1", ETC.
;BRDGND__=10				; PIN 10 IS DEDICATED GROUND
;BRDPWR__=20				; PIN 20 IS DEDICATED POWER


MXDPIN__=36				;MAXIMUM NUMBER OF DEC PINS/CONNECTOR

;The LG627 board is a universal board.
;The DIP area is broken into three groups
;From DIP side:
;Group C consists of columns S thru A, each column
; is 62 pins high
;Group B consists of columns T thru A, also 62 high.
;Group A columns S thru G are 62 high, columns F thru A are only 13:62

;The V,G pins are located next to every other column, starting with A
;G pins are present every 8th pin starting at 62
;V pins, every 8th starting at 58

;There are 9 26 pin Flat cable connectors on the back of the board.
;J1-J4 are vertically oriented above AA-AE, J5-J9 across the
; back of the board



;	All calculations are done from the DIP side.

;	(0,0) at LOWER left hand corner in left handed coordinate system.
;	X+ to right, Y+ is up
;	0,0 corresponds to FV1 of DEC connectors.
;	The first DIP pin column (CS62) starts at x=200,y=500
;	The last column of DIP pins is at x=14900, but the
;	last V,G pins are at x=15000

grpxa__=14900				;Rightmost X for group A
grpxb__=10100				;Rightmost X for group B
grpxc__=4700				;Rightmost X for group C
grpxl__=200				;Leftmost X of DIP group C
grpyt__=6600				;Top of DIP row
grpyb__grpyt-=6100			;62 pins down

conxj1__=14900				;J1 flatcable X
conyj1__=5800				;J1-J4 Y locn of pin 1
conxj5__=13100
conxdel__=2300				;connectors are 2.3 inches apart
conyj5__=6900

COMMENT 

AUGAT-LG627 CONNECTOR PIN FORMAT PRINTS AS J#-# OR LL#
THE J IS LITERAL.

______|_____|_____|_____|_____|_____|
|        22      26                35
|       |1|   4   |        9        |
|_______|_|_______|_________________|
         |    |  	|
<        |    |  	|------------>PIN
         |    |   
         |    |----------------------CONNECTOR NUMBER (JACK OR ROW LETTER)
         |
<        |--------------------------->CONNECTOR TYPE 0  DEC, 1  FLAT CABLE
      






;THE TRANSFER VECTOR FOR THE AUGUAT 8136-LG627 BOARD

^LG627V:			
	JRST LCINIT		;BOARD INITIALIZATION
	JRST QUPIN		;CHECKS FOR WILD CONNECTOR BODIES
	JRST $SLTOUT		;PRINTS CARD LOC (B-R-S)
	JRST $GETSLT		;READS CARD LOC (B-R-S)
	JRST PRNLOC		;PRINTS SOCKET, DIP, OR CONNECTOR LOC
	JRST PRNPIN		;PRINTS SOCKET, DIP, OR CONNECTOR PIN
	JRST CPNSEP		;SEPARATE CONNECTORS LOC/PIN PARTS FROM 18 BIT FORM
	JRST CPNMER		;MERGE CONN LOC/PIN PARTS BACK
	JRST CPNMAP		;MAP CARD LOC, CPIN-LOC INTO BACKPANEL PIN LOC
MDWL,<	JRST MAPOST  >		;CONVERT FROM DIP-LOC/PIN TO POST

MDPC,<
	JRST GTSLTL		;READS (B-R-S) AND BODY LOCN
MD,<	JRST GTCONP		;READS (B-R-S) AND CONNECTOR PIN
	JRST CPOPJ		;LOCFUK
>;MD
>;MDPC

MWL,<
	JRST GETLOC		;READS EITHER DIP LOC, OR CONNECTOR LOC
	JRST RAYDIP		;PRINTS DIP, OR CONNECTOR LOC IN FORTRAN FORM
	JRST CPARTP		; (PRINT EDGE PIN TO PARTITION FILE)
	JRST SEQLOC		;TESTS FOR BODY LOCS BEING SEQUENTIAL 
	JRST CONGIN		;GENERATE NEXT INVENTED PIN TO REPLACE "U" PINS
	JRST $GTSLTT		;GETSLT, BUT WITH FIRST CHAR IN CHRREG
	JRST AUGDIP
>;MWL
	[ASCIZ/LL#/]		; CUE FOR BOARD SLOT
	[ASCIZ /#/]		; CUE FOR BOARD PIN
MDPC,<	[ASCIZ/J#-# or LL# /]	;CUE FOR CONNECTOR PIN
	[ASCIZ/LL# /]		;CUE FOR BODY LOC
	[ASCID /AA01/]		;PROTOTYPE FOR BODY LOC
>;MDPC
MWL,<	[ASCIZ/LL#/]		;WIRELISTER BODY CUE
	[ASCIZ/J# or L/]	;WIRELISTER CONNECTOR BODY CUE
>;MWL
CHECK LG627V,LTVLEN

L2NSUB:	BLOCK L2NLEN			;*******
N2LSUB:	REPEAT N2LLEN, < "?"
>
EN2L__.

;NOTE! G is included as a legal letter because it is a column name.
;  However, it isn't a legal DEC pin name, so we must be careful.

NNN__1
FOR I IN(A,B,C,D,E,F,G,H,J,K,L,M,N,P,R,S,T,U,V)
<	L2N2L I,0
>
FOR I IN (I,O,Q)
<	L2N2L I,1B0
>

N2LMAX__NNN-1

ORG EN2L


LCINIT:	MOVE T,[L2NSUB,,L2N]
	BLT T,L2N+L2NLEN+N2LLEN-1
	MOVEI T,N2LMAX
	MOVEM T,MAXN2L
	MOVE T,NOMTYP
	MOVE TT,@LNAMES(T)
	SETZ T,
	CAMN TT,[ASCII/LG627/]
	 MOVE T,[PAR627,,PARAMS]
	CAMN TT,[ASCII/LG631/]
	 MOVE T,[PAR631,,PARAMS]
	SKIPN T
	 PUSHJ P,FUCKUP
	BLT T,PARAMS+LPARAM-1
	POPJ P,

;Parameters for differing board types sharing this Board file.
STORAGE(IMPURE)
PARAMS:
;;This table must be setup for the selected board type
MXJCON:	0		;MAX NUMBER FLAT CABLE CONNECTORS
MXDCON:	0		;MAX NUMBER OF DEC STYLE CONNECTORS
FLTMAX__=20		;Max no of Flat cable conns among these boards
FLTSIZ:	BLOCK FLTMAX	;Number of pins in connector

Mwl,<
UMLCOL__6		;UML IS PRINTED WITH DIP ROWS DOWN LENGTH OF THE PAPER
UMLROW:	0		;LENGTH OF ROW IS UML #ROWS
FLTPIN:	BLOCK FLTMAX		;x,y locations for FlatCable connectors
>;Mwl
LPARAM__.-PARAMS
STORAGE(PURE)

;; ***  VARIABLE STUFF FOR LG627 ***
PAR627:
FLT627__=9		;TOTAL # OF SCOTCHFLEX CONNECTORS
DEC627__=6
	FLT627		;MAX NUMBER FLAT CABLE CONNECTORS
	DEC627		;MAX NUMBER OF DEC STYLE CONNECTORS

;FLTSIZ:
REPEAT FLTMAX,<=26  >

;For UML
MWL,<
COL627__=30		;30 DIPS IN EACH OF 6 ROWS  ???
	COL627		;LENGTH OF ROW IS UML #ROWS

;**************************************** SCOTCH-FLEX PINS

..tem__.

;FLTPIN:			; X,,Y LOCATION OF LOWER LEFT PIN OF FLAT CABLE GROUP
				;INDEXED BY FLAT CABLE NUMBER-1
..X__conxj1			;J1-J4 ARE VERTICAL
REPEAT 4,<
	..X,,conyj1
..X__..X-=400
>

..X__conxj5		;J5-J9 ARE ALONG TOP
REPEAT 5,<
	..X,,conyj5
..X__..X-conxdel
>

REPEAT FLTMAX-<.-..TEM>,<0  >


>;MWL
CHECK PAR627,LPARAM
PAR631:
FLT631__=9		;TOTAL # OF SCOTCHFLEX CONNECTORS
DEC631__=6
	FLT631		;MAX NUMBER FLAT CABLE CONNECTORS
	DEC631		;MAX NUMBER OF DEC STYLE CONNECTORS

;FLTSIZ:
..TEM__.
REPEAT 4,<=26  >
REPEAT 5,<=40  >
REPEAT FLTMAX-<.-..TEM>,<0  >

;For UML
MWL,<
COL631__=30		;30 DIPS IN EACH OF 6 ROWS  ???
	COL631		;LENGTH OF ROW IS UML #ROWS

;**************************************** SCOTCH-FLEX PINS

..tem__.

;FLTPIN:			; X,,Y LOCATION OF LOWER LEFT PIN OF FLAT CABLE GROUP
				;INDEXED BY FLAT CABLE NUMBER-1
..X__CONXJ1		;J1-J4 ARE VERTICAL
REPEAT 4,<
	..X,,CONYJ1
..X__..X-=400
>
	=13100,,=6900	;J5
	=10400,,=6900	;J6
	=7700,,=6900	;J7
	=4500,,=6900	;J8
	=2100,,=6900	;J9

REPEAT FLTMAX-<.-..TEM>,<0  >

>;MWL

CHECK PAR631,LPARAM

MWL,<
;**************************************** DEC CONNECTOR PINS


;CONNECTORS, DEC
DECCNY__=0		;0.0" UP TO BOTTOM ROW OF DEC CONNECTORS
DCPINO__=200		;.2" UP FROM BOTTOM TO SECOND ROW
DECX1__=2700		;2.7" LEFT FOR LARGE CONNECTOR SPACES
DECX2__=2600		;2.6" LEFT FOR SMALL CONNECTOR SPACES
GAP1T2__DECX2-=1900	; THE SMALLER GAP BETWEEN DEC PADDLES
DCPINS__=1900		;1.9" RIGHT FOR PIN A1 RELATIVE TO START OF CONNECTOR
DCPNSP__=100		;.1" BETWEEN PINS HORIZONTALLY
DCGRSP__=200		;.2" BETWEEN GROUPS OF PINS

DCLOC:				;LOCATION OF DEC STYLE CONNECTORS

X__DECX1*<DEC627/2>+DECX2*<DEC627/2-1>	;THE X OF V1 ON THE RIGHTMOST PADDLE!
	;INITIALLY FAR TO THE RIGHT, CONNECTORS LETTERED IN REVERSE
REPEAT DEC627/2,
<	X,,DECCNY
X__X-DECX1
	X,,DECCNY
X__X-DECX2
>
>;mwl
;Print DIP location.
;(note that the DIP location is really the board pin location that
;  pin 1 of the DIP goes into.  Therefore there is allowance for
;  naming V and G pins on the board.)

PRNLOC:	SETZ TT,
	JUMPE A,CPOPJ
	JUMPL A,CNLOC			;Connector or DIP?
	LDB T,[%DIPG,,A]		;GROUP LETTER
	JUMPE T,CPOPJ			;GROUP NULL?
	PUTBYT @N2L(T)			;CONVERT TO LETTER AND PRINT
	LDB T,[%DIPC,,A]		;Column letter
	PUTBYT @N2L(T)			;CONVERT TO LETTER AND PRINT
	MOVEI T,2			;SETUP FOR 2 DIGIT NUMBER PRINT
	MOVEM T,NDIG
	LDB T,[%DIPN,,A]		;position within column
	JUMPE T,PRNLO2
	CAIL T,VPINOF
	 JRST [	PUTBYT "V"
		SUBI T,VPINOF
		JRST PRNLO1]
	CAIL T,GPINOF
	 JRST [	PUTBYT "G"
		SUBI T,GPINOF
		JRST PRNLO1]
PRNLO1:	PUSHJ P,NPUTDEC			;PRINT IT OUT
PRNLO2:	MOVEI TT,"-"			;Suggested separation char
	POPJ P,

CNLOC:	LDB T,[%CONT,,A]		;CONNECTOR TYPE
	JUMPE T,CNDEC			;DEC STYLE CONNECTOR
	PUTBYT "J"
	LDB T,[%CONN,,A]		;CONNECTOR NUMBER
	MOVEI TT,2
	MOVEM TT,NDIG
	PUSHJ P,NPUTDEC
	MOVEI TT,"-"
	POPJ P,

CNDEC:	LDB T,[%CONN,,A]		;CONNECTOR ROW NUMBER
	PUTBYT @N2L(T)
	SETZ TT,		;DEC DOESN'T WANT SEP BETWEEN A,A1
	POPJ P,	

PRNPIN:	LDB T,[%%PINN,,A]
	JUMPL A,PRNPNC
PRNPN1:
MWL,<
	MOVEI TT,2			;SETUP FOR 2 DIGIT NUMBER PRINT
	MOVEM TT,NDIG
	CAIL T,VPINOF
	 JRST [	PUTBYT "V"
		SUBI T,VPINOF
		JRST NPUTDEC]
	CAIL T,GPINOF
	 JRST [	PUTBYT "G"
		SUBI T,GPINOF
		JRST NPUTDEC]
	JRST NPUTDEC			;PRINT IT OUT
>;MWL
MDPC,<	JRST PUTDEC  >


PRNPNC:	LDB TT,[%CONT,,A]		;DEC CONNECTOR PIN PRINTOUT
	JUMPN TT,PRNPN1
	ASH T,-1
	PUTBYT @N2L(T)			;PRINT DEC CONNECTOR LETTER
	LDB T,[%%PINN,,A]
	ANDI T,1
	ADDI T,1
	MOVEI TT,1
	MOVEM TT,NDIG
	JRST NPUTDEC			;PRINT AS 1 DIGIT TRAILING NUMBER

;CONVERT PIN-SPEC TO POST-SPEC
;MAPOST (DWL) - CONVERT FROM DIP-LOC,PIN# TO SOCKET-LOC, PIN#
;  A = MBIT+PIN#,,LOC
;  B = PACKAGE
;Skips if can map, with MAPSOC set.
;  A = New MBIT+PIN#,,LOC
;  B = FLAGS,,
;	%MPLOC	;LOC WAS CHANGED
;	%MPPIN	;PIN WAS CHANGED, DIFFERENCE IN RH (TO CHECK FOR +1)
;	%MPUNI
;	%MPROT  etc.
;(Note: Pin 0 has a special hack just removes the within-socket offset, if any.)

;Map onto post on board. Remeber that universal pattern is in
; three groups A,B,C. Columns are AA-AS,BA-BT, illegal, CA-CS

MDWL,<
MAPOST:	TLOE A,MAPSOC
	 OUTSTR [ASCIZ /PIN ALREADY MAPPED TO POST???
/]
	JUMPL A,[SETZ B,	;CONNECTOR, NO CHANGE
		JRST CPOPJ1]
	PUSH P,C
	PUSH P,D
	PUSH P,A			;Save slot spec
;Call MAPUNI to map onto column, row
	LDB C,[%DIPC,,A]		;Dip column lettern
	MOVNS C				;Reflect so larger is to right DIP side
	LDB D,[%DIPN,,A]		;Row within column
	LDB A,[%%PINN,,A]
	JUMPE A,[	AOS -3(P)	;"strip dip-offset", NA to uni boards
		JRST MAPOSX]
	PUSHJ P,MAPUNI			;Map as universal board
	 JRST MAPOSX			;Fail
;Now error check, and look for movement between groups
	SKIPLE D			;can only be rows 1-62
	CAILE D,=62
	 JRST MAPOSX
	MOVNS C				;convert back column #
	LDB A,[%DIPG,,(P)]		;Which universal group?
MAPOSA:	CAMN A,L2N+"A"
	 JRST [	CAMLE C,L2N+"S"		;overflowed into group B?
		 JRST [	SUB C,L2N+"S"
			ADD C,L2N+"A"
			SOS C		;S+1 is A
			AOJA A,MAPOSB]
		CAMGE C,L2N+"A"		;Underflowed?
		 JRST MAPOSX
		CAMG C,L2N+"F"		;A-F can only be 13-62
		 JRST [	CAIGE D,=13
			 JRST MAPOSX
			JRST MAPOS1]
		JRST MAPOS1]		;OK
MAPOSB:	CAMN A,L2N+"B"
	 JRST [	CAMGE C,L2N+"A"		;underflowed into group A?
		 JRST [	SUB C,L2N+"A"
			AOS C
			ADD C,L2N+"S"	;"A"-1 IS "S"
			SOJA A,MAPOSA]
		CAMLE C,L2N+"T"
		 JRST [	SUB C,L2N+"T"	;Overflowed into group C
			ADD C,L2N+"A"
			SUBI C,2	;"T"+2 IS "A"
			AOJA A,MAPOSC]
		JRST MAPOS1]
MAPOSC:	CAME A,L2N+"C"
	 JRST MAPOSX
	CAMGE C,L2N+"A"
	 JRST [	SUB C,L2N+"A"		;Underflowed into group B
		AOJE C,MAPOSX		;No column to left of A
		AOS C
		ADD C,L2N+"T"		;Rightmost col of group B
		SOJA A,MAPOSB]
	CAMLE C,L2N+"S"
	 JRST MAPOSX
MAPOS1:	DPB A,[%DIPG,,(P)]
	POP P,A
	HRLI A,MAPSOC
	SETZ T,
	DPB T,[%DIPN,,A]
	DPB D,[%%PINN,,A]
	DPB C,[%DIPC,,A]
;B has flags from MAPUNI
	AOSA -2(P)
MAPOSX:	 POP P,A
	POP P,D
	POP P,C
	POPJ P,
>;MDWL

;Read "DIP Slot" which in this case is Group,Column-letter,row-number
GTSLTL:	PUSH P,A
	MOVEI A,[[ASCIZ /LL#./]
		 0]
	PUSHJ P,LNPARS
	 JRST GTSL0
	 JRST GTSL1
	SETZ TT,
	PUSHJ P,GATLOC
	 JRST GTSL0
;	CAIE CHRREG,"@"
;	 JRST GTSL2
;	PUSH P,TT
;	GETNUM
;	POP P,TT
;	JUMPE NUMREG,GTSL0
;	DPB NUMREG,[%DIPOF,,TT]
GTSL2:	MOVEM TT,DESTIN
	AOS -1(P)
GTSL1:	AOS -1(P)
GTSL0:	POP P,A
	POPJ P,

GATLOC:	MOVE A,ARG1
	DPB A,[%DIPG,,TT]
	MOVE A,ARG2
	DPB A,[%DIPC,,TT]
	MOVE A,ARG3
	DPB A,[%DIPN,,TT]
 	JRST CPOPJ1

MD,<
;THIS SHOULD PROBABLY TRY FOR B-R-S ALSO, BUT...?
GTCONP:	PUSH P,A
	MOVEI A,[[ASCIZ /J#-#/]
		 [ASCIZ /LL#/]
		 0]
	PUSHJ P,LNPARSE
	 JRST GTCON0
	 JRST GTCON1			;NULL INPUT
	PUSHJ P,GATCON		;GET JACK OR PADDLE PART OF LOC
	 JRST GTCON0
	LDB A,[%CONT,,TT]
	JUMPE A,GTDCP		;GET DEC STYLE CONNECTOR PIN
	MOVE A,ARG4
GTCON3:	DPB A,[%CONP,,TT]
	HRRZM TT,DESTIN
	AOS -1(P)
GTCON1:	AOS -1(P)
GTCON0:	POP P,A
	POPJ P,

GTDCP:	SOSL A,ARG3
	CAILE A,1
	 JRST GTCON0
	MOVE A,ARG2
	ASH A,1
	IOR A,ARG3
	JRST GTCON3
>;MD

GATCON:	SETZ TT,
	JUMPN A,GTCN1			;DEC PADDLE? (VS. SCOTCHFLEX)
	MOVE A,ARG2			;ARG1 IS THE "J"
	DPB A,[%CONN,,TT]
	MOVEI A,1
GTCN2:	DPB A,[%CONT,,TT]		;THIS IS A FLAT CABLE CONNECTOR
	TLO TT,MAPCON
	JRST CPOPJ1

GTCN1:	MOVE A,ARG1
	DPB A,[%CONN,,TT]
	MOVEI A,0			;THIS IS A DEC STYLE CONNECTOR
	JRST GTCN2
	

MWL,<

GETLOC:	MOVEI A,[[ASCIZ /J#/]		;0 - Scotchflex connector
		 [ASCIZ /LL#/]		;1 - Board socket
		 [ASCIZ /LL#@#/]	;2 - Board socket with offset
		 [ASCIZ /L/]		;3 - Dec connector
		 0]
	PUSHJ P,LNPARSE
	 POPJ P,
	 POPJ P,
	SKIPE A			;STRING 0,3 ARE CONNECTOR FORMATS
	CAIN A,3		;DEC CONN MUST BE .NE. 0 FOR GATCON
	 JRST GATCON
	SETZ TT,
;	MOVE T,ARG4
;	CAIN A,2			;THE OFFSET CASE
;	 DPB T,[%DIPOF,,TT]
	JRST GATLOC

;Print location for fixed format card image
;8 cols wide, with "group" left justified, "pin number" right justified
RAYDIP:	TLNN A,MAPSOC
	 PUSHJ P,FUCKUP
	SETZM TCOUNT
	PUSHJ P,PRNLOC		;Print LL, C, OR J01
	MOVEI T,6
	PUSHJ P,TTFILL
	JUMPL A,RAYCON
	JRST RAYCN1

RAYCON:	LDB TT,[%CONT,,A]
	JUMPN TT,RAYCN1		;Scotchflex
	LDB T,[%%PINN,,A]
	TRNN T,1
	 PUTBYT "1"
	TRNE T,1
	 PUTBYT "2"
	ASH T,-1
	PUTBYT @N2L(T)
	POPJ P,			;"C" + 5 spaces + #L = 8

RAYCN1:	LDB T,[%%PINN,,A]
	MOVEI TTT,2
	MOVEM TTT,NDIG
	JRST NPUTDEC		;"J01" + 3 spaces + ## = 8

;AUGAT format

;Print location for fixed format card image
;2-3 columns "GROUP", 2 columns "LOC", 3 columns pin
;DIP		A.. 01 . 001
;DECCON		AJ. 01 . 0A1
;FLAT		J01 01 . 001

AUGDIP:	TLNN A,MAPSOC
	 PUSHJ P,FUCKUP
	JUMPL A,AUGCON
	LDB T,[%DIPG,,A]
	PUTBYT @N2L(T)
	PUTSTR [ASCIZ /  /]	;2 SPACES
	LDB T,[%DIPC,,A]
	PUTBYT @N2L(T)
	PUTSTR [ASCIZ /  /]	;2 SPACES
	LDB T,[%DIPN,,A]
	MOVEI TT,2			;SETUP FOR 2 DIGIT NUMBER PRINT
	MOVEM TT,NDIG
	CAIL T,VPINOF
	 JRST [	PUTBYT "V"
		SUBI T,VPINOF
		JRST NPUTDEC]
	CAIL T,GPINOF
	 JRST [	PUTBYT "G"
		SUBI T,GPINOF
		JRST NPUTDEC]
	MOVEI TT,3		;OTHERWISE, 3 DIGIT FIELD
	MOVEM TT,NDIG
	JRST NPUTDEC			;PRINT IT OUT

AUGCON:	LDB TT,[%CONT,,A]
	SKIPN TT		;IF DEC CONNECTOR
	 PUSHJ P,FUCKUP		;BARF
	PUTBYT "J"
	LDB T,[%CONN,,A]	;CONNECTOR NUMBER
	MOVEI TT,2
	MOVEM TT,NDIG
	PUSHJ P,NPUTDEC
	PUTSTR [ASCIZ /01 /]
	MOVEI TT,3
	MOVEM TT,NDIG
	LDB T,[%%PINN,,A]
	JRST NPUTDEC

FOR NAME IN (CPARTP:,CONGIN:,SEQLOC:)
<NOTYET(NAME)
>
>;MWL

CPNSEP:	LDB TT,[%CONP,,T]
	MOVEI TTT,0
	DPB TTT,[%CONP,,T]
	POPJ P,

CPNMER:	PUSH P,A
	SKIPN T
	SKIPE TT
	 JRST CPNMR1
	MOVEI TT,1			;T,TT=0 MEANS INITIALIZE TO FIRST
	DPB TT,[%CONN,,T]		;CONNECTOR TYPE STARTS AT ZERO
CPNMR1:	LDB TTT,[%CONT,,T]
	JUMPE TTT,[ MOVEI A,MXDPIN	;IF A DEC CONN THEN MXDPIN IS MAX #
		    JRST CPNMR2]
	LDB TTT,[%CONN,,T]
	MOVE A,FLTSIZ-1(TTT)
CPNMR2:	CAMG TT,A
	 JRST CNPMR1
	MOVEI TT,1			;CARRY INTO JACK, FROM PIN#
	LDB TTT,[%CONT,,T]
	MOVE A,MXJCON
	SKIPN TTT
	 MOVE A,MXDCON
	LDB TTT,[%CONN,,T]
	AOS TTT
	DPB TTT,[%CONN,,T]
	CAIGE TTT,A
	 JRST CNPMR1
	MOVEI TTT,1
	DPB TTT,[%CONN,,T]
	LDB TTT,[%CONT,,T]
	AOS TTT
	DPB TTT,[%CONT,,T]
CNPMR1:	DPB TT,[%CONP,,T]
	POP P,A
	POPJ P,

QUPIN:	SETZ A,			;NO RULE NUMBER
	POPJ P,			;AND IT'S NOT WILD
NOTYET(CPNMAP:)

MDWL,<
MWL,<
SUBTTL WIRE WRAP ROUTINES  --  HEX DEC UNIVERSAL BOARDS

^^L627TV__.	;TRANSFER VECTOR FOR QUAD HEIGHT UNIVERSAL DEC BOARDS


	-1			;FLAGS IF WIRE WRAP OR PC BOARD
	JRST CPOPJ		;THE INIT ROUTINE
	JRST MAPRC		;MAP ROW/COLS INTO GENERATED LOCS
	JRST MAPPAD		;MAP PADDLE/LETTER/SIDE INTO CONN LOCS
	JRST DISTPP		;DISTANCE CALC ROUTINE
	JRST FPWR		;FIND A POST WITH POWER
	JRST FGND		;FIND A POST WITH GND
	JRST MAPIT		;CONVERT POST INTO X,Y,BITS
	JRST PAKSIZ		;FIND DIMENSION OF DIP OUTLINE
	JRST GNDCLR		;?
	JRST WAGGND		;?
	JRST GNDOUT		;?
	JRST VCCOUT		;?

	COL627			;NROWS		    (USED FOR UML ONLY)
	UMLCOL			;NCOLS		    (USED FOR UML ONLY)
	UMLCOL			;NCLPRG		    (USED FOR UML ONLY)
	0			;NRWPRP		    (USED FOR UML ONLY)
	COL627*NGRPS		;DIPSLT_NROWS*NCOLS (USED FOR UML ONLY)
	SETPAD(DEC627+FLT627)	;NPADS		    (USED FOR UML ONLY)
	XWD -=25,1		;PADLET		    (USED FOR UML ONLY)
	XWD -2,1		;PADPIN		    (USED FOR UML ONLY)
	=10			;FRACTN
	=200*2			;WRAPMG .200" INSULATION AROUND EACH POST
	=1500			;POSTMG .750" BARE WIRE AROUND EACH POST
	0			;NEXTR
CHECK L627TV,WTVLEN


;Connector pin mapping table for MAPIT

;**************************************** DEC CONNECTOR PINS
;PIN POSITIONS WITHIN ONE PADDLE

X__DCPINS			;INITIAL X STARTING LOCATION
DCPINL:

REPEAT 3,
<
	REPEAT 6,
	<	X,,0
		X,,DCPINO
	X__X-DCPNSP
	>
X__X-DCGRSP+DCPNSP		;ALREADY SUB'ED AN EXTRA DCPNSP AT END OF RPT
>

DCPWRG:	0	;A1
	PWR,,500	;A2
	0	;B1
	0	;B2
	0	;C1
	GND,,0
	0	;D1
	0
	0	;E1
	0
	0	;F1
	0
	1B0	;G1 - not really legal for DEC
	1B0
	0	;H1
	0
	0	;J1
	0
	0	;K1
	0
	0	;L1
	0
	0	;M1
	0
	0	;N1
	0
	0	;P1
	0
	0	;R1
	0
	0	;S1
	0
	GND,,0	;T1
	0
	0	;U1
	0
	0	;V1
	0

;MAPIT - Convert board post spec to X,Y - used for routing
;A = PostSpec

;MAPIT (WL) - CONVERT POST INTO X,Y AND BITS
;NOTE!! X,Y are viewed from DIP side, usually with X+ = right, Y+ = up
;A = MBIT+PIN#,,LOC
;SKIPS IF LEGAL POST
;T = X,,Y
;TT = PWR!GND,,VOLTAGE (If dedicated pin on board)
;TTT = (DISTANCE TO END OF ROW - FOR FUDGING CITY-BLOCK STUFF)

MAPIT:	JUMPL A,CONMAP			;MAP CONNECTOR LOCATION
	SETZ TT,			;flags for Pwr, Gnd
	PUSHJ P,MAPLOC			;MAP DIP LOCN
	 POPJ P,			;BAD LOCN
;Should return flags for Pwr or Gnd??
	SETZ TTT,			;FLUSH AWAY THOSE GOODIES
	JRST CPOPJ1

;Convert PIN-SPEC in A into DIP X,Y locn (T)
;Y + UP
;X + RIGHT (FROM DIP SIDE)
MAPLOC:	PUSH P,B
	PUSH P,C
	PUSH P,D
	LDB B,[%DIPG,,A]
	LDB C,[%DIPC,,A]
	SUB C,L2N+"A"
	IMULI C,=300			;.3" BETWEEN COLUMNS
	MOVNS C				;A is larger than S
	LDB D,[%DIPN,,A]
	CAIL D,VPINOF
	 JRST [	ADDI C,=100		;V pin is to right
		SUBI D,VPINOF
		MOVE TT,[Pwr,,=500]	;+5.0V
		JRST MAPLO1]
	CAIL D,GPINOF
	 JRST [	ADDI C,=100		;G pin is to right
		SUBI D,GPINOF
		MOVSI TT,Gnd
		JRST MAPLO1]
MAPLO1:	IMULI D,=100
	MOVEI T,GRPYT+=100		;ROW 1 is 6.6" up
	SUB T,D				; and Row 2-62 are lower
	CAMN B,L2N+"A"
	 ADDI C,GRPXA
	CAMN B,L2N+"B"
	 ADDI C,GRPXB
	CAMN B,L2N+"C"
	 ADDI C,GRPXC
	HRL T,C
	POP P,D
	POP P,C
	POP P,B
	JRST CPOPJ1

;HERE FOR CONNECTOR PINS

CONMAP:	LDB T,[%CONT,,A]
	JUMPE T,CONDEC		;DEC STYLE CONNECTOR
	LDB T,[%CONN,,A]	; T HAS CONNECTOR NUMBER
	JUMPE T,CPOPJ
	CAMLE T,MXJCON
	 POPJ P,
	LDB TT,[%%PINN,,A]
	MOVE TTT,FLTPIN-1(T)	;X,Y for whole connector
	CAILE T,4		;First 4 are vertical
	 JRST CONMJ5
	MOVE T,FLTSIZ-1(T)
	ASH T,-1
	CAMLE TT,T		;2nd row on connector? 
	 JRST [	SUB TTT,[=100,,0]
		SUB TT,T
		JRST .+1]
	SOS TT
	IMULI TT,=100
	ADD TTT,TT
CONM1:	MOVE T,TTT
	SETZB TTT,TT
	JRST CPOPJ1

CONMJ5:	MOVE T,FLTSIZ-1(T)
	ASH T,-1			;Pins in first row of connector
	CAMLE TT,T
	 JRST [	SUBI TTT,=100		;2nd row of connector
		SUB TT,T
		JRST .+1]
	SOS TT
	MOVNS TT
	IMULI TT,=100
	HRLZS TT
	ADD TTT,TT
	JRST CONM1

;Find X,Y of DEC connector pin

CONDEC:	LDB TT,[%CONN,,A]
	JUMPE TT,CPOPJ
	CAMLE TT,MXDCON
	 POPJ P,
	MOVE T,DCLOC-1(TT)	;PADDLE X,Y
	LDB TT,[%%PINN,,A]
	CAIL TT,2		;2+0 IS A+1 PIN
	CAILE TT,MXDPIN+2-1
	 POPJ P,
	ADD T,DCPINL-2(TT)
	SKIPGE TT,DCPWRG-2(TT)	;Legal pin?
	 POPJ P,
	SETZ TTT,
	JRST CPOPJ1

;PAKSIZ (WL) - GET DIMENSIONS OF PACKAGE ON BOARD
;A = MBIT+PIN#,,LOC
;B = PACKAGE CODE
;SKIPS IF LOCATION IS LEGAL FOR THIS PACKAGE TYPE
;T = Xmin,,Ymin
;TT = Xmax,,Ymax

PAKSIZ:	SKIPE ILLPAK(B)
	 POPJ P,
	PUSHJ P,PAKDIM		;Find outline of package on board
	 POPJ P,
For T IN (T,TT)
<
	HLRZ TTT,T			;X dimension
	CAIL TTT,GRPXL-=50
	CAILE TTT,GRPXA+=50
	 POPJ P,
	HRRZ TTT,T
	CAIL TTT,GRPYB-=50
	CAILE TTT,GRPYT+=50
	 POPJ P,
>;For
	JRST CPOPJ1

;Define illegal package types in this board
; -1 if illegal
ILLPAK:	BLOCK NPACK
;	FOR @' I IN (22,36,48,64)
;	<ORG ILLPAK+K.'I 	-1
;	>
	ORG ILLPAK+NPACK

;??? No scheme for UML on universals yet
NOTYET(MAPRC:)
NOTYET(MAPPAD:)

IFN 0,<
MAPRC:	HLRZ TT,T		;(1,1) IS DIP IN UPPER LEFT HAND CORNER
	SOJL TT,CPOPJ
	CAML TT,NROWS
	 POPJ P,
	HRRZS T			;ROW IN TT, COL IN T
	SOJL T,CPOPJ
	CAML T,NCOLS		;(0,0) IS NOW IN UPPER LEFT
	 POPJ P,
	PUSH P,[0]
	MOVNS TT
	ADD TT,GRPCOL		;COL 30 IS FIRST ROW OF UML
	DPB TT,[%DIPS,,(P)]
	MOVNS T			;LAST UML COL CORRESPONDS TO FIRST DIP GROUP
	MOVEI T,NGRPS(T)
	DPB T,[%DIPG,,(P)]
	POP P,T
	JRST CPOPJ1

MAPPAD:	SOS TT
	ASH TT,1		;TT,TTT HAVE COMPLEX PIN#
	ADDI TT,(TTT)
	CAMLE T,MXDCON
	 JRST MAPPD1
	AOS TT			;DEC PADDLES ARE PINLETTER*2+SIDE
	CAILE TT,MXDPIN+2-1	;EXISTS?
	 JRST MAPPDL		;NO, ERROR
	HRLI T,0
MAPPD2:	MOVSI TTT,MAPCON(TT)	;PIN# IN LH
	DPB T,[%CONN,,TTT]
	HLRZS T
	DPB T,[%CONT,,TTT]
	SKIPA T,TTT
MAPPDL:	 SETZ T,		;LOSE RETURN
	POPJ P,

MAPPD1:	SUB T,MXDCON
	HRLI T,1		;CONN TYPE IS SCOTCH
	CAMLE TT,JACKSZ(T)
	 JRST MAPPDL
	JRST MAPPD2
>;IFN 0

;FPWR (WL) - FIND POWER PIN
;A = MBIT+PIN#,,LOC	;A Socket pin (MAPSOC)
;B = VOLTAGE (10 mV UNITS)
;RETURNS A=0 IF FAILS
;A = New MBIT+PIN#,,LOC

FPWR:	CAIE B,=500			;+5.00V??
	 JRST [	SETZ A,			;Don't know of any other power
		POPJ P,]
	JUMPL A,FPWRC			;For connector pin?
	LDB B,[%DIPC,,A]		;V,G pins are in odd columns, 
					; starting with a which is 1
	TRO B,1
	DPB B,[%DIPC,,A]
;Closest V pin is 8k+2 for pins [8k-1, 8k+6]
	LDB T,[%DIPN,,A]
	ADDI T,2			;Pin 6 finds pin 10
	TRZ T,7
	ADDI T,2
	ADDI T,VPINOF
	JRST FGND9

;FGND (WL) - FIND GROUND PIN
;A = MBIT+PIN#,,LOC	;A Socket pin (MAPSOC)
;RETURNS A=0 IF FAILS
;A = New MBIT+PIN#,,LOC

FGND:	JUMPL A,FGNDC
	LDB B,[%DIPC,,A]		;V,G pins are in odd columns, starting with A
	TRO B,1
	DPB B,[%DIPC,,A]
;Closest G pin is 8k+6 for pins [8k+1, 8k+8]
	LDB T,[%DIPN,,A]
	SUBI T,3
	TRZ T,7
	ADDI T,6
	ADDI T,GPINOF
FGND9:	DPB T,[%%PINN,,A]
	SETZ B,
	DPB B,[%DIPN,,A]
FGNDC1:	TLO A,MAPSOC
	POPJ P,

STORAGE(IMPURE)
GENVAR:	0
GENFIX:	0
STORAGE(PURE)

;GenNom - break up asciz into nomen
;T = Ascii
;Returns:
;T = Group
;TT = Column

GENNOM:	LDB TT,[POINT 7,T,35]		;Column
	MOVE TT,L2N(TT)
	LDB T,[POINT 7,T,28]		;Group
	MOVE T,L2N(T)
	POPJ P,


GENTBL:
FOR I IN (AA,AB,AC,AD,AE,AF,AG,AH,AJ,AK,AL,AM,AN,AP,AR,AS)
<	"I"
>
FOR I IN (BA,BB,BC,BD,BE,BF,BG,BH,BJ,BK,BL,BM,BN,BP,BR,BS,BT)
<	"I"
>
FOR I IN (CA,CB,CC,CD,CE,CF,CG,CH,CJ,CK,CL,CM,CN,CP,CR,CS)
<	"I"
>
LGENTB__.-GENTBL

;Search for ground/pwr pins along top for flatcable, along bottom
; for DEC cables.

FGNDC:
	;Fix routine for FlatCable Ground pins
	MOVEI TTT,[CAIN T,1		;Group A?
		CAILE TT,6		;Cols A-F?
		 SKIPA TTT,[GPINOF+6]	;Pin 6 for most columns
		MOVEI TTT,GPINOF+=14	;  but only 14 for AA thru AF
		POPJ P,]
	LDB TT,[%CONT,,A]
	SKIPN TT
	; or Fix routine for DecConnector GND pins
	 MOVEI TTT,[MOVEI TTT,GPINOF+=62
		POPJ P,]
	JRST DOFIND

FPWRC:	MOVEI TTT,[CAIN T,1		;Group A?
		CAILE TT,6		;Cols A-F?
		 SKIPA TTT,[VPINOF+=2]	;Pin 2 for most columns
		MOVEI TTT,VPINOF+=18	;  but only 18 for AA thru AF
		POPJ P,]
	LDB TT,[%CONT,,A]
	SKIPN TT			;DecConnector?
	;Fix routine for DecConnector GND pins
	 MOVEI TTT,[MOVEI TTT,VPINOF+=58
		POPJ P,]
DOFIND:	MOVSI T,-LGENTB		;Setup generator
	MOVEM T,GENVAR
	MOVEM TTT,GENFIX
	PUSHJ P,FINDCLOSEST
	 JRST FGNDC1		;Closest in A
;CoRoutine to generate possible GNDS for FlatCable connectors
	SKIPL TT,GENVAR		;Any more possiblities?
	 POPJ P,		;NO
	MOVE T,GENTBL(TT)
	AOBJP TT,.+1
	MOVEM TT,GENVAR
	PUSHJ P,GENNOM
	PUSHJ P,@GENFIX
	SETZ A,
	DPB T,[%DIPG,,A]
	DPB TT,[%DIPC,,A]
	DPB TTT,[%%PINN,,A]
	JRST CPOPJ1		;CoReturn


FOR NAME (GNDCLR:,WAGGND:,GNDOUT:,VCCOUT:)
<NOTYET(NAME)
>
>;MWL
>;MDWL
BEND LG627

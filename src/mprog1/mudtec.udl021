
<PACKAGE "MUDTEC">

<ENTRY TECO
       TECO-BUFFER
       TECO-LOAD
       TECO-KILL
       TECO-OPEN
       TECO-CLOSE
       TECO-ALLOC
       TECO-PRINT-BUFFER
       TECO-READ-BUFFER
       TECO-BUFFER-SIZE>

<USE "INFERIOR" "INFASS">

<GDECL (TECO-BUFFER) <UVECTOR [REST FIX]>
       (TECO) <OR FALSE INF>>

<FLOAD "LIBRM1;ACCHRS NBIN">

<DEFINE TECO-LOAD ("OPTIONAL" (NM2 "TECO") (JCL "0FSEXIT") TEC) 
	#DECL ((VALUE) <OR FALSE INF> (NM2) <SPECIAL STRING> (JCL) STRING
	       (TEC) <OR FALSE INF>)
	<COND (<NOT <GASSIGNED? TECO>> <SET TEC <>>)
	      (ELSE <SET TEC ,TECO>)>
	<COND (<AND .TEC
		    <TYPE? <INF-UCHAN .TEC> CHANNEL>
		    <NOT <0? <1 <INF-UCHAN .TEC>>>>>
	       <INF-KILL .TEC>)>
	<COND (<SETG TECO
		     <MAPF <>
			   <FUNCTION (W "AUX" R)
				#DECL ((W) STRING (R) <OR FALSE INF>)
				<COND (<SET R <INF-LOAD .W "MUDTEC" .JCL 2>>
				       <MAPLEAVE .R>)>>
			   '["DSK:TS" "DSK:SYS;TS" "DSK:SYS1;TS" "DSK:SYS2;TS"]>>
	       <SETG TECO-BUFFER <IUVECTOR 9 0>>
	       ,TECO)>>

<DEFINE TECO-KILL ("OPTIONAL" (TEC ,TECO))
	#DECL ((TEC) <OR INF FALSE>)
	<COND (.TEC <INF-KILL .TEC> <SETG TECO <>>)>>

<AND? <SETG BEG 1>
      <SETG BEGV 2>
      <SETG PT 3>
      <SETG GPT 4>
      <SETG ZV 5>
      <SETG Z 6>
      <SETG EXTRAC 7>
      <SETG JRSTLOC 8>
      <SETG ARGLOC 9>>

<MANIFEST BEG BEGV PT GPT ZV Z EXTRAC JRSTLOC ARGLOC>

<DEFINE TECO-OPEN ("OPTIONAL" (TEC ,TECO)
		   "AUX" UCH (TB ,TECO-BUFFER) OLD-BEG) 
	#DECL ((TEC) <OR INF FALSE> (UCH) CHANNEL (TB) <UVECTOR [REST FIX]>
	       (VALUE) <OR FIX FALSE> (OLD-BEG) FIX)
	<COND (.TEC
	       <SET UCH <INF-UCHAN .TEC>>
	       <TBREAD .TB .TEC>
	       <ACCESS .UCH <SET OLD-BEG </ <BEG .TB> 5>>>
	       .OLD-BEG)>>

<DEFINE TECO-CLOSE ("OPTIONAL" (TEC ,TECO) "AUX" UCH AEND B R (TB ,TECO-BUFFER)) 
	#DECL ((VALUE) <OR FIX FALSE> (AEND B) FIX (TEC) <OR INF FALSE>
	       (R) FIX (UCH) CHANNEL (TB) <UVECTOR [REST FIX]>)
	<COND (.TEC
	       <SET UCH <INF-UCHAN .TEC>>
	       <SET AEND <ACCESS-IN-CHARS .UCH>>
	       <TBREAD .TB .TEC>
	       <SET B <BEG .TB>>
	       <SET R <+ <- <Z .TB> .B> <EXTRAC .TB>>>
	       <PUT .TB ,BEGV .B>
	       <PUT .TB ,PT .AEND>
	       <PUT .TB ,GPT .AEND>
	       <PUT .TB ,ZV .AEND>
	       <PUT .TB ,Z .AEND>
	       <PUT .TB ,EXTRAC <- .R <- .AEND .B>>>
	       <TBPRINT .TB .TEC>
	       .AEND)>>

<DEFINE TECO-ALLOC (N "OPTIONAL" (TEC ,TECO) "AUX" PC BB R UCH) 
	#DECL ((N) FIX (BB) <PRIMTYPE WORD> (TEC) <OR INF FALSE>
	       (PC) FIX (R) ANY (UCH) CHANNEL)
	<COND (.TEC
	       <SET UCH <INF-UCHAN .TEC>>
	       <SET PC <USET .UCH 0>>	; "0 IS UPC"
	       <SET BB <INF-WORD .TEC 2>>
	       <INF-WORD .TEC <+ .BB 8> .N>
	       <USET .UCH 0 <+ .BB 7>>
	       <PROG ()
		     <SET R <INF-CONTIN .TEC>>
		     <COND (<AND <TYPE? .R LIST>
				 <==? <1 .R> *BREAK-16>
				 <==? <2 .R> BACK>>
			    <USET .UCH 0 .PC>)
			   (<==? .R ^Z-TYPED> <AGAIN>)>>
	       .R)>>

<DEFINE TECO-PRINT-BUFFER (STR "OPTIONAL" (L <LENGTH .STR>) (TEC ,TECO)) 
	#DECL ((TEC) <OR INF FALSE> (STR) STRING (L) FIX)
	<COND (.TEC
	       <TECO-ALLOC <LENGTH .STR> .TEC>
	       <TECO-OPEN .TEC>
	       <PRINTSTRING .STR <INF-UCHAN .TEC> .L>
	       <TECO-CLOSE>
	       <INF-CONTIN .TEC>)>>

<DEFINE TECO-READ-BUFFER ("OPTIONAL" (SS <>) (WINDOW? T) (TEC ,TECO)
			  "AUX" (DUMMY ,DUMMY) ICH (TB ,TECO-BUFFER) M R B Z G E)
	#DECL ((TEC) <OR INF FALSE> (ICH) CHANNEL (TB) <UVECTOR [REST FIX]>
	       (DUMMY) STRING (B Z G E M) FIX (SS VALUE) <OR STRING FALSE>
	       (R) <OR FIX FALSE> (WINDOW?) <OR ATOM FALSE>)
	<COND (.TEC
	       <COND (<NOT .SS>
		      <SET SS <ISTRING <TECO-BUFFER-SIZE .WINDOW? .TEC> !" >>)>
	       <SET ICH <GET-ICHAN .TEC>>
	       <SET B <COND (.WINDOW? <BEGV .TB>)(<BEG .TB>)>>
	       <SET Z <COND (.WINDOW? <ZV .TB>)(<Z .TB>)>>
	       <SET G <GPT .TB>>
	       <SET E <EXTRAC .TB>>
	       <ACCESS .ICH </ .B 5>>
	       <COND (<NOT <0? <SET M <MOD .B 5>>>>
	              <READSTRING .DUMMY .ICH .M>)>
	       <COND (<SET R <READSTRING .SS .ICH <- .G .B> '<>>>
		      <COND (<L? .R <LENGTH .SS>>
			     <OR <0? .E> <ACCESS .ICH </ <SET E <+ .G .E>> 5>>>
			     <COND (<NOT <0? <SET M <MOD .E 5>>>>
				    <READSTRING .DUMMY .ICH .M>)>
			     <READSTRING <REST .SS .R> .ICH <- .Z .G>>)>
		      .SS)>)>>

<SETG DUMMY "     ">

<GDECL (DUMMY) <STRING [5 CHARACTER]>>

<DEFINE TECO-BUFFER-SIZE ("OPTIONAL" (WINDOW? T) (TEC ,TECO) "AUX" (TB ,TECO-BUFFER))
	#DECL ((TEC) <OR INF FALSE> (TB) <UVECTOR [REST FIX]> (VALUE) FIX
	       (WINDOW?) <OR ATOM FALSE>)
	<COND (.TEC
	       <TBREAD .TB .TEC>
	       <- <COND (.WINDOW? <ZV .TB>)(ELSE <Z .TB>)>
		  <COND (.WINDOW? <BEGV .TB>)(ELSE <BEG .TB>)>>)>>

<DEFINE TBREAD (TB INF "AUX" (ICH <GET-ICHAN .INF>))
	#DECL ((VALUE TB) <UVECTOR [REST FIX]> (INF) INF (ICH) CHANNEL)
	<ACCESS .ICH <INF-WORD .INF 2>>
	<READB .TB .ICH>
	.TB>

<DEFINE TBPRINT (TB INF "AUX" (UCH <INF-UCHAN .INF>))
	#DECL ((VALUE TB) <UVECTOR [REST FIX]> (UCH) CHANNEL (INF) INF)
	<ACCESS .UCH <INF-WORD .INF 2>>
	<PRINTB .TB .UCH>
	.TB>

<ENDPACKAGE>

<PACKAGE "ECOM">

<ENTRY EHACK-COMTAB>

<USE "EHACK" "EUTL" "EGROUP" "CALSYM" "CALCOM" "COMMAND" "NSTRUC" "CALRDR" "BUF">

<DEFINE PRINT-OBJS (OBJS FILNAM "AUX" (OUTCHAN .OUTCHAN)(FILE? <>))
	#DECL ((OBJS) <PRIMTYPE LIST>
	       (FILNAM) STRING
	       (OUTCHAN) <OR FALSE CHANNEL>
	       (FILE?) <OR FALSE ATOM>)
  <COND(<NOT <MEMBER "TTY:" .FILNAM>>
        <COND (<NOT <SET OUTCHAN <OPEN "PRINT" .FILNAM>>>
	       <PRINT ("ERROR" .OUTCHAN "ASSUMING-TTY") ,OUTCHAN>
	       <SET OUTCHAN ,OUTCHAN>)
	      (<SET FILE? T>)>)>
  <MAPR <>
	<FUNCTION (X "AUX" WH)
		#DECL ((X) <LIST ANY> (WH) <OR FALSE VECTOR>)
	    <APPLY <4 <3 <VERIFY-MQ <1 .X>>>>
		   <1 .X>>
	    <COND (<OR .FILE? <LENGTH? .X 1>>)
		  (<AND <SET FOO <READER ,YES/NO!-IEHACK
					 "More?"
					 '["If yes, the next object will be printed" ""]
					 '["SYM"]>>
			<==? <2 .FOO> T>>)
		  (<MAPLEAVE T>)>>
	<COND (<NOT .OBJS>)
	      (<EMPTY? .OBJS>
	       <COND (<GASSIGNED? OBJOPEN> (,OBJOPEN))
		     (T ())>)
	      (<SYM-SORT .OBJS>)>>
  <COND (.FILE? <CLOSE .OUTCHAN>)>>

<DEFINE DUMP-OBJS (OBJS "AUX" OBJT VOBJ)
	#DECL ((OBJT) VECTOR (VOBJ) APPLICABLE)
	<COND (<NOT <EMPTY? .OBJS>>
	       <SET OBJS <SYM-SORT .OBJS>>
	       <SET VOBJ <4 <SET OBJT <VERIFY-MQ <1 .OBJS>>>>>
	       <COND (<MAPF <>
			    <FUNCTION (OBJ)
				#DECL ((VALUE) FALSE)
				<COND (<NOT <APPLY .VOBJ .OBJ>>
				       <MAPLEAVE T>)>>
			    <REST .OBJS>>
		      <PRINC "
OBJECTS OF DIFFERENT TYPES MAY NOT BE DUMPED TOGETHER
">)
		     (T
		      <APPLY <2 <3 .OBJT>> .OBJS>)>)>>

<SETG EHACK-COMTAB
    <MAKEBST "Editing commands" 
	%<BSTSORT
		'["Make.group"
		'<CALICO-COMMAND ,MAKE-GROUP
				 '[%<MAKESST "FO" ["Nodes" T "Objects" A]>
				  "of"
				  '["Indicate whether you are grouping nodes or objects" ""]
				  '["SYM"]]>
		 "Print.group"
		'<PRINT-GROUP>
		 "Load.objects.file"
		 ,LOAD-ACTION
		 "Remove.from.open.commands"
		 '<CALL/APPLY '<CALICO-COMMAND ,CLOSE-ABSTR
				 [,OBJLOADTAB
				  "named"
				  ["
Objects named will be removed from the open commands table. A group
name is acceptable." ""]
				  ["SYM""MULT"]]> LOAD>
		 "Dump.object"
		 '<CALL/APPLY '<CALICO-COMMAND ,DUMP-OBJS
				 [,OBJLOADTAB
				  "named"
				  ["
Objects provided will be printed into an output file.  A group name
from Load.objects... may be given.  LOADED refers to all objects loaded
so far.  OPEN-COMMANDS refers to all objects whose name is still in
the open command table." ""]
				  ["SYM""MULT"]]> LOAD>
		 "Open.object"
		 '<CALL/APPLY ,OPEN-ACTION LOAD>
		 "Print.object"
		 '<CALL/APPLY '<CALICO-COMMAND ,PRINT-OBJS
				 [,OBJLOADTAB
				  "named"
			          '["
Pretty-prints an object in very readable form. Default is open object.
LOADED refers to all objects; OPEN-COMMANDS refers to objects whose name is
still in the open command table." ""]
				  '["SYM" "MULT"]
				  '["TTY" #FALSE () #FALSE () #FALSE ()]
				  "to (opt) file"
				  '["
Objects will be prettily printed into the given output file.
Default is TTY:" ""]
				  '["FILE"]]> LOAD>
		 "Print.node"
		 '<CALL/APPLY '<CALICO-COMMAND ,PRINT-NODE
			         [,AVNODES
				  "named"
				  ["
Prints the contents of the node specified (synonymous with the shorthand
version , i.e. /node-name)" ""]
				  ["SYM"]]
				 []> OPEN>
		 "Edit.node"
		 '<CALL/APPLY '<CALICO-COMMAND ,EDIT-NODE
			         [,AVNODES
				  "named"
				  ["
Causes the contents of the specified node to be edited in the existing edit
mode (which can be altered with Use-(IMEDIT, TECO) commands). The default edit
mode is IMEDIT" ""]	
				  ["SYM"]]
				 []> OPEN>
		 "Fill.node"
		 '<CALL/APPLY '<CALICO-COMMAND ,FILL-NODE
				 [,AVNODES
				  "named"
				  ["
Allows the specified node to be filled in (i.e. in writeover mode) or appended
to (depending on the node)" ""]
				  ["SYM"]]
				 []> OPEN>
		 "Scratch"
		 '<CALICO-COMMAND ,MAKE-SCRATCH
				 [,SCRATCH-TABLE
				  "named"
				  ["
Returns or creates (if none exists) and returns a \"scratch\" buffer (a la COMPOS)
for use in saving thoughts, etc." ""]
				  ["SYM" "ATOM" "FIX"]]>
		 "Edit.with.scratch"
		 '<CALL/APPLY '<CALICO-COMMAND ,EDIT-SCRATCH
				 [,SCRATCH-TABLE
				  "named"
				  ["
Name of the scratch to be loaded into the editor with the contents of the node" ""]
				  ["SYM"]
				  ,AVNODES
				  ", node"
				  ["
Name of the node to be called into the editor" ""]
				  ["SYM"]]> OPEN>
		 "Append.with.scratch"
		'<CALL/APPLY '<CALICO-COMMAND ,APPEND-SCRATCH
				 [,SCRATCH-TABLE
				  "named"
				  ["
Will append the contents of a given scratch to a given node. If the contents of
the node is a VECTOR, the scratch will be added as a STRING. If the contents of
the node is a STRING, the characters of the scratch will be added"""]
				  ["SYM"]
				  ,AVNODES
				  ", node"
				  ["
Node which will be appended to"""]
				  ["SYM"]]> OPEN>
		 "Copy.node"
		 '<CALL/APPLY '<CALICO-COMMAND ,COPY-NODE
				 [<MAKEMST "EVNODES" [<GET ,OBJTYPE AUTO-TABLE> 
						      ,AVNODES]>
				  "named"
				  ["
Will copy the node or node \"group\" named to any number of objects." ""]
				  ["SYM"]
				  ,OBJLOADTAB
				  "
to objects of unique name"
				  ["
Object(s) to which the node will be copied" ""]
				  ["SYM" "MULT"]]
				 []> OPEN>
		 "Open?"
		 '<COND (<GASSIGNED? OBJOPEN>
			 <PRINT <NNTH ,OBJOPEN ,UNAMEPOS>>)
			(T <PRINC "None open">)>
		 "Recover"
		 '<RECOVER.EDIT>
		 "Use.teco"
		 '<PROG (M) <SET M <MEMBER !" .CHRTABLE>>
			    <PUT .M 2 ,BUFTECO>
			    <SETG ABSEDMODE "TECO">>
		 "Use.imedit"
		 '<COND (.IMLAC?
			 <PROG (M) <SET M <MEMBER !" .CHRTABLE>>
				   <SETG ABSEDMODE "IMEDIT">
				   <PUT .M 2 ,IMBUF>>)
			(<PRINT "Can not use IMEDIT since your console is not an IMLAC">)>
		 "Group.automatic.mode"
		 '<CALL/APPLY '<CALICO-COMMAND ,GROUP-AUTO
				  [<COND (<LENGTH? <SET 2GAT
						       <2 <GET ,OBJTYPE AUTO-TABLE>>> 2>
					  <PRINC " named ">
					  <CHTYPE (<PRINC <2 .2GAT>>) FALSE>)
					 (T <GET ,OBJTYPE AUTO-TABLE>)>
				  "named (opt)"
				  '["Which automatic mode should be used" ""]
				  '["SYM"]
				  ,OBJLOADTAB
				  "for objects named"
				  '["Which (group of) object(s) shall the automatic mode be applied to" ""]
				  '["SYM" "MULT"]]>
			      LOAD>
		 "Status"
		 '<PRINT-STATUS>
		 "Pop.and.return"
		 '<CALICO-COMMAND ,PUSHRET
				 '[[]
				   ""
				   ["
Value to return" ""]		   ["ANY"]]>
		 "Automatic.mode"
		 '<CALL/APPLY '<CALICO-COMMAND ,AUTO-MODE
				 [<COND (<LENGTH? <2 <SET GAT
							  <GET ,OBJTYPE AUTO-TABLE>>>
						  2>
					 <PRINC " named ">
					 <PRINC <1 <2 .GAT>>>
					 <CHTYPE (<2 <2 .GAT>>) FALSE>)
					(.GAT)>
				  "named (opt)"
				  '["Which automatic mode should be used"""]
				  '["SYM"]]> OPEN>]>>>

<ADDTABLE ,EHACK-COMTAB>

<ENDPACKAGE>
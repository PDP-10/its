<PACKAGE "ITS">
<ENTRY ITS-CALL SFTW-INTRPT-DESCRN USET ITS-EVAL ITS-GETLOC ITS-SETLOC>
<EXTERNAL "STR">

<TITLE ITS-CALL>
<DECLARE ("VALUE" <OR 'T <FALSE FIX STRING>>
	  STRING
	  <UVECTOR [REST <PRIMTYPE WORD>]>
	  "TUPLE" <TUPLE [REST <OR CHANNEL
				   UVECTOR
				   <PRIMTYPE WORD>
				   <LIST [REST <PRIMTYPE WORD>]>>]>)>

	<DPUSH TP* <ARG 1>>
	<MCALL 1 STRTOX>
	<MOVE 0 P>		; "SAVE P-STK PNTR."
	<PUSH P* [<SETZ 0>]>	; "BUILD .CALL ARGS ON P-STK."
	<PUSH P* B>		; "START WITH THE .CALL NAME"

	<SKIPL C* <ARG 2> 1>	; "OUTPUT ARGS FIRST"
	<JRST OUTDONE>
	<MOVSI A* *2000*>
OUTLOOP	<PUSH P* C>		; "SLOT FOR OUTPUT"
	<HLLM A* (P)>
	<AOBJN C* OUTLOOP>

OUTDONE	<MOVE C* AB>		; "THEN INPUT ARGS AND CONTROL BITS"
	<ADD C* [<(4) 5>]>
	<SETO E*>		; "REMEMBER (LAST) ITS CHAN NUMBER IN E, IF ANY"
	<SETZ B*>		; "WILL XOR ALL CONTROL BITS INTO B"
	<JUMPGE C* INDONE>

INLOOP	<HLRZ D* (C) -1>	; "CHECK FOR MUDDLE CHANNEL"
	<CAIE D* TCHANNEL>
	<JRST NOTCHAN>
	<MOVE D* (C)>		; "IF SO, USE AND REMEMBER ITS NUMBER."
	<AOS D>
	<PUSH P* D>
	<HRRZS (P)>
	<HRLZ E* (D)>
	<JRST CONTIN>

NOTCHAN	<CAIE D* TLIST>		; "CHECK FOR A LIST"
	<JRST NOTLIST>
	<MOVE D* C>
LISTLP	<HRRZ D* (D)>
	<JUMPE D* CONTIN>	; "JUMP IF LIST IS EMPTY (YET)"
	<XOR B* (D) 1>		; "XOR THE MODE BITS INTO B"
	<JRST LISTLP>

NOTLIST	<PUSH P* C>		; "MUST BE A SIMPLE UVECTOR OR WORD'"
	<HRRZS (P)>
CONTIN	<AOBJP C* INDONE>
	<AOBJN C* INLOOP>

INDONE	<JUMPE B* NOCNTRL>	; "ANY CONTROL BITS RESULTING?"
	<HRLI B* *5000*>	; "YES, MARK AS IMMEDIATE CONTROL BITS"
	<PUSH P* B>		; "AND ADD TO ARG LIST"

NOCNTRL	<MOVSI A* *400000*>	; "INDICATE END OF ARG LIST"
	<IORM A* (P)>

	<DMOVE A* <PQUOTE T>>	; "VALUE IF .CALL SKIPS"
	<MOVE D* 0>		; "PNTR TO .CALL ARGS"
	<ADDI D* 1>
	<*CALL (D)>		; "DO IT!"
	<JRST NOSKIP>
	<MOVE P* 0>
	<JRST FINIS>

NOSKIP	<MOVE P* 0>		; "YOU LOSE!"
	<DMOVE A* <PQUOTE #FALSE(0 "")>>	; "VALUE IF NO CHANNEL INVOLVED"
	<JUMPL E* FINIS>
	<ADD E* [<(*120*) B>]>	; ".RIOS,,B"
	<*SUSET E>
	<HRLI A* TFIX>
	<DPUSH TP* A>		; "ITS ERROR CODE"

	<DPUSH TP* <PQUOTE 50>>		; "BUILD STRING FOR ERROR ENGLISH."
	<DPUSH TP* <PQUOTE !" >>
	<MCALL 2 ISTRING>
	<DPUSH TP* A>
	<DPUSH TP* <PQUOTE "READ">>
	<DPUSH TP* <PQUOTE "ERR:     !">>
	<MCALL 2 OPEN>
	<HLRZ 0 A>
	<CAIN 0 TFALSE>
	<JRST NOERR>
	<DPUSH TP* A>		; "CHANNEL TO ERR:"
	<PUSH TP* (TP)-3>	; "STRING AGAIN"
	<PUSH TP* (TP)-3>
	<PUSH TP* (TP)-3>	; "CHANNEL AGAIN"
	<PUSH TP* (TP)-3>
	<DPUSH TP* <PQUOTE "î">>
	<MCALL 3 READSTRING>	; "GET ERROR ENGLISH."
	<MCALL 1 CLOSE>
NOERR	<MCALL 2 LIST>		; "VALUE"
	<MOVSI A* TFALSE>
	<JRST FINIS>

<TITLE SFTW-INTRPT-DESCRN>
<DECLARE ("VALUE" STRING <PRIMTYPE WORD>)>

	<MOVE A* 1(AB)>		; "WD OF INTRPT BITS"
	<MOVEI D* <MQUOTE "">>
	<PUSH TP* (D)-1>
	<PUSH TP* (D)>
	<MOVEI E* 1>
	<MOVE C* [<PUSHJ P* WD1>]>
	<TLZE A* *400000*>
	<MOVE C* [<PUSHJ P* WD2>]>
IMLOOP	<JFFO A* GOTONE>
	<ACALL E* STRING>
	<JRST FINIS>

GOTONE	<XCT C>
	<MOVNS B>
	<MOVSI 0 *400000*>
	<LSH 0 (B)>
	<TDZ A* 0>
	<JRST IMLOOP>

WD1	<MOVEI D* (B)-1>
	<ASH D* 1>
	<ADD D* <MQUOTE ["Real-time interrupt occurred.
"  "Run-time interrupt occurred.
"  "[bit 4.6]
"  "[bit 4.5]
"  "A deferred call was typed while the process had the terminal.
"  "Terminal came back from superior process.
"  "Process attempted to use terminal without having it.
"  "Parity error occurred.
"  "Arithmetic floating overflow occurred.
"  "Process attempted to write into read-only page.
"  "Process attempted to fetch impure instruction when in pure mode.
"  "Process executed system call in user-trap mode.
"  "[bit 3.5]
"  "[bit 3.4]
"  "[bit 3.3]
"  "System is being debugged.
"  "A .LOSE UUO or LOSE system call was executed.
"  "CLI-device interrupt occurred.
"  "Pushdown-list overflow occurred.
"  "Light-pen interrupt or display stop occurred.
"  "MAR interrupt occurred.
"  "Process attempted to reference a page not in the process's page map.
"  "Half-second clock interrupt occurred.
"  "Instruction finished in single-instruction mode.
"  "A .BREAK was executed.
"  "Process attempted to read outside another process's core image.
"  "I/O-channel error occurred.
"  "A .VALUE was executed.
"  "System is going down or being revived.
"  "An illegal instruction was executed.
"  "The display violated memory protection.
"  "Arithmetic overflow occurred.
"  "Software-interrupt location had bad contents.
"  " was typed at terminal.
"  "Character was typed at terminal.
"]>>
	<PUSH TP* (D)>
	<PUSH TP* (D)+1>
	<ADDI E* 1>
	<POPJ P*>

WD2	<MOVEI D* <MQUOTE "Interrupt from software I/O channel ">>
	<CAIGE B* *22*>
	<MOVEI D* <MQUOTE "Interrupt from inferior process ">>
	<PUSH TP* (D)-1>
	<PUSH TP* (D)>
	<MOVEI D* (B)>
	<CAIL B* *22*>
	<SUBI D* *22*>
	<ASH D* 1>
<PSEUDO <SET X 18>>
	<ADD D* <MQUOTE <MAPF ,VECTOR <FUNCTION (N) <STRING <UNPARSE .N> ".
">>				      <ILIST 18 '<SET X <- .X 1>>>>>>
	<PUSH TP* (D)>
	<PUSH TP* (D)+1>
	<ADDI E* 2>
	<POPJ P*>

<TITLE USET>
<DECLARE ("VALUE" <PRIMTYPE WORD>	; "NUMBER READ OR SET"
	<OR CHANNEL ANY>		; "NON-CHANNEL => SELF"
	<OR STRING <PRIMTYPE WORD>>	; "NAME OR CODE FOR VAR"
	"OPTIONAL" <OR FALSE <PRIMTYPE WORD>> ; "NUMBER TO SET"
		   <PRIMTYPE WORD>)>	; "ADD TO CODE (FOR .PMAP, .IOS, .IOC)"
	
	<SETZI A*>		; "BUILD INSN IN A."
	<MOVE C* [<*SUSET C>]>
	<GETYP B* 0(AB)>
	<CAIE B* <TYPE-CODE CHANNEL>>
	 <JRST SELF>
	<HRLI C* (*USET)>
	<MOVE A* 1(AB)>		; "CHAN"
	<HRLZ A* 1(A)>		; "ITS CHAN"
	<LSH A* 5>
SELF	<IOR A* C>		; "INSN NOW IN A."
	<PUSH P* A>

	<GETYP B* 2(AB)>
	<CAIE B* <TYPE-CODE STRING>>
	 <JRST NUM>
	<DPUSH TP* 2(AB)>
	<MCALL 1 STRTOX>	; "SIXBIT IN B"
	; "FOLLOWING LIST UPDATED TO DDT 650."
	<MOVE A* <MQUOTE <UVECTOR
	      <CHTYPE <SIXBIT "UPC"> FIX>	0
	      <CHTYPE <SIXBIT "VAL"> FIX>	1
	      <CHTYPE <SIXBIT "TTY"> FIX>	2
	      <CHTYPE <SIXBIT "FLS"> FIX>	3
	      <CHTYPE <SIXBIT "UNAME"> FIX>	4
	      <CHTYPE <SIXBIT "JNAME"> FIX>	5
	      <CHTYPE <SIXBIT "MASK"> FIX>	6
	      <CHTYPE <SIXBIT "USTP"> FIX>	7
	      <CHTYPE <SIXBIT "PIRQC"> FIX>	*10*
	      <CHTYPE <SIXBIT "INTB"> FIX>	*11*
	      <CHTYPE <SIXBIT "MEMT"> FIX>	*12*
	      <CHTYPE <SIXBIT "SV40"> FIX>	*13*
	      <CHTYPE <SIXBIT "IPIRQ"> FIX>	*14*
	      <CHTYPE <SIXBIT "IPIRQC"> FIX>	*14*
	      <CHTYPE <SIXBIT "APIRQ"> FIX>	*15*
	      <CHTYPE <SIXBIT "APIRQC"> FIX>	*15*
	      <CHTYPE <SIXBIT "SNAM"> FIX>	*16*
	      <CHTYPE <SIXBIT "SNAME"> FIX>	*16*
	      <CHTYPE <SIXBIT "PICLR"> FIX>	*17*
	      <CHTYPE <SIXBIT "MARA"> FIX>	*20*
	      <CHTYPE <SIXBIT "MARPC"> FIX>	*21*
	      <CHTYPE <SIXBIT "UUOH"> FIX>	*22*
	      <CHTYPE <SIXBIT "UIND"> FIX>	*23*
	      <CHTYPE <SIXBIT "RUNT"> FIX>	*24*
	      <CHTYPE <SIXBIT "MSK2"> FIX>	*25*
	      <CHTYPE <SIXBIT "IFPIR"> FIX>	*26*
	      <CHTYPE <SIXBIT "APRC"> FIX>	*27*
	      <CHTYPE <SIXBIT "CNSL"> FIX>	*30*
	      <CHTYPE <SIXBIT "UTRP"> FIX>	*31*
	      <CHTYPE <SIXBIT "IIFPI"> FIX>	*32*
	      <CHTYPE <SIXBIT "IIFPIR"> FIX>	*32*
	      <CHTYPE <SIXBIT "AIFPI"> FIX>	*33*
	      <CHTYPE <SIXBIT "AIFPIR"> FIX>	*33*
	      <CHTYPE <SIXBIT "IMASK"> FIX>	*34*
	      <CHTYPE <SIXBIT "AMASK"> FIX>	*35*
	      <CHTYPE <SIXBIT "IMSK2"> FIX>	*36*
	      <CHTYPE <SIXBIT "AMSK2"> FIX>	*37*
	      <CHTYPE <SIXBIT "JPC"> FIX>	*40*
	      <CHTYPE <SIXBIT "OPC"> FIX>	*41*
	      <CHTYPE <SIXBIT "RTMR"> FIX>	*42*
	      <CHTYPE <SIXBIT "LSPBR"> FIX>	*43*
	      <CHTYPE <SIXBIT "BCHN"> FIX>	*44*
	      <CHTYPE <SIXBIT "MPVA"> FIX>	*45*
	      <CHTYPE <SIXBIT "IDF1"> FIX>	*46*
	      <CHTYPE <SIXBIT "ADF1"> FIX>	*47*
	      <CHTYPE <SIXBIT "IDF2"> FIX>	*50*
	      <CHTYPE <SIXBIT "ADF2"> FIX>	*51*
	      <CHTYPE <SIXBIT "DF1"> FIX>	*52*
	      <CHTYPE <SIXBIT "DF2"> FIX>	*53*
	      <CHTYPE <SIXBIT "OPTIO"> FIX>	*54*
	      <CHTYPE <SIXBIT "OPTION"> FIX>	*54*
	      <CHTYPE <SIXBIT "40ADD"> FIX>	*55*
	      <CHTYPE <SIXBIT "40ADDR"> FIX>	*55*
	      <CHTYPE <SIXBIT "TVCRE"> FIX>	*56*
	      <CHTYPE <SIXBIT "TVCREG"> FIX>	*56*
	      <CHTYPE <SIXBIT "TTST"> FIX>	*57*
	      <CHTYPE <SIXBIT "TTS1"> FIX>	*60*
	      <CHTYPE <SIXBIT "TTS2"> FIX>	*61*
	      <CHTYPE <SIXBIT "WHO1"> FIX>	*62*
	      <CHTYPE <SIXBIT "WHO2"> FIX>	*63*
	      <CHTYPE <SIXBIT "WHO3"> FIX>	*64*
	      <CHTYPE <SIXBIT "SUPPR"> FIX>	*65*
	      <CHTYPE <SIXBIT "SUPPRO"> FIX>	*65*
	      <CHTYPE <SIXBIT "TR1IN"> FIX>	*66*
	      <CHTYPE <SIXBIT "TR1INS"> FIX>	*66*
	      <CHTYPE <SIXBIT "TR2IN"> FIX>	*67*
	      <CHTYPE <SIXBIT "TR2INS"> FIX>	*67*
	      <CHTYPE <SIXBIT "MBOX"> FIX>	*70*
 	      <CHTYPE <SIXBIT "MBO1"> FIX>	*71*
	      <CHTYPE <SIXBIT "EBOX"> FIX>	*72*
	      <CHTYPE <SIXBIT "EBO1"> FIX>	*73*
	      <CHTYPE <SIXBIT "XUNAM"> FIX>	*74*
	      <CHTYPE <SIXBIT "XUNAME"> FIX>	*74*
	      <CHTYPE <SIXBIT "XJNAM"> FIX>	*75*
	      <CHTYPE <SIXBIT "XJNAME"> FIX>	*75*
	      <CHTYPE <SIXBIT "FTL1"> FIX>	*76*
	      <CHTYPE <SIXBIT "FTL2"> FIX>	*77*
	      <CHTYPE <SIXBIT "IOC"> FIX>	*100*
	      <CHTYPE <SIXBIT "IOS"> FIX>	*120*
	      <CHTYPE <SIXBIT "IOP"> FIX>	*140*
	      <CHTYPE <SIXBIT "PMAP"> FIX>	*200*>>>
FIND	<CAMN B* (A)>		; "COMPARE CODE"
	 <JRST	[<MOVE C* 1(A)>
		 <JRST STR>]>	; "WON"
	<ADD A* [<(2) 2>]>
	<JUMPL A* FIND>
	<MOVEI C* *377777*>	; "ILLEGAL CODE FOR BAD STRING"
	<JRST STR>
NUM	<MOVE C* 3(AB)>		; "CODE FOR VAR"
STR	<CAMG AB* [(*777771*)]> ; "FOURTH ARG?"
	 <ADD C* 7(AB)>		; "ADD TO CODE"
	<HRLS C>
	<HRRI C* B>
	<POP P* A>

	<TLZ C* *400000*>	; "MAKE BIT FOR READ/SET."
	<CAML AB* [(*777773*)]>	; "TEST FOR THIRD ARG."
	 <JRST DO-IT>
	<GETYP D* 4(AB)>
	<CAIN D* <TYPE-CODE FALSE>>
	 <JRST DO-IT>		; "THIRD ARG OF FALSE-->REALLY READ INSTEAD OF SET"
	<TLO C* *400000*>
	<MOVE B* 5(AB)>		; "DATLOC"

DO-IT	<XCT A>			; "DO THE CALL."
	<MOVE A* $TWORD>	; "TYPE FOR READ VAR"
	<TLNN C* *400000*>
	 <JRST FINIS>
	<MOVE A* 4(AB)>		; "PASS BACK SET VAR."
	<MOVE B* 5(AB)>
	<JRST FINIS>



<TITLE ITS-EVAL>
	<DECLARE ("VALUE" <OR FIX FALSE> <PRIMTYPE WORD>)>
	<MOVE	B*	1 (AB)>		; "GET ARG (SQUOZE NAME)"
	<*EVAL	B*>			; "GET SYSTEM ADDRESS"
	<JRST	NO-SUCH-SYMBOL>		; "NO DICE"
	<MOVE	A*	$TFIX>		; "RETURN THE SYSTEM ADDRESS"
	<JRST	FINIS>
NO-SUCH-SYMBOL				; "RETURN A FALSE"
	<DMOVE	A*	<PQUOTE #FALSE ("NO SUCH SYMBOL")>>
	<JRST	FINIS>


<TITLE	ITS-GETLOC>
	<DECLARE ("VALUE" FIX <PRIMTYPE WORD>)>
	<HRLZ	C*	1 (AB)>		; "GET ARG (SYSTEM ADDRESS) INTO LEFT HALF OF C"
	<HRRI	C*	B>		; "POINT RIGHT HALF OF C AT B"
	<*GETLO	C*>			; "READ THE LOCATION"
	<MOVE	A*	$TFIX>		; "RETURN IT AS TYPE FIX"
	<JRST	FINIS>


<TITLE ITS-SETLOC>
	<DECLARE ("VALUE" <PRIMTYPE WORD> <PRIMTYPE WORD> <PRIMTYPE WORD>)>
	<HRRZ	C*	1 (AB)>		; "GET FIRST ARG (SYSTEM ADDR) INTO C"
	<HRLI	C*	B>		; "POINT LEFT HALF OF C AT B"
	<MOVE	B*	3 (AB)>		; "GET THE VALUE TO COPY TO SYSTEM VARIABLE"
	<*SETLO	C*>			; "SET THE LOCATION"
	<MOVE	A*	2 (AB)>		; "AND RETURN ARG"
	<JRST	FINIS>

<END>

<ENDPACKAGE>

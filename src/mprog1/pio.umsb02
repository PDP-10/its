"**************************************************************
1. ADD STATISTICS TO CHANP

2. CONSIDER ADDING PRINT MESSAGES TO OTHER FUNCTIONS (READP, PRINTP ETC.)
***********************************************************************"

<PACKAGE "PIO">

<ENTRY CHANP OPENP CLOSEP FLUSHP RESETP UPDATEP READP PRINTP LENGTHP NAMEP>

<ENTRY ALLOCP DALLOCP>

<ENTRY PIO-PRINT-ACTION>

<ENTRY PIOCHANVCT PIOPAGEVCT PIO-REF-COUNT>

<ENTRY PIO-PAGE-LIMIT PIO-PAGE-COUNT PIO-DEFAULT-PAGE-LIMIT PIO-DEFAULT-IO-MODE>

<ENTRY PIO-MAX-EXTRA-ALLOCATION PIO-MIN-EXTRA-ALLOCATION PIO-EXTEND-BY-PAGES?>

<ENTRY PIO-HANG-ON-UNMAP?>

<ENTRY PIO-CLEAR-PAGE>

<ENTRY PIO-ERROR-VECTOR>

<NEWTYPE CHANP VECTOR>

%<COND	(<GASSIGNED? TENEX?>
	<COND	(<SETG PIO-TENEX? ,TENEX?>
		'<SETG PIO-TENEX? T>)
		('<SETG PIO-TENEX? <>>)>)
	(ELSE
	<SETG PIO-TENEX? <>>
	'<SETG PIO-TENEX? <>>)>

"*********** OS-DEPENDENT HAND-CODED RSUBRS ******************"

%<COND	(,PIO-TENEX? <USE "TENXIO"> '<USE "TENXIO">)
	(ELSE
	<USE "ITSIO">
	'<USE "ITSIO">)>

%<COND	(<NOT ,PIO-TENEX?>
	<NEWTYPE JFN WORD>
	'<NEWTYPE JFN WORD>)>

"********* OS-INDEPENDENT HAND-CODED RSUBRS *************"
<USE "PIOSUB">


<SETG PIO-PRINT-ACTION <>>

<GDECL (PIOCHANVCT) <VECTOR [REST <OR CHANP FALSE>]>
	(PIOPAGEVCT) <VECTOR [REST <OR UVECTOR FALSE> <OR CHANP FALSE>]>
	(PIOREQVCT PIOREQVCT1 PIOREQVCT2) VECTOR
	(PIO-REF-COUNT PIO-RECURSION-COUNT) FIX
	(PIO-PAGE-LIMIT PIO-PAGE-COUNT PIO-DEFAULT-PAGE-LIMIT) FIX
	(PIO-DEFAULT-IO-MODE) ANY
	(PIO-MAX-EXTRA-ALLOCATION PIO-MIN-EXTRA-ALLOCATION) FIX
	(PIO-EXTEND-BY-PAGES? PIO-HANG-ON-UNMAP? PIO-TENEX?) ANY
	(PIO-ERROR-VECTOR) <VECTOR [REST STRING]>
	(PIO-UNIT-UV PIO-SCRATCH-SINGLE-UVECTOR) UVECTOR>

<SETG PIOCHANVCT <IVECTOR 10 <>>>

<SETG PIOPAGEVCT <IVECTOR 40 <>>>

<SETG PIOREQVCT <IVECTOR 40 <>>>

<SETG PIOREQVCT1 <IVECTOR 8 <>>>

<SETG PIOREQVCT2 <IVECTOR 8 <>>>

<SETG PIO-REF-COUNT 0>

<SETG PIO-RECURSION-COUNT 0>

<SETG PIO-PAGE-COUNT 0>

<SETG PIO-PAGE-LIMIT 20>

<SETG PIO-DEFAULT-PAGE-LIMIT 6>

<SETG PIO-DEFAULT-IO-MODE <>>

<SETG PIO-UNIT-UV <IUVECTOR 1 0>>

<SETG PIO-SCRATCH-SINGLE-UVECTOR <IUVECTOR 1 0>>

<SETG PIO-MAX-EXTRA-ALLOCATION 10>

<SETG PIO-MIN-EXTRA-ALLOCATION 10>

<SETG PIO-EXTEND-BY-PAGES? T>

<SETG PIO-HANG-ON-UNMAP? <>>

<SETG PIO-ERROR-VECTOR [
"#1 - Unspecified error"
"#2 - Illegal mode to OPENP"
"#3 - File not found"
"#4 - File Busy"
"#5 - Invalid CHANP supplied"
"#6 - Address is not a FIX"
"#7 - Negative address not allowed"
"#8 - Attempt to READ past end of file"
"#9 - Can't PRINT to a READ-ONLY channel"
"#10 - CHANP not in DEFER mode"
"#11 - No cache file in DEFER mode CHANP"
"#12 - File inconsistent, use UPDATEP"
"#13 - Cache file is empty"
]>


"**************** OFFSETS ON 'CHANP' TYPE *********************"

<SETG PIOFSPC 1>	;"STRING, original file spec"
<SETG PIOMODE 2>	;"FIX, mode of CHANP"
<SETG PIOFPTR 3>	;"JFN or CHANNEL to active file"
<SETG PIOFLNT 4>	;"FIX, length of file"
<SETG PIOCFIL 5>	;"JFN or CHANNEL to CACHE file (FALSE if none)"
<SETG PIOCLNT 6>	;"FIX, virtual EOF of cache file."
<SETG PIOPLIM 7>	;"FIX, max # of pages for mapping"
<SETG PIOPNUM 8>	;"FIX, # of pages currently in use"
<SETG PIOPMAP 9>	;"UVECTOR, page-map for CHANP"
<SETG PIOCSIZ 10>	;"FIX, number of pages in CACHE file"
<SETG PIOCMAP 11>	;"UVECTOR, page-map for CACHE flle (FALSE if none)"
<SETG PIOPMOD 12>	;"ANY, Default I/O mode of CHANP"
<SETG PIOFSTA 13>	;"ANY, flag to determine whether channel is open or not"
<SETG PIOFTBL 14>	;"UVECTOR, free-storage table (FALSE if none)"
<SETG PIOXFLG 15>	;"ANY, flag to determine whether file has been extended"

<GDECL (PIOFPTR PIOFSPC PIOMODE PIOPLIM PIOPMOD
	PIOCFIL PIOPNUM PIOPMAP PIOCMAP PIOFTBL PIOXFLG
	PIOFLNT PIOFSTA PIOCSIZ PIOCLNT) FIX>

<MANIFEST PIOFPTR PIOFSPC PIOMODE PIOPLIM PIOPMOD
	PIOCFIL PIOPNUM PIOPMAP PIOCMAP PIOFTBL PIOXFLG
	PIOFLNT PIOFSTA PIOCSIZ PIOCLNT>

<GDECL (PIOWBIT PIOTBIT PIOLHWBIT PIORHWBIT) BITS
	(PIOTBIN PIOTRMAP PIOTRWMAP PIOTCWMAP PIOTUNMAP PIOTNWPAG) FIX>

<SETG PIOLHWBIT <BITS 18 18>>

<SETG PIORHWBIT <BITS 18 0>>

<SETG PIOWBIT <BITS 1 35>>

<SETG PIOTBIT <BITS 3 30>>

<SETG PIOTBIN 1>	;"Not mapped, BINARY page"
<SETG PIOTRMAP 2>	;"READ-ONLY page"
<SETG PIOTRWMAP 3>	;"READ-WRITE page"
<SETG PIOTCWMAP 4>	;"COPY-ON-WRITE page"
<SETG PIOTUNMAP 5>	;"UNMAP page"
<SETG PIOTNWPAG 6>	;"Get NEW page"

<MANIFEST PIOLHWBIT PIORHWBIT PIOWBIT PIOTBIT PIOTBIN PIOTRMAP PIOTRWMAP PIOTCWMAP
	PIOTUNMAP PIOTNWPAG>


"******** FUNCTIONS PREFIXED WITH 'PIO' ARE OPERATING-SYSTEM-DEPENDENT **********"

%<COND	(,PIO-TENEX?
'<DEFINE PIO-FILE-OPEN (FILSPC MODENUM
		       "AUX" FILPTR VAL (FILJFN <>)
			     (MODEUV '![-30064705536 -30064672768!])
				(FLAGUV ![*100000000000* 0!]))
	#DECL ((VALUE) <OR JFN FALSE> (FILPTR) JFN
			(FILSPC) <OR STRING JFN>
	       (MODENUM) FIX (MODEUV FLAGUV) <UVECTOR [REST FIX]> (VAL) ANY
	       (FILJFN) <OR JFN FALSE>)
	<COND (<AND <OR <TYPE? <SET VAL .FILSPC> JFN>
			<SET VAL <GET-FILE .FILSPC <NTH .FLAGUV .MODENUM>>>
			<AND	<==? 2 .MODENUM>
				<G=? <LENGTH .VAL> 1>
				<==? <1 .VAL> *600100*>
				<SET VAL <GET-FILE .FILSPC *400000000000*>>>>
		    <SET FILJFN .VAL>
		    <SET VAL
			 <OPEN-FILE <SET FILPTR .FILJFN>
				    <NTH .MODEUV .MODENUM>>>>
	       .FILPTR)
	      (ELSE
	       <COND (<TYPE? .FILJFN JFN> <RELEASE-FILE .FILJFN>)>
	       "*********DECODE ERROR RESPONSE*************"
	       <CHTYPE (1) FALSE>)>>)
	(
'<DEFINE PIO-FILE-OPEN (FILSPC MODENUM
		       "AUX" CHAN)
	#DECL ((VALUE CHAN) <OR CHANNEL FALSE>
		(FILSPC) <OR STRING CHANNEL>
		(MODENUM) FIX)
<COND	(<==? 1 .MODENUM>
	<COND	(<AND	<TYPE? .FILSPC STRING>
			<TYPE? <SET CHAN <OPEN "READB" .FILSPC>> CHANNEL>>
		.CHAN)
		(<AND	<TYPE? .FILSPC CHANNEL>
			<OR <0? <1 .FILSPC>> <CLOSE .FILSPC>>
			<PUT .FILSPC 2 "READB">
			<SET CHAN <RESET .FILSPC>>>
		.CHAN)
		(<AND	<ASSIGNED? CHAN>
			<TYPE? .CHAN FALSE>
			<G=? <LENGTH .CHAN> 1>
			<COND	(<=? "FILE NOT FOUND" <1 .CHAN>>
				<CHTYPE (3) FALSE>)
				(<=? "FILE LOCKED" <1 .CHAN>>
				<CHTYPE (4) FALSE>)>>)>)
	(<==? 2 .MODENUM>
	<COND	(<AND	<TYPE? .FILSPC CHANNEL>
			<OR <0? <1 .FILSPC>> <CLOSE .FILSPC>>
			<PUT .FILSPC 2 "PRINTO">
			<COND	(<SET CHAN <RESET .FILSPC>>)
				(<G=? <LENGTH .CHAN> 1>
				<COND	(<=? "FILE NOT FOUND" <1 .CHAN>>
					<CHTYPE (3) FALSE>)
					(<=? "FILE LOCKED" <1 .CHAN>>
					<CHTYPE (4) FALSE>)>)>>)
		(<TYPE? .FILSPC STRING>
		<COND	(<SET CHAN <OPEN "PRINTO" .FILSPC>>)
			(<AND	<ASSIGNED? CHAN>
				<TYPE? .CHAN FALSE>
				<G=? <LENGTH .CHAN> 1>>
			<COND	(<=? "FILE LOCKED" <1 .CHAN>>
				<CHTYPE (4) FALSE>)
				(<AND	<=? "FILE NOT FOUND" <1 .CHAN>>
					<SET CHAN <OPEN "PRINT" .FILSPC>>
					<CLOSE .CHAN>>
				<SET CHAN <OPEN "PRINTO" .FILSPC>>)>)>)>)>>)>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-FILE-CLOSE (FILPTR) 
	#DECL ((FILPTR) JFN (VALUE) <OR JFN FALSE>)
	<OR <CLOSE-FILE .FILPTR 1>
	    <ERROR CLOSE-FILE-ERROR!-ERRORS .FILPTR>>>)
	(
'<SETG PIO-FILE-CLOSE ,CLOSE>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-FILE-FLUSH (FILPTR) 
	#DECL ((VALUE) <OR JFN FALSE> (FILPTR) JFN)
	<OR <RELEASE-FILE .FILPTR>
	    <ERROR RELEASE-FILE-ERROR!-ERRORS .FILPTR>>>)
	(
'<SETG PIO-FILE-FLUSH ,CLOSE>)>


%<COND	(,PIO-TENEX?
'<DEFINE PIO-NAME-OF-FILE (FILPTR)
#DECL ((FILPTR) JFN (VALUE) <OR STRING FALSE>)
<NAME-OF-FILE .FILPTR>>)
	(
'<DEFINE PIO-NAME-OF-FILE (CHAN)
#DECL ((CHAN) CHANNEL (VALUE) <OR STRING FALSE>)
<FILSTR <7 .CHAN> <8 .CHAN> <9 .CHAN> <10 .CHAN>>>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-FILE-LENGTH (FILPTR) 
	#DECL ((VALUE) FIX (FILPTR) JFN)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Reading length of '">
	       <PRINC <NAME-OF-FILE .FILPTR>>
	       <PRINC "'.">)>
	<OR <LENGTH-OF-FILE .FILPTR>
	    <ERROR FILE-LENGTH!-ERROR .FILPTR>>>)
	(
'<DEFINE PIO-FILE-LENGTH (CHAN) 
	#DECL ((VALUE) FIX (CHAN) CHANNEL)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Reading length of '">
	       <PRINC <PIO-NAME-OF-FILE .CHAN>>
	       <PRINC "'.">)>
	<*FILE-LENGTH .CHAN>>)>


%<COND	(,PIO-TENEX?)
	(
'<DEFINE PIO-SET-DIRECTION (CHAN DIR)
#DECL ((CHAN) CHANNEL (DIR) FIX)
<COND	(<==? 1 .DIR>
	<COND	(<=? <2 .CHAN> "READB">)
		(ELSE
		<COND	(,PIO-PRINT-ACTION
			<PRINC "
Resetting '">
			<PRINC <PIO-NAME-OF-FILE .CHAN>>
			<PRINC "' to READB mode.">)>
		<PUT .CHAN 2 "READB">
		<COND	(<RESET .CHAN>)
			(<ERROR COULDNT-RESET-CHANNEL-TO-READB!-ERRORS .CHAN>)>)>)
	(<==? 2 .DIR>
	<COND	(<=? <2 .CHAN> "PRINTO">)
		(ELSE
		<COND	(,PIO-PRINT-ACTION
			<PRINC "
Resetting '">
			<PRINC <PIO-NAME-OF-FILE .CHAN>>
			<PRINC "' to PRINTO mode.">)>
		<PUT .CHAN 2 "PRINTO">
		<REPEAT ((CNT 10))
		#DECL ((CNT) FIX (VAL) <OR CHANNEL FALSE>)
		<COND	(<SET VAL <RESET .CHAN>> <RETURN .VAL>)
			(<AND	<==? 1 <LENGTH .VAL>>
				<=? "FILE LOCKED" <1 .VAL>>
				<G? <SET CNT <- .CNT 1>> 0>>
			<SLEEP 2>)
			(<ERROR COULDNT-RESET-CHANNEL-TO-PRINTO!-ERRORS
				.CHAN
				.VAL
				ERRET-ANYTHING-TO-RETRY!-ERRORS>)>>)>)>>)>


%<COND	(,PIO-TENEX?
'<DEFINE PIO-READP-FILE (FILPTR UV LNT ADR) 
	#DECL ((FILPTR) JFN (UV) <OR UVECTOR FIX> (LNT ADR) FIX
	       (VALUE) <OR FIX UVECTOR FALSE>)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Reading ">
	       <PRIN1 .LNT>
	       <PRINC " words from location ">
		<PRIN1 .ADR>
		<PRINC " of file '">
	       <PRINC <NAME-OF-FILE .FILPTR>>
	       <COND (<TYPE? .UV FIX> <PRINC "' into location "> <PRIN1 .UV>)
		     (<PRINC "' into a UVECTOR.">)>)>
<COND	(<AND	<ACCESS-FILE .FILPTR .ADR>
		<READP-FILE .FILPTR .UV .LNT>>)
	(<ERROR READP-ERROR!-ERRORS .FILPTR .UV .LNT>)>>)
	(
'<DEFINE PIO-READP-FILE (CHAN UV LNT ADR) 
	#DECL ((CHAN) CHANNEL (UV) <OR UVECTOR FIX> (LNT ADR) FIX
	       (VALUE) <OR FIX UVECTOR FALSE>)
<PIO-SET-DIRECTION .CHAN 1>
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Reading ">
	       <PRIN1 .LNT>
	       <PRINC " words from location ">
		<PRIN1 .ADR>
		<PRINC " of file '">
	       <PRINC <PIO-NAME-OF-FILE .CHAN>>
	       <COND (<TYPE? .UV FIX> <PRINC "' into location "> <PRIN1 .UV>)
		     (<PRINC "' into a UVECTOR.">)>)>
<COND	(<AND	<ACCESS .CHAN .ADR>
		<IOT-FILE .CHAN .UV .LNT>>)
	(<ERROR READP-ERROR!-ERRORS .CHAN .UV .LNT>)>>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-READW-FILE (FILPTR ADR) 
	#DECL ((FILPTR) JFN (ADR) FIX (VALUE) <OR WORD FALSE>)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Reading a single word from location ">
	       <PRIN1 .ADR>
	       <PRINC " in file '">
	       <PRINC <NAME-OF-FILE .FILPTR>>
	       <PRINC "'.">)>
<COND	(<READW-FILE .FILPTR .ADR>)
	(<ERROR READW-ERROR!-ERRORS .FILPTR .ADR>)>>)
	(
'<DEFINE PIO-READW-FILE (CHAN ADR) 
	#DECL ((CHAN) CHANNEL (ADR) FIX (VALUE) <OR WORD FALSE> (UV) UVECTOR)
<PIO-SET-DIRECTION .CHAN 1>
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Reading a single word from location ">
	       <PRIN1 .ADR>
	       <PRINC " in file '">
	       <PRINC <PIO-NAME-OF-FILE .CHAN>>
	       <PRINC "'.">)>
	<COND	(<AND	<ACCESS .CHAN .ADR>
			<IOT-FILE .CHAN <SET UV ,PIO-SCRATCH-SINGLE-UVECTOR> 1>>
		<CHTYPE <1 .UV> WORD>)
		(<ERROR READW-ERROR!-ERRORS .CHAN .ADR>)>>)>


%<COND	(,PIO-TENEX?
'<DEFINE PIO-PRINTP-FILE (FILPTR UV LNT ADR) 
	#DECL ((FILPTR) JFN (UV) <OR UVECTOR FIX> (LNT ADR) FIX
	       (VALUE) <OR FIX UVECTOR FALSE>)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Writing ">
	       <PRIN1 .LNT>
	       <PRINC " words to location ">
		<PRIN1 .ADR>
		<PRINC " of file '">
	       <PRINC <NAME-OF-FILE .FILPTR>>
	       <COND (<TYPE? .UV UVECTOR> <PRINC "' from a UVECTOR.">)
		     (<TYPE? .UV FIX> <PRINC "' from location "> <PRIN1 .UV>)>)>
<COND	(<AND	<ACCESS-FILE .FILPTR .ADR>
		<PRINTP-FILE .FILPTR .UV .LNT>>)
	(<ERROR PRINTP-ERROR!-ERRORS .FILPTR .UV .LNT>)>>)
	(
'<DEFINE PIO-PRINTP-FILE (CHAN UV LNT ADR) 
	#DECL ((CHAN) CHANNEL (UV) <OR UVECTOR FIX> (LNT ADR) FIX
	       (VALUE) <OR FIX UVECTOR FALSE>)
<PIO-SET-DIRECTION .CHAN 2>
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Writing ">
	       <PRIN1 .LNT>
	       <PRINC " words to location ">
		<PRIN1 .ADR>
		<PRINC " of file '">
	       <PRINC <PIO-NAME-OF-FILE .CHAN>>
	       <COND (<TYPE? .UV UVECTOR> <PRINC "' from a UVECTOR.">)
		     (<TYPE? .UV FIX> <PRINC "' from location "> <PRIN1 .UV>)>)>
<COND	(<AND	<ACCESS .CHAN .ADR>
		<IOT-FILE .CHAN .UV .LNT>>)
	(<ERROR PRINTP-ERROR!-ERRORS .CHAN .UV .LNT>)>>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-PRINTW-FILE (FILPTR ADR WRD) 
	#DECL ((FILPTR) JFN (ADR WRD) FIX (VALUE) <OR FIX FALSE>)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Writing a single word to location ">
	       <PRIN1 .ADR>
	       <PRINC " in file '">
	       <PRINC <NAME-OF-FILE .FILPTR>>
	       <PRINC "'.">)>
<COND	(<PRINTW-FILE .FILPTR .ADR .WRD>)
	(<ERROR PRINTW-ERROR!-ERRORS .FILPTR .ADR .WRD>)>>)
	(
'<DEFINE PIO-PRINTW-FILE (CHAN ADR WRD) 
	#DECL ((CHAN) CHANNEL (ADR WRD) FIX (VALUE) <OR FIX FALSE>)
<PIO-SET-DIRECTION .CHAN 2>
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Writing a single word to location ">
	       <PRIN1 .ADR>
	       <PRINC " in file '">
	       <PRINC <PIO-NAME-OF-FILE .CHAN>>
	       <PRINC "'.">)>
	<COND	(<AND	<ACCESS .CHAN .ADR>
			<IOT-FILE .CHAN <PUT ,PIO-SCRATCH-SINGLE-UVECTOR 1 .WRD> 1>>
		.ADR)
		(<ERROR PRINTW-ERROR!-ERRORS .CHAN .ADR .WRD>)>>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-PMAP-FILE (FILPTR FILPAG CORPAG MODE
		       "AUX" (MODEUV
			      '![0
				*100000000000*
				*140000000000*
				*140400000000*
				0
				0!]))
#DECL ((FILPTR) <OR JFN FIX> (FILPAG CORPAG MODE) FIX
	(MODEUV) <UVECTOR [REST FIX]>)
<COND	(<L=? .MODE 0>
	<SET MODE ,PIOTUNMAP>)
	(<OR	<==? .MODE ,PIOTUNMAP>
		<==? .MODE ,PIOTNWPAG>>
	<SET FILPTR -1>
	<SET FILPAG -1>)>
<COND	(,PIO-PRINT-ACTION
	       <COND (<OR	<==? .MODE ,PIOTUNMAP> <==? .MODE ,PIOTNWMAP>>
		      <PRINC "
Flushing core page ">
		      <PRIN1 .CORPAG>)
		     (<PRINC "
Mapping page ">
		      <PRIN1 .FILPAG>
		      <PRINC " of file '">
		      <PRINC <NAME-OF-FILE .FILPTR>>
		      <PRINC "' into core page ">
		      <PRIN1 .CORPAG>
		      <PRINC " in ">
		      <PRINC <NTH ["Unknown"
				   "Read-only"
				   "Read-Write"
				   "Copy-on-Write"
				"Unmap"
				"New-Page"]
				  .MODE>>
		      <PRINC " mode.">)>)>
<COND	(<AND	<L=? .MODE <LENGTH .MODEUV>>
		 <G? .MODE 0>
		 <SET MODE <NTH .MODEUV .MODE>>
		 <PMAP-FILE .FILPTR
			    <COND (<==? .FILPAG -1> -1) (<* .FILPAG 2>)>
			    *400000*
			    <* .CORPAG 2>
			    .MODE>
		 <PMAP-FILE .FILPTR
			    <COND (<==? .FILPAG -1> -1) (<+ 1 <* .FILPAG 2>>)>
			    *400000*
			    <+ 1 <* .CORPAG 2>>
			    .MODE>>)
	(<ERROR PMAP-ERROR!-ERRORS .FILPTR .FILPAG .CORPAG .MODE>)>>)
	(
'<DEFINE PIO-PMAP-FILE (CHAN FILPAG CORPAG MODE
		       "AUX" (UNMAPFLG <>) CHANNUM (MODEUV
			      '![0
				*210000000000*
				*500000000000*
				*004000000000*
				0
				*500000000000*!]))
	#DECL ((CHAN) <OR CHANNEL FIX> (FILPAG CORPAG MODE CHANNUM) FIX
		(MODEUV) <UVECTOR [REST FIX]>
		(UNMAPFLG) ANY)
	<COND (,PIO-PRINT-ACTION
	       <COND (<==? .MODE ,PIOTUNMAP>
		      <PRINC "
Unmapping core page ">
		      <PRIN1 .CORPAG>)
		(<==? .MODE ,PIOTNWPAG>
		      <PRINC "
Initializing core page ">
		      <PRIN1 .CORPAG>)
		     (<PRINC "
Mapping page ">
		      <PRIN1 .FILPAG>
		      <PRINC " of file '">
		      <PRINC <PIO-NAME-OF-FILE .CHAN>>
		      <PRINC "' into core page ">
		      <PRIN1 .CORPAG>
		      <PRINC " in ">
		      <PRINC <NTH ["Unknown"
				   "Read-only"
				   "Read-Write"
				   "Copy-on-Write"
				"Unmap"
				"New-Page"]
				  .MODE>>
		      <PRINC " mode.">)>)>
	<COND	(<AND	<OR	<AND	<TYPE? .CHAN CHANNEL>
					<G? <SET CHANNUM <1 .CHAN>> 0>>
				<AND	<==? .MODE ,PIOTUNMAP>
					<SET CHANNUM 0>
					<SET FILPAG 0>
					<SET UNMAPFLG T>>
				<AND	<==? .MODE ,PIOTNWPAG>
					<SET CHANNUM -5>
					<SET FILPAG 0>>>
			<AND	<L=? .MODE <LENGTH .MODEUV>>
				 <G? .MODE 0>
				 <SET MODE <NTH .MODEUV .MODE>>
				<COND	(<AND	.UNMAPFLG
						,PIO-HANG-ON-UNMAP?
						<COND	(,PIO-PRINT-ACTION
							<PRINC
						", hanging till written to disk.">) (T)>
						<PAGE-WRITE .FILPAG>>) (T)>
				<MAP-PAGE .MODE -1 .CORPAG .CHANNUM .FILPAG>>>)
		(<ERROR PMAP-ERROR!-ERRORS .CHAN .FILPAG .CORPAG .MODE>)>>)>

%<COND	(,PIO-TENEX?
'<DEFINE PIO-EXTEND-FILE (FILPTR FADR TADR "AUX" (PG <GET-CLEAR-PAGE>)) 
	#DECL ((FILPTR) <OR JFN FALSE> (FADR TADR PG) FIX)
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Extending file '">
	       <PRINC <NAME-OF-FILE .FILPTR>>
	       <PRINC "' from location ">
	       <PRIN1 .FADR>
	       <PRINC " to location ">
	       <PRIN1 .TADR>)>
	<COND (<G? .TADR .FADR>
	       <ACCESS-FILE .FILPTR .FADR>
	       <REPEAT ((LNT <- .TADR .FADR>))
		       <COND (<G? .LNT 1024>
			      <PRINTP-FILE .FILPTR <* .PG 1024> 1024>
			      <SET LNT <- .LNT 1024>>)
			     (ELSE
			      <PRINTP-FILE .FILPTR <* .PG 1024> .LNT>
			      <RETURN>)>>)>>)
	(
'<DEFINE PIO-EXTEND-FILE (CHAN FADR TADR "AUX" (PG <GET-CLEAR-PAGE>)) 
	#DECL ((CHAN) CHANNEL (FADR TADR PG) FIX)
<PIO-SET-DIRECTION .CHAN 2>
	<COND (,PIO-PRINT-ACTION
	       <PRINC "
Extending file '">
	       <PRINC <PIO-NAME-OF-FILE .CHAN>>
	       <PRINC "' from location ">
	       <PRIN1 .FADR>
	       <PRINC " to location ">
	       <PRIN1 .TADR>)>
	<COND (<G? .TADR .FADR>
	       <ACCESS .CHAN .FADR>
	       <REPEAT ((LNT <- .TADR .FADR>))
		       <COND (<G? .LNT 1024>
			      <IOT-FILE .CHAN <* .PG 1024> 1024>
			      <SET LNT <- .LNT 1024>>)
			     (ELSE
			      <IOT-FILE .CHAN <* .PG 1024> .LNT>
			      <RETURN>)>>)>>)>

%<COND	(,PIO-TENEX?)
	(
'<DEFINE PIO-FORCE-FILE (CHAN)
#DECL ((CHAN) CHANNEL)
<COND	(<AND	<TYPE? .CHAN CHANNEL>
		<G? <1 .CHAN> 0>>
	<COND	(,PIO-PRINT-ACTION
		<TERPRI>
		<PRINC "Forcing buffer of ">
		<PRINC <PIO-NAME-OF-FILE .CHAN>>
		<PRINC " to be written out to disk.">)>
	<CLOSE .CHAN>
	<RESET .CHAN>	;<FLUSH-FILE .CHAN>)>>)>



"********** INTERNAL FUNCTIONS WHICH ARE OS-INDEPENDENT ****************"


<DEFINE FIXUP-EXTENSIONS (CHAN "AUX" VAL ITSCHN)
#DECL ((CHAN) CHANP (VAL) ANY (ITSCHN) CHANNEL)
<COND	(<AND	<PIOXFLG .CHAN>
		<NOT ,PIO-TENEX?>>
	<COND	(<OR	<AND	<==? 2 <PIOMODE .CHAN>>
				<TYPE? <SET VAL <PIOFPTR .CHAN>> CHANNEL>
				<G? <1 <SET ITSCHN .VAL>> 0>>
			<AND	<==? 3 <PIOMODE .CHAN>>
				<TYPE? <SET VAL <PIOCFIL .CHAN>> CHANNEL>
				<G? <1 <SET ITSCHN .VAL>> 0>>>
		<PIO-FORCE-FILE .ITSCHN>
		<PROG () <PUT .CHAN ,PIOXFLG <>> T>)>)>>



<DEFINE FLUSH-PAGE (CHAN PGMPUV
			"OPTIONAL" (UNMAPFLG ,PIO-HANG-ON-UNMAP?)
			"AUX" VAL FILPTR ADR)
   #DECL ((CHAN) CHANP (PGMPUV) UVECTOR (FILPTR) <OR JFN CHANNEL> (VAL UNMAPFLG) ANY
	  (ADR) FIX)
   <COND
    (<AND <G=? <1 .PGMPUV> 0> <G=? <2 .PGMPUV> 0>>
     <COND
      (<AND
	<1? <CHTYPE <GETBITS <3 .PGMPUV> ,PIOWBIT> FIX>>
	<OR <==? ,PIOTBIN
		 <SET VAL <CHTYPE <GETBITS <3 .PGMPUV> ,PIOTBIT> FIX>>>
	    <==? ,PIOTCWMAP .VAL>>
	<COND (<AND <==? 3 <PIOMODE .CHAN>>
		    <OR <AND <TYPE? <PIOCMAP .CHAN> UVECTOR>
			     <SET VAL
				  <SEARCH-CACHE-MAP
				   <PIOCMAP .CHAN> <1 .PGMPUV>>>>
			<SET VAL <ASSIGN-CACHE-PAGE .CHAN <1 .PGMPUV> <>>>>>
	       <SET FILPTR <PIOCFIL .CHAN>>
	       <SET ADR <* .VAL 1024>>)
	      (<==? 2 <PIOMODE .CHAN>>
	       <SET ADR <* <1 .PGMPUV> 1024>>
	       <SET FILPTR <PIOFPTR .CHAN>>)>>
       <PIO-PRINTP-FILE .FILPTR <* <2 .PGMPUV> 1024> 1024 .ADR>
	<PUT .CHAN ,PIOXFLG T>
       <PUT .PGMPUV 3 <PUTBITS <3 .PGMPUV> ,PIOWBIT 0>>)>
     <COND (.UNMAPFLG
	    <PIO-PMAP-FILE -1 -1 <2 .PGMPUV> ,PIOTUNMAP>)>
    <PUT .PGMPUV 1 -1>
    <PUT .PGMPUV 3 0>
     .PGMPUV)>>

<DEFINE ASSIGN-CACHE-PAGE (CHAN PG PFLG "AUX" CPG OCPG FADR) 
	#DECL ((VALUE) FIX (CHAN) CHANP (PG CPG OCPG FADR) FIX (PFLG) ANY)
	<PUT .CHAN
	     ,PIOCMAP
	     <INSERT-INTO-CACHE-MAP
	      <OR <PIOCMAP .CHAN> '![!]>
	      .PG
	      <SET CPG <+ 1 <SET OCPG <PIOCSIZ .CHAN>>>>>>
	<COND (.PFLG
	       <COND (<0? .OCPG> <SET FADR 0>) (<SET FADR <* .CPG 1024>>)>
	       <PIO-EXTEND-FILE <PIOCFIL .CHAN> .FADR <* <+ 1 .CPG> 1024>>
		<PUT .CHAN ,PIOXFLG T>)
	      (<0? .OCPG>
		<PIO-EXTEND-FILE <PIOCFIL .CHAN> 0 1024>
		<PUT .CHAN ,PIOXFLG T>)>
	<PUT .CHAN ,PIOCSIZ .CPG>
	.CPG>


<DEFINE FIND-LRU-PAGE (PGMPUV) 
	#DECL ((VALUE) <OR UVECTOR FALSE> (PGMPUV) UVECTOR)
	<REPEAT ((UV <>))
		#DECL ((UV) <OR UVECTOR FALSE>)
		<COND (<EMPTY? .PGMPUV> <RETURN .UV>)
		      (<AND <G=? <1 .PGMPUV> 0>
			    <OR <NOT .UV> <L? <4 .PGMPUV> <4 .UV>>>>
		       <SET UV .PGMPUV>)>
		<SET PGMPUV <REST .PGMPUV 4>>>>

<DEFINE GET-PAGE (CHAN "AUX" PGMPUV PG) 
   #DECL ((VALUE) UVECTOR (CHAN) CHANP (PGMPUV) UVECTOR (PG) FIX)
   <COND (<L? <PIOPNUM .CHAN> <PIOPLIM .CHAN>>
	  <SET PG <FIND-PAGE>>
	  <REPEAT ((PGMPUV <PIOPMAP .CHAN>))
		  #DECL ((PGMPUV) UVECTOR)
		  <COND (<EMPTY? .PGMPUV>
			 <ERROR NO-EMPTY-SLOT-IN-PAGE-MAP!-ERRORS .PGMPUV>)
			(<L? <1 .PGMPUV> 0>
			 <PUT .PGMPUV 2 .PG>
			 <PUT .CHAN ,PIOPNUM <+ 1 <PIOPNUM .CHAN>>>
			 <PUT .PGMPUV 3 0>
			 <RETURN .PGMPUV>)>
		  <SET PGMPUV <REST .PGMPUV 4>>>)
	 (<SET PGMPUV <FIND-LRU-PAGE <PIOPMAP .CHAN>>>
	  <FLUSH-PAGE .CHAN .PGMPUV>
	  .PGMPUV)>>

<DEFINE FIND-PAGE ("OPTIONAL" (UNMAPFLG ,PIO-HANG-ON-UNMAP?) "AUX" PG VAL) 
   #DECL ((PG) <OR FIX FALSE> (VALUE) FIX (VAL UNMAPFLG) ANY)
   <COND
    (<AND <G? ,PIO-PAGE-LIMIT ,PIO-PAGE-COUNT>
	  <TYPE? <SET PG <PIO-PAGE-FIND 1>> FIX>>
     <AND .UNMAPFLG <PIO-PMAP-FILE -1 -1 .PG ,PIOTUNMAP>>
     <SETG PIO-PAGE-COUNT <+ 1 ,PIO-PAGE-COUNT>>
     .PG)
    (ELSE
     <REPEAT ((V ,PIOCHANVCT) (CHAN <>) (PGMPUV <>))
       #DECL ((V) VECTOR (CHAN) <OR CHANP FALSE> (PGMPUV) <OR UVECTOR FALSE>)
       <COND (<EMPTY? .V>
	      <COND (<AND .CHAN .PGMPUV>
		     <SET PG <2 .PGMPUV>>
		     <FLUSH-PAGE .CHAN .PGMPUV .UNMAPFLG>
		     <PUT .CHAN ,PIOPNUM <- <PIOPNUM .CHAN> 1>>
		     <PUT .PGMPUV 2 -1>
		     <RETURN .PG>)
		    (<ERROR CANT-GET-A-FREE-PAGE-ANYWHERE!-ERRORS>)>)
	     (<AND <TYPE? <1 .V> CHANP>
		   <SET VAL <FIND-LRU-PAGE <PIOPMAP <1 .V>>>>
		   <OR <NOT .CHAN> <NOT .PGMPUV> <L? <4 .VAL> <4 .PGMPUV>>>>
	      <SET CHAN <1 .V>>
	      <SET PGMPUV .VAL>)>
       <SET V <REST .V>>>)>>

<DEFINE GIVE-PAGE (PG) 
	#DECL ((PG) FIX)
	<PIO-PAGE-GIVE .PG 1>
	<SETG PIO-PAGE-COUNT <- ,PIO-PAGE-COUNT 1>>>

<DEFINE GET-CLEAR-PAGE ("AUX" PG) 
	#DECL ((PG VALUE) FIX)
<COND	(<AND	<GASSIGNED? PIO-CLEAR-PAGE>
		<TYPE? ,PIO-CLEAR-PAGE FIX>>
	<SET PG ,PIO-CLEAR-PAGE>)
	(<SET PG <SETG PIO-CLEAR-PAGE <FIND-PAGE T>>>)>
<PIO-PMAP-FILE -1 -1 .PG ,PIOTNWPAG>
<FILL-UP <* .PG 1024> 1024 0>
.PG>


<DEFINE GET-ALLOC-TABLE (CHAN "AUX" VAL ADR TBL)
#DECL ((VALUE) <OR UVECTOR FALSE> (CHAN) CHANP (ADR) FIX
	(TBL) <UVECTOR [REST FIX]>
	(VAL) ANY)
<COND	(<==? 1 <PIOMODE .CHAN>> <CHTYPE (9) FALSE>)
	(<TYPE? <SET VAL <PIOFTBL .CHAN>> UVECTOR> .VAL)
	(<AND	<TYPE? <SET VAL <PIOFTBL .CHAN>> FIX>
		<G? .VAL 0>>
	<SET ADR .VAL>
	<COND	(<AND	<SET VAL <READP .CHAN <- .ADR 1>>>
			<SET VAL <CHTYPE .VAL FIX>>
			<COND	(<0? <MOD .VAL 2>>)
				(<SET VAL <- .VAL 1>>)>
			<G? .VAL 0>
			<L? .VAL *400000*>
			<SET TBL <IUVECTOR .VAL 0>>
			<READP .CHAN .ADR .TBL>>
		<PUT .CHAN ,PIOFTBL .TBL>
		<DALLOCP .CHAN .ADR>
		<PIOFTBL .CHAN>)
		(<ERROR COULDNT-FIND-ALLOCATION-TABLE .CHAN .ADR .VAL>)>)
	(<SET TBL <IUVECTOR 10 0>>
	<PUT .CHAN ,PIOFTBL .TBL>
	.TBL)>>



<DEFINE SAVE-ALLOC-TABLE (CHAN "AUX" TBL VAL ADR LNT)
#DECL ((VALUE) <OR 'T FALSE> (CHAN) CHANP (ADR LNT) FIX
	(TBL) <UVECTOR [REST FIX]>
	(VAL) ANY)
<COND	(<==? 1 <PIOMODE .CHAN>> T)
	(<AND	<TYPE? <SET VAL <PIOFTBL .CHAN>> UVECTOR>
		<G? <LENGTH <SET TBL .VAL>> 1>
		<G? <2 .TBL> 0>>
	<COND	(<SET VAL <ALLOCP .CHAN <SET LNT <+ 4 <* <2 .TBL> 2>>> 0>>
		<PRINTP .CHAN <SET ADR .VAL> <PIOFTBL .CHAN> .LNT>
		<PRINTP .CHAN 0 .ADR 1>
		<PUT .CHAN ,PIOFTBL .ADR>
		T)
		(<ERROR COULDNT-ALLOCATE-SPACE-FOR-TABLE .CHAN .LNT .TBL>)>)
	(<TYPE? <PIOFTBL .CHAN> UVECTOR>
	<PRINTP .CHAN 0 0 1>
	<PUT .CHAN ,PIOFTBL 0>
	T)
	(T)>>


"************ ENTRY POINTS OF 'PIO' PACKAGE *****************"

<DEFINE CHANP (FILPTR FILSPC MODENUM PAGLIM PAGMODE CACHEFILE FILNTH FTBLADR
	       "AUX" CHAN VAL)
	#DECL ((CHAN VALUE) CHANP (FILSPC) STRING (MODENUM PAGLIM FILNTH) FIX
	       (CACHEFILE) <OR JFN CHANNEL FALSE> (FILPTR) <OR JFN CHANNEL>
		(VAL PAGMODE) ANY
		(FTBLADR) <OR FIX FALSE>)
	<SET CHAN
	     <CHTYPE <VECTOR .FILSPC
			     .MODENUM
			     .FILPTR
			     .FILNTH
			     .CACHEFILE
			     .FILNTH
			     .PAGLIM
			     0
			     <IUVECTOR <* .PAGLIM 4> -1>
			     0
			     <>
			     .PAGMODE
			     T
			     .FTBLADR
				<>>
		     CHANP>>
	<COND (<SET VAL <MEMBER <> ,PIOCHANVCT>> <PUT .VAL 1 .CHAN>)
	      (<SETG PIOCHANVCT
		     <VECTOR !,PIOCHANVCT .CHAN !<IUVECTOR 10 <>>>>)>
	.CHAN>

<DEFINE OPENP (MODESTR FILSPC
	       "OPTIONAL" PAGLIM PAGMODE CACHEFILE
	       "AUX" (FTBLADR <>) VAL MODENUM FILPTR CACHEFILPTR LNT)
	#DECL ((FILSPC MODESTR) STRING (PAGLIM MODENUM LNT) FIX
	       (PAGMODE VAL) ANY (CACHEFILE) <OR FALSE STRING>
	       (FILPTR CACHEFILPTR) <OR FALSE JFN CHANNEL>
		(FTBLADR) <OR FIX FALSE>)
	<PROG ()
	      <COND (<AND <ASSIGNED? PAGLIM>
			  <TYPE? .PAGLIM FIX>
			  <G? .PAGLIM 0>>)
		    (<SET PAGLIM ,PIO-DEFAULT-PAGE-LIMIT>)>
	      <COND (<ASSIGNED? PAGMODE>)
		    (<SET PAGMODE ,PIO-DEFAULT-IO-MODE>)>
	      <COND (<AND <ASSIGNED? CACHEFILE> <TYPE? .CACHEFILE STRING>>)
		    (<SET CACHEFILE <>>)>
	      <COND (<=? "READ" .MODESTR> <SET MODENUM 1>)
		    (<=? "PRINT" .MODESTR> <SET MODENUM 2>)
		    (<=? "DEFER" .MODESTR> <SET MODENUM 3>)
		    (ELSE <RETURN <CHTYPE (2) FALSE>>)>
	      <COND (<SET FILPTR
			  <PIO-FILE-OPEN .FILSPC
					 <COND (<==? .MODENUM 3> 1)
					       (.MODENUM)>>>)
		    (<AND <==? 3 .MODENUM>
			  <SET FILPTR <PIO-FILE-OPEN .FILSPC 2>>
			  <PIO-FILE-CLOSE .FILPTR>
			  <PIO-FILE-OPEN .FILPTR 1>>)
		    (ELSE <RETURN .FILPTR>)>
	      <COND (<G? <SET LNT <PIO-FILE-LENGTH .FILPTR>> 0>
		     <SET VAL <PIO-READW-FILE .FILPTR 0>>
		     <COND (<1? <CHTYPE <GETBITS .VAL ,PIOWBIT> FIX>>
			    <PIO-FILE-CLOSE .FILPTR>
			    <PIO-FILE-FLUSH .FILPTR>
			    <RETURN <CHTYPE (12) FALSE>>)>
			<SET FTBLADR <CHTYPE <GETBITS .VAL %<BITS 35 0>> FIX>>)>
	      <COND (<==? .MODENUM 3>
		     <COND (<SET CACHEFILPTR <PIO-FILE-OPEN .CACHEFILE 2>>)
			   (<RETURN .CACHEFILPTR>)>)
		    (<SET CACHEFILPTR <>>)>
	      <CHANP .FILPTR
		     .FILSPC
		     .MODENUM
		     .PAGLIM
		     .PAGMODE
		     .CACHEFILPTR
		     .LNT
		     .FTBLADR>>>

<DEFINE CLOSEP (CHAN "AUX" VAL) 
	#DECL ((VALUE) 'T (CHAN) CHANP (VAL) <OR VECTOR FALSE>)
	<FLUSHP .CHAN>
	<COND (<SET VAL <MEMBER .CHAN ,PIOCHANVCT>> <PUT .VAL 1 <>>)>
	<AND <PIOFPTR .CHAN> <PIO-FILE-FLUSH <PIOFPTR .CHAN>>>
	<PUT .CHAN ,PIOFPTR <>>
	<AND <PIOCFIL .CHAN> <PIO-FILE-CLOSE <PIOCFIL .CHAN>>
		<PIO-FILE-FLUSH <PIOCFIL .CHAN>>>
	<PUT .CHAN ,PIOCFIL <>>
	<PUT .CHAN ,PIOCMAP <>>
	<AND	<==? 3 <PIOMODE .CHAN>> <PUT .CHAN ,PIOMODE 1>>
	T>

<DEFINE FLUSHP (CHAN "AUX" PGMPUV) 
	#DECL ((VALUE) <OR CHANP FALSE> (CHAN) CHANP
	       (PGMPUV) <UVECTOR [REST FIX]>)
	<COND	(<AND	<PIOFPTR .CHAN>
			<TYPE? <PIOFTBL .CHAN> UVECTOR>>
		<SAVE-ALLOC-TABLE .CHAN>)>
	<COND (<AND <G? <PIOPNUM .CHAN> 0> <PIOFPTR .CHAN>>
	       <COND (<==? 0 <MOD <LENGTH <SET PGMPUV <PIOPMAP .CHAN>>> 4>>
		      <REPEAT ()
			      <COND (<EMPTY? .PGMPUV> <RETURN>)
				    (<G=? <1 .PGMPUV> 0>
				     <FLUSH-PAGE .CHAN .PGMPUV T>
				     <GIVE-PAGE <2 .PGMPUV>>
					<PUT .PGMPUV 2 -1>)>
			      <SET PGMPUV <REST .PGMPUV 4>>>)
		     (ELSE <ERROR BAD-PAGE-MAP!-ERRORS .CHAN .PGMPUV>)>)>
	<AND <PIOFPTR .CHAN>
	     <PIOFSTA .CHAN>
	     <PIO-FILE-CLOSE <PIOFPTR .CHAN>>>
	<PUT .CHAN ,PIOFSTA <>>
	<PUT .CHAN ,PIOPNUM 0>
	.CHAN>

<DEFINE RESETP (CHAN "AUX" VAL) 
	#DECL ((CHAN) CHANP (VAL) ANY)
	<FLUSHP .CHAN>
	<COND (<NOT <PIOFPTR .CHAN>> <SET VAL <PIOFSPC .CHAN>>)
	      (<SET VAL <PIOFPTR .CHAN>>)>
	<COND (<SET VAL
		    <PIO-FILE-OPEN .VAL
				   <COND (<==? <PIOMODE .CHAN> 3> 1)
					 (<PIOMODE .CHAN>)>>>
	       <PUT .CHAN ,PIOFPTR .VAL>
	       <PUT .CHAN ,PIOFLNT <PIO-FILE-LENGTH <PIOFPTR .CHAN>>>
	       <PUT .CHAN ,PIOFSTA T>)
	      (ELSE <ERROR COULDNT-RESET-CHANP!-ERRORS .CHAN .VAL>)>>

<DEFINE READP (CHAN ADR
	       "OPTIONAL" (DAT <>) DATLNT PGMOD
	       "AUX" VAL DUV RV PGMPUV FILPTR PG)
   #DECL ((VALUE) <OR UVECTOR WORD FALSE> (CHAN) CHANP (ADR PG) FIX
	  (DAT) <OR UVECTOR <PRIMTYPE WORD> FALSE>
	(DATLNT) <OR FIX FALSE>
	(PGMOD VAL) ANY (DUV) <OR UVECTOR WORD> (PGMPUV) UVECTOR
	  (RV) VECTOR (FILPTR) <OR JFN CHANNEL>)
   <SETG PIO-RECURSION-COUNT <+ 1 ,PIO-RECURSION-COUNT>>
   <SET VAL
    <PROG ()
      <COND (<TYPE? .CHAN CHANP>) (<RETURN <CHTYPE (5) FALSE>>)>
      <COND (<NOT <PIOFSTA .CHAN>> <RESETP .CHAN>)>
      <COND (<TYPE? .ADR FIX>
	     <COND (<L? .ADR 0> <RETURN <CHTYPE (7) FALSE>>)>)
	    (<RETURN <CHTYPE (6) FALSE>>)>
      <COND (<TYPE? .DAT UVECTOR>
	     <COND (<EMPTY? .DAT> <RETURN .DAT>) (ELSE <SET DUV .DAT>)>)
	(<TYPE? .DAT BITS> <SET DUV <CHTYPE .DAT WORD>>)
	    (ELSE <SET DUV ,PIO-UNIT-UV>)>
	<COND	(<AND	<ASSIGNED? DATLNT>
			<TYPE? .DATLNT FIX>
			<G? .DATLNT 0>
			<OR	<AND	<TYPE? .DUV UVECTOR>
					<L=? .DATLNT <LENGTH .DUV>>>
				<TYPE? .DUV WORD>>>)
		(<TYPE? .DUV UVECTOR>
		<SET DATLNT <LENGTH .DUV>>)
		(<SET DATLNT 1>)>
      <COND (<ASSIGNED? PGMOD>)
	    (ELSE <SET PGMOD <PIOPMOD .CHAN>>)>
      <COND (<G? <+ .ADR .DATLNT>
		 <MAX <PIOFLNT .CHAN> <PIOCLNT .CHAN>>>
	     <RETURN <CHTYPE (8) FALSE>>)>
      <SET RV <REQUEST-NORM .DUV
				.DATLNT
				.ADR
				<COND (<1? ,PIO-RECURSION-COUNT> ,PIOREQVCT)
					(<==? 2 ,PIO-RECURSION-COUNT> ,PIOREQVCT1)
					(<==? 3 ,PIO-RECURSION-COUNT> ,PIOREQVCT2)
				      ('[])>>>
      <SET RV <FILL-PAGE-REQUESTS .RV <PIOPMAP .CHAN> T>>
      <COND
       (<EMPTY? .RV>)
       (<NOT .PGMOD>
	<REPEAT ()
	  <COND
	   (<EMPTY? .RV> <RETURN>)
	   (<1 .RV>
	    <SET PGMPUV <GET-PAGE .CHAN>>
	    <COND (<==? 1 <PIOMODE .CHAN>>
		   <PIO-PMAP-FILE <PIOFPTR .CHAN>
				  <1 .RV>
				  <2 .PGMPUV>
				  ,PIOTRMAP>
		   <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTRMAP>>)
		  (<==? 2 <PIOMODE .CHAN>>
		<FIXUP-EXTENSIONS .CHAN>
		   <PIO-PMAP-FILE <PIOFPTR .CHAN>
				  <1 .RV>
				  <2 .PGMPUV>
				  ,PIOTRWMAP>
		   <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTRWMAP>>)
		  (<==? 3 <PIOMODE .CHAN>>
		<FIXUP-EXTENSIONS .CHAN>
		   <COND (<AND <SET VAL <PIOCMAP .CHAN>>
			       <SET VAL <SEARCH-CACHE-MAP .VAL <1 .RV>>>>
			  <PIO-PMAP-FILE <PIOCFIL .CHAN>
					 .VAL
					 <2 .PGMPUV>
					 ,PIOTRWMAP>
			  <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTRWMAP>>)
			 (ELSE
			  <PIO-PMAP-FILE <PIOFPTR .CHAN>
					 <1 .RV>
					 <2 .PGMPUV>
					 ,PIOTCWMAP>
			  <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTCWMAP>>)>)
		(<ERROR ILLEGAL-MODE!-ERRORS <PIOMODE .CHAN> .CHAN>)>
	    <PUT .PGMPUV 1 <1 .RV>>
	    <PUT .PGMPUV 4 <SETG PIO-REF-COUNT <+ 1 ,PIO-REF-COUNT>>>
	    <SET RV <FILL-PAGE-REQUESTS .RV <PIOPMAP .CHAN> T>>)
	   (<SET RV <REST .RV 4>>)>>)
       (<AND .PGMOD
	     <OR <==? 1 <PIOMODE .CHAN>> <==? 2 <PIOMODE .CHAN>>>>
	<REPEAT ((UV <>) (DADR 0) (LNT 0))
	  #DECL ((UV) <OR UVECTOR FALSE> (DADR LNT) FIX)
	  <COND
	   (<OR <EMPTY? .RV> <TYPE? <1 .RV> FALSE>>
	    <COND
	     (.UV
	      <COND (<G? .LNT 1>
		     <PIO-READP-FILE <PIOFPTR .CHAN> .UV .LNT .DADR>)
		    (<1? .LNT>
		     <PUT .UV
			  1
			  <CHTYPE <PIO-READW-FILE <PIOFPTR .CHAN> .DADR>
				  <UTYPE .UV>>>)>
	      <SET UV <>>)>
	    <COND (<EMPTY? .RV> <RETURN>)>)
	   (.UV <SET LNT <+ .LNT <4 .RV>>>)
	   (<SET UV <3 .RV>>
	    <SET DADR <+ <* <1 .RV> 1024> <2 .RV>>>
	    <SET LNT <4 .RV>>)>
	  <SET RV <REST .RV 4>>>)
       (<AND .PGMOD <==? <PIOMODE .CHAN> 3>>
	<REPEAT ()
	  <COND (<EMPTY? .RV> <RETURN>)
		(<1 .RV>
		 <COND (<AND <SET VAL <PIOCMAP .CHAN>>
			     <SET VAL <SEARCH-CACHE-MAP .VAL <1 .RV>>>>
			<SET PG .VAL>
			<SET FILPTR <PIOCFIL .CHAN>>)
		       (ELSE <SET PG <1 .RV>> <SET FILPTR <PIOFPTR .CHAN>>)>
		 <COND (<G? <4 .RV> 1>
			<PIO-READP-FILE .FILPTR <3 .RV> <4 .RV>
					<+ <* .PG 1024> <2 .RV>>>)
		       (<1? <4 .RV>>
			<PUT <3 .RV>
			     1
			     <CHTYPE <PIO-READW-FILE
				      .FILPTR <+ <* .PG 1024> <2 .RV>>>
				     <UTYPE <3 .RV>>>>)>
		 <PUT .RV 1 <>>)>
	  <SET RV <REST .RV 4>>>)>
      <COND	(<TYPE? .DAT UVECTOR> .DUV)
	   	(<TYPE? .DUV UVECTOR>
		<CHTYPE <1 .DUV> WORD>)
		(.DUV)>>>
   <AND <L? <SETG PIO-RECURSION-COUNT <- ,PIO-RECURSION-COUNT 1>>
	    0>
	<ERROR UNBALANCED-RECURSION-COUNT!-ERRORS
	       ,PIO-RECURSION-COUNT>>
   .VAL>

<DEFINE PRINTP (CHAN ADR DAT
		"OPTIONAL" DATLNT PGMOD OLDADR
		"AUX" DUV RV VAL PGMPUV UV DADR PG CPG LNT)
   #DECL ((VALUE) <OR FIX FALSE> (CHAN) CHANP (ADR OLDADR DADR LNT PG CPG) FIX
	  (DAT) <OR UVECTOR <PRIMTYPE WORD>>
	(DATLNT) <OR FIX FALSE>
	(PGMOD VAL) ANY
	  (PGMPUV UV) UVECTOR
	(DUV) <OR UVECTOR <PRIMTYPE WORD>>)
   <SETG PIO-RECURSION-COUNT <+ 1 ,PIO-RECURSION-COUNT>>
   <SET VAL
    <PROG ()
      <COND (<TYPE? .CHAN CHANP>) (<RETURN <CHTYPE (5) FALSE>>)>
      <COND (<NOT <PIOFSTA .CHAN>> <RESETP .CHAN>)>
      <COND (<TYPE? .ADR FIX>) (<RETURN <CHTYPE (6) FALSE>>)>
      <COND (<TYPE? .DAT UVECTOR>
	     <COND (<EMPTY? .DAT> <RETURN .ADR>)>
	     <SET DUV .DAT>)
		(<TYPE? .DAT BITS>
		<SET DUV <CHTYPE .DAT WORD>>)
	    (<1? ,PIO-RECURSION-COUNT>
	     <SET DUV <PUT ,PIO-UNIT-UV 1 <CHTYPE .DAT FIX>>>)
	    (<SET DUV <UVECTOR .DAT>>)>
	<COND	(<AND	<ASSIGNED? DATLNT>
			<TYPE? .DATLNT FIX>
			<G? .DATLNT 0>
			<OR	<AND	<TYPE? .DUV UVECTOR>
					<L=? .DATLNT <LENGTH .DUV>>>
				<TYPE? .DUV WORD>>>)
		(<TYPE? .DUV UVECTOR>
		<SET DATLNT <LENGTH .DUV>>)
		(<SET DATLNT 1>)>
      <COND (<OR <==? 2 <PIOMODE .CHAN>> <==? 3 <PIOMODE .CHAN>>>)
	    (<RETURN <CHTYPE (9) FALSE>>)>
      <COND (<ASSIGNED? PGMOD>) (<SET PGMOD <PIOPMOD .CHAN>>)>
      <COND (<AND	<L? .ADR 0>
			<ASSIGNED? OLDADR>
			<TYPE? .OLDADR FIX>
			<G? .OLDADR 0>
			<SET VAL <READP .CHAN <- .OLDADR 1>>>
			<G? <SET VAL <CHTYPE .VAL FIX>> 0>
			<G=? .VAL .DATLNT>>
		<SET ADR .OLDADR>
		<SET OLDADR -1>)
		(<L? .ADR 0>
		<SET ADR <ALLOCP .CHAN .DATLNT>>)>
	<COND	(<AND	<ASSIGNED? OLDADR>
			<TYPE? .OLDADR FIX>
			<G? .OLDADR 0>>
		<DALLOCP .CHAN .OLDADR>)>
      <SET RV <REQUEST-NORM .DUV
				.DATLNT
				.ADR
				<COND (<1? ,PIO-RECURSION-COUNT> ,PIOREQVCT)
					(<==? 2 ,PIO-RECURSION-COUNT> ,PIOREQVCT1)
					(<==? 3 ,PIO-RECURSION-COUNT> ,PIOREQVCT2)
				      ('[])>>>
      <COND (<AND <G? <+ .ADR .DATLNT>
		      <SET VAL <MAX <PIOFLNT .CHAN> <PIOCLNT .CHAN>>>>
		  <G? <MOD .VAL 1024> 0>>
	     <REPEAT ((PG </ .VAL 1024>) (UV <PIOPMAP .CHAN>))
		     #DECL ((PG) FIX (UV) UVECTOR)
		     <COND (<EMPTY? .UV> <RETURN>)
			   (<==? <1 .UV> .PG>
			    <FLUSH-PAGE .CHAN .UV T>
			    <GIVE-PAGE <2 .UV>>
			    <PUT .UV 2 -1>
			    <PUT .CHAN ,PIOPNUM <- <PIOPNUM .CHAN> 1>>
			    <RETURN>)>
		     <SET UV <REST .UV 4>>>)>
      <SET RV <FILL-PAGE-REQUESTS .RV <PIOPMAP .CHAN> <>>>
      <COND
       (<EMPTY? .RV>)
       (<AND .PGMOD <==? 2 <PIOMODE .CHAN>>>
	<REPEAT ((UV <>) (DADR 0) (LNT 0))
	  #DECL ((UV) <OR UVECTOR FALSE> (DADR LNT) FIX)
	  <COND (<OR <EMPTY? .RV> <TYPE? <1 .RV> FALSE>>
		 <COND (.UV
			<COND (<G? .DADR <PIOFLNT .CHAN>>
			       <PIO-EXTEND-FILE
				<PIOFPTR .CHAN> <PIOFLNT .CHAN> .DADR>)>
			<COND (<G? .LNT 1>
			       <PIO-PRINTP-FILE <PIOFPTR .CHAN> .UV .LNT .DADR>)
			      (<1? .LNT>
			       <PIO-PRINTW-FILE <PIOFPTR .CHAN> .DADR <1 .UV>>)>
			<PUT .CHAN ,PIOXFLG T>
			<COND (<G? <SET VAL <+ .DADR .LNT>> <PIOFLNT .CHAN>>
			       <PUT .CHAN ,PIOFLNT .VAL>)>
			<SET UV <>>)>
		 <COND (<EMPTY? .RV> <RETURN>)>)
		(.UV <SET LNT <+ .LNT <4 .RV>>>)
		(<SET UV <3 .RV>>
		 <SET DADR <+ <* <1 .RV> 1024> <2 .RV>>>
		 <SET LNT <4 .RV>>)>
	  <SET RV <REST .RV 4>>>)
       (<==? 2 <PIOMODE .CHAN>>
	<REPEAT ()
	  <COND
	   (<EMPTY? .RV> <RETURN>)
	   (<1 .RV>
	    <COND
	     (<L? <+ <* <1 .RV> 1024> <2 .RV> <4 .RV>> <PIOFLNT .CHAN>>
		<FIXUP-EXTENSIONS .CHAN>
	      <SET PGMPUV <GET-PAGE .CHAN>>
	      <PIO-PMAP-FILE <PIOFPTR .CHAN>
			     <1 .RV>
			     <2 .PGMPUV>
			     ,PIOTRWMAP>
	      <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTRWMAP>>
	      <PUT .PGMPUV 1 <1 .RV>>
	      <PUT .PGMPUV 4 <SETG PIO-REF-COUNT <+ 1 ,PIO-REF-COUNT>>>
	      <SET RV <FILL-PAGE-REQUESTS .RV <PIOPMAP .CHAN> <>>>)
	     (ELSE
	      <SET UV <3 .RV>>
	      <SET DADR <+ <* <1 .RV> 1024> <2 .RV>>>
	      <SET LNT <4 .RV>>
	      <REPEAT ((FLG <>))
		#DECL ((FLG) ANY)
		<SET RV <REST .RV 4>>
		<COND
		 (<EMPTY? .RV> <RETURN>)
		 (<1 .RV>
		  <AND .FLG <ERROR NON-CONTIGUOUS-REQUEST-VECTOR!-ERRORS>>
		  <SET LNT <+ .LNT <4 .RV>>>)
		 (<SET FLG T>)>>
	      <COND (<G? .DADR <PIOFLNT .CHAN>>
		     <PIO-EXTEND-FILE <PIOFPTR .CHAN> <PIOFLNT .CHAN> .DADR>)>
	      <COND (<G? .LNT 1>
		     <PIO-PRINTP-FILE <PIOFPTR .CHAN> .UV .LNT .DADR>)
		    (<1? .LNT> <PIO-PRINTW-FILE <PIOFPTR .CHAN> .DADR <1 .UV>>)>
		<PUT .CHAN ,PIOXFLG T>
	      <PUT .CHAN ,PIOFLNT <+ .DADR .LNT>>)>)
	   (<SET RV <REST .RV 4>>)>>)
       (<==? 3 <PIOMODE .CHAN>>
	<REPEAT ()
	  <COND
	   (<EMPTY? .RV> <RETURN>)
	   (<NOT <1 .RV>> <SET RV <REST .RV 4>>)
	   (<AND <PIOCMAP .CHAN>
		 <SET VAL <SEARCH-CACHE-MAP <PIOCMAP .CHAN> <1 .RV>>>>
	    <SET CPG .VAL>
	    <COND
	     (<AND <L=? <+ <SET DADR <+ <* <1 .RV> 1024> <2 .RV>>> <4 .RV>>
			<PIOCLNT .CHAN>>
		   <NOT .PGMOD>>
		<FIXUP-EXTENSIONS .CHAN>
	      <SET PGMPUV <GET-PAGE .CHAN>>
	      <PIO-PMAP-FILE <PIOCFIL .CHAN> .CPG <2 .PGMPUV> ,PIOTRWMAP>
	      <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTRWMAP>>
	      <PUT .PGMPUV 1 <1 .RV>>
	      <PUT .PGMPUV 4 <SETG PIO-REF-COUNT <+ 1 ,PIO-REF-COUNT>>>
	      <SET RV <FILL-PAGE-REQUESTS .RV <PIOPMAP .CHAN> <>>>)
	     (ELSE
	      <COND (<G? .DADR <PIOCLNT .CHAN>>
		     <PIO-EXTEND-FILE
		      <PIOCFIL .CHAN>
		      <+ <* .CPG 1024> <MOD <PIOCLNT .CHAN> 1024>>
		      <+ <* .CPG 1024> <2 .RV>>>)>
	      <COND (<G? <4 .RV> 1>
		     <PIO-PRINTP-FILE <PIOCFIL .CHAN> <3 .RV> <4 .RV>
				<+ <* .CPG 1024> <2 .RV>>>)
		    (<1? <4 .RV>>
		     <PIO-PRINTW-FILE <PIOCFIL .CHAN>
				      <+ <* .CPG 1024> <2 .RV>>
				      <1 <3 .RV>>>)>
		<PUT .CHAN ,PIOXFLG T>
	      <PUT .CHAN
		   ,PIOCLNT
		   <MAX <PIOCLNT .CHAN> <+ .DADR <4 .RV>>>>
	      <PUT .RV 1 <>>
	      <SET RV <REST .RV 4>>)>)
	   (<AND <G? <PIOFLNT .CHAN> 0>
		 <L? <1 .RV> </ <PIOFLNT .CHAN> 1024>>>
	    <SET PGMPUV <GET-PAGE .CHAN>>
	<OR	,PIO-TENEX?
		<PIO-PMAP-FILE -1 -1 <2 .PGMPUV> ,PIOTUNMAP>>	;"GETS AROUND 'ITS' BUG"
	<PIO-PMAP-FILE -1 -1 <2 .PGMPUV> ,PIOTNWPAG>
	    <PIO-READP-FILE <PIOFPTR .CHAN> <* <2 .PGMPUV> 1024> 1024 <* <1 .RV> 1024>>
	    <PUT .PGMPUV 3 <PUTBITS 0 ,PIOTBIT ,PIOTBIN>>
	    <PUT .PGMPUV 1 <1 .RV>>
	    <COND	(.PGMOD <PUT .PGMPUV 4 0>)
			(<PUT .PGMPUV 4 <SETG PIO-REF-COUNT <+ 1 ,PIO-REF-COUNT>>>)>
	    <ASSIGN-CACHE-PAGE .CHAN <1 .RV> <NOT .PGMOD>>
	    <SET RV <FILL-PAGE-REQUESTS .RV <PIOPMAP .CHAN> <>>>)
	   (<AND <G? <PIOFLNT .CHAN> 0>
		 <==? <1 .RV> </ <PIOFLNT .CHAN> 1024>>
		 <G? <SET LNT <MOD <PIOFLNT .CHAN> 1024>> 0>>
	    <SET CPG <ASSIGN-CACHE-PAGE .CHAN <1 .RV> <>>>
	    <SET PG <GET-CLEAR-PAGE>>
	    <PIO-READP-FILE <PIOFPTR .CHAN> <* .PG 1024> .LNT <* <1 .RV> 1024>>
	    <PIO-PRINTP-FILE <PIOCFIL .CHAN>
			     <* .PG 1024>
			     <MAX .LNT <2 .RV>>
				<* .CPG 1024>>
		<PUT .CHAN ,PIOXFLG T>
	    <PUT .CHAN
		 ,PIOCLNT
		 <+ <* <1 .RV> 1024> <MAX .LNT <2 .RV>>>>)
	   (<OR <0? <PIOFLNT .CHAN>>
		<G? <1 .RV> <SET VAL </ <PIOCLNT .CHAN> 1024>>>
		<AND <==? <1 .RV> .VAL> <0? <MOD <PIOCLNT .CHAN> 1024>>>>
	<REPEAT ()
	<COND	(<==? <1 .RV> </ <PIOCLNT .CHAN> 1024>>
		<ASSIGN-CACHE-PAGE .CHAN <1 .RV> <>>
		<RETURN>)
		(<G? <SET LNT <MOD <PIOCLNT .CHAN> 1024>> 0>
		<COND	(<SET VAL <SEARCH-CACHE-MAP <PIOCMAP .CHAN>
							</ <PIOCLNT .CHAN> 1024>>>
			<SET CPG .VAL>
			<PIO-EXTEND-FILE <PIOCFIL .CHAN>
					<+ .LNT <* .CPG 1024>>
					<* <+ 1 .CPG> 1024>>
			<PUT .CHAN ,PIOXFLG T>
			<PUT .CHAN ,PIOCLNT <* <+ 1 </ <PIOCLNT .CHAN> 1024>> 1024>>)
			(<ERROR IMPOSSIBLE-TO-REACH-THIS-POINT!-ERRORS .CHAN .RV>)>)
		(<G? <1 .RV> <SET VAL </ <PIOCLNT .CHAN> 1024>>>
		<ASSIGN-CACHE-PAGE .CHAN .VAL T>
		<PUT .CHAN ,PIOCLNT <* <+ 1 .VAL> 1024>>)
		(<ERROR ALSO-IMPOSSIBLE-TO-REACH-THIS-POINT!-ERRORS .CHAN .RV>)>>)>>)>
      .ADR>>
   <AND <L? <SETG PIO-RECURSION-COUNT <- ,PIO-RECURSION-COUNT 1>>
	    0>
	<ERROR UNBALANCED-RECURSION-COUNT!-ERRORS
	       ,PIO-RECURSION-COUNT>>
   .VAL>

<DEFINE UPDATEP (CHAN
		 "OPTIONAL" CACHEFILE
		 "AUX" FILPTR EOF CFILPTR CEOF CMAP VAL TMP ADR LNT PG)
   #DECL ((CHAN) <OR CHANP STRING> (CACHEFILE) STRING (FILPTR CFILPTR) <OR JFN CHANNEL>
	  (EOF CEOF ADR LNT PG) FIX (CMAP) <OR UVECTOR FALSE> (VAL TMP) ANY)
   <PROG ()
     <COND
      (<TYPE? .CHAN CHANP>
       <FLUSHP .CHAN>
       <COND (<==? 3 <PIOMODE .CHAN>>)
	     (<RETURN <CHTYPE (10) FALSE>>)>
       <COND (<TYPE? <SET VAL <PIOFPTR .CHAN>> JFN CHANNEL> <SET FILPTR .VAL>)
	     (<RETURN <CHTYPE (5) FALSE>>)>
       <COND (<TYPE? <SET VAL <PIOCFIL .CHAN>> JFN CHANNEL> <SET CFILPTR .VAL>)
	     (<RETURN <CHTYPE (11) FALSE>>)>
       <SET EOF <PIOFLNT .CHAN>>
       <SET CEOF <PIOCLNT .CHAN>>
       <SET CMAP <PIOCMAP .CHAN>>
       <COND (<TYPE? .CMAP UVECTOR>
	      <COND (<L=? <LENGTH .CMAP> 1021> <SET VAL 3>)
		    (ELSE
			<PIO-FILE-CLOSE .CFILPTR>
			<PIO-FILE-OPEN .CFILPTR 2>
			<SET VAL <PIO-FILE-LENGTH .CFILPTR>>)>
		<PIO-PRINTW-FILE .CFILPTR 0 .VAL>
		<PIO-PRINTW-FILE .CFILPTR 1 .CEOF>
		<PIO-PRINTW-FILE .CFILPTR 2 <LENGTH .CMAP>>
		<PIO-PRINTP-FILE .CFILPTR .CMAP <LENGTH .CMAP> .VAL>
	      <COND (<SET VAL <SEARCH-CACHE-MAP .CMAP 0>>
		     <SET TMP <PIO-READW-FILE .CFILPTR <* .VAL 1024>>>
		     <PIO-PRINTW-FILE
		      .CFILPTR
		      <* .VAL 1024>
		      <CHTYPE <PUTBITS .TMP ,PIOWBIT 1> FIX>>)>
	      <PIO-FILE-CLOSE .CFILPTR>
	      <AND <PIOFSTA .CHAN> <PIO-FILE-CLOSE .FILPTR>>
	      <PIO-FILE-OPEN .FILPTR 2>
	      <PIO-FILE-OPEN .CFILPTR 1>
		<PUT .CHAN ,PIOFPTR <>>
		<PUT .CHAN ,PIOCFIL <>>
		<PUT .CHAN ,PIOFSTA <>>
		<PUT .CHAN ,PIOMODE 1>)>)
      (<AND <TYPE? .CHAN STRING> <TYPE? .CACHEFILE STRING>>
       <COND (<TYPE? <SET VAL <PIO-FILE-OPEN .CHAN 2>> JFN CHANNEL>
	      <SET FILPTR .VAL>)
	     (<RETURN <CHTYPE (13) FALSE>>)>
       <COND (<TYPE? <SET VAL <PIO-FILE-OPEN .CACHEFILE 1>> JFN CHANNEL>
	      <SET CFILPTR .VAL>)
	     (<RETURN <CHTYPE (14) FALSE>>)>
       <SET EOF <PIO-FILE-LENGTH .FILPTR>>
       <COND (<AND <G? <PIO-FILE-LENGTH .CFILPTR> 0>
		   <SET VAL <PIO-READW-FILE .CFILPTR 0>>
		   <G? <SET ADR <CHTYPE .VAL FIX>> 0>
		   <SET VAL <PIO-READW-FILE .CFILPTR 1>>
		   <G? <SET CEOF <CHTYPE .VAL FIX>> 0>
		   <SET VAL <PIO-READW-FILE .CFILPTR 2>>
		   <G? <SET VAL <CHTYPE .VAL FIX>> 0>
		   <SET CMAP <IUVECTOR .VAL -1>>
		   <PIO-READP-FILE .CFILPTR .CMAP .VAL .ADR>>)
	     (<SET CMAP <>>)>)>
     <COND
      (<TYPE? .CMAP UVECTOR>
       <COND (<G? <PIO-FILE-LENGTH .FILPTR> 0>
	      <SET VAL <PIO-READW-FILE .FILPTR 0>>)
	     (<SET VAL 0>)>
       <PIO-PRINTW-FILE .FILPTR
			0
			<CHTYPE <PUTBITS .VAL ,PIOWBIT 1> FIX>>
       <PIO-FILE-CLOSE .FILPTR>
       <PIO-FILE-OPEN .FILPTR 2>
	<SET PG <GET-CLEAR-PAGE>>
       <REPEAT ((PGADR <* .PG 1024>)
		FPAG
		CPAG)
	       #DECL ((PGADR FPAG CPAG) FIX)
	       <COND (<EMPTY? .CMAP>
		      <SET VAL <PIO-READW-FILE .FILPTR 0>>
		      <PIO-PRINTW-FILE
		       .FILPTR 0 <CHTYPE <PUTBITS .VAL ,PIOWBIT 0> FIX>>
		      <PIO-FILE-CLOSE .FILPTR>
		      <PIO-FILE-FLUSH .FILPTR>
		      <PIO-FILE-CLOSE .CFILPTR>
		      <PIO-FILE-FLUSH .CFILPTR>
		      <GIVE-PAGE .PG>
		      <RETURN>)
		     (<G? <CHTYPE <1 .CMAP> FIX> 0>
		      <COND (<==? <SET FPAG
				       <CHTYPE <GETBITS <1 .CMAP> ,PIOLHWBIT>
					       FIX>>
				  </ .CEOF 1024>>
			     <SET LNT <MOD .CEOF 1024>>)
			    (<SET LNT 1024>)>
		      <PIO-READP-FILE .CFILPTR .PGADR .LNT
			<* 1024 <SET CPAG <CHTYPE <GETBITS <1 .CMAP> ,PIORHWBIT> FIX>>>>
		      <PIO-PRINTP-FILE .FILPTR .PGADR .LNT <* 1024 .FPAG>>)>
	       <SET CMAP <REST .CMAP>>>)
      (<CHTYPE (13) FALSE>)>>>




<DEFINE LENGTHP (CHAN)
#DECL ((CHAN) CHANP (VALUE) FIX)
<MAX <PIOFLNT .CHAN> <PIOCLNT .CHAN>>>


<DEFINE NAMEP (CHAN)
#DECL ((CHAN) CHANP (VALUE) <OR STRING FALSE>)
<COND	(<TYPE? <PIOFPTR .CHAN> JFN CHANNEL>
	<PIO-NAME-OF-FILE <PIOFPTR .CHAN>>)>>





<DEFINE ALLOCP (CHAN SIZ "OPTIONAL" MAXEXTRA (EXTFLG ,PIO-EXTEND-BY-PAGES?)
			"AUX" VAL TBL TBLUV MAXSIZ LNT ADR)
#DECL ((CHAN) CHANP
	(VALUE) <OR FIX FALSE>
	(TBL TBLUV) <UVECTOR [REST FIX]>
	(SIZ MAXEXTRA MAXSIZ LNT ADR) FIX
	(VAL EXTFLG) ANY)
<COND	(<SET VAL <GET-ALLOC-TABLE .CHAN>>
	<SET TBL .VAL>
	<SET SIZ <+ 1 .SIZ>>
	<COND	(<ASSIGNED? MAXEXTRA> <SET MAXSIZ <+ .SIZ .MAXEXTRA>>)
		(<L? .SIZ ,PIO-MIN-EXTRA-ALLOCATION> <SET MAXSIZ .SIZ>)
		(<SET MAXSIZ <+ .SIZ <MIN </ .SIZ 10> ,PIO-MAX-EXTRA-ALLOCATION>>>)>
	<COND	(<AND	<G? <2 .TBL> 0>
			<G=? <1 .TBL> .SIZ>
			<SET VAL <REPEAT ((UV <REST .TBL 2>) (CNT <2 .TBL>) (TUV <>))
			#DECL ((UV) <UVECTOR [REST FIX]> (CNT) FIX
				(TUV) <OR UVECTOR FALSE>)
			<COND	(<OR <L? <SET CNT <- .CNT 1>> 0> <EMPTY? .UV>>
				<RETURN .TUV>)
				(<==? <1 .UV> .SIZ>
				<RETURN .UV>)
				(<G? <1 .UV> .SIZ>
				<COND	(<OR <NOT .TUV> <L? <1 .UV> <1 .TUV>>>
					<SET TUV .UV>)>)>
			<SET UV <REST .UV 2>>>>>
		<SET TBLUV .VAL>
		<COND	(<L=? <1 .TBLUV> <+ 1 .MAXSIZ>>
			<SET LNT <1 .TBLUV>>
			<SET ADR <2 .TBLUV>>
			<PUT .TBL 2 <SET VAL <- <2 .TBL> 1>>>
			<COND	(<AND	<G? .VAL 0>
					<G? <SET VAL <- .VAL
					    </ <- <LENGTH .TBL> <LENGTH .TBLUV> 2> 2>>>
						0>>
				<REPEAT ((CNT .VAL))
				<PUT .TBLUV 1 <3 .TBLUV>>
				<PUT .TBLUV 2 <4 .TBLUV>>
				<COND	(<L=? <SET CNT <- .CNT 1>> 0> <RETURN>)>
				<SET TBLUV <REST .TBLUV 2>>>)>)
			(ELSE
			<PUT .TBLUV 1 <- <1 .TBLUV> <SET LNT .SIZ>>>
			<PUT .TBLUV 2 <+ <SET ADR <2 .TBLUV>> .LNT>>)>
		<PRINTP .CHAN .ADR <- .LNT 1> 1>
		<+ .ADR 1>)
		(<NOT .EXTFLG>
		<COND	(<AND	<G? <2 .TBL> 0>
				<SET TBLUV <REST .TBL <* <2 .TBL> 2>>>
				<==? <SET VAL <LENGTHP .CHAN>>
					<+ <1 .TBLUV> <2 .TBLUV>>>>
			<SET ADR <2 .TBLUV>>
			<PUT .TBL 2 <- <2 .TBL> 1>>)
			(<L? <SET ADR <LENGTHP .CHAN>> 1>
			<SET ADR 1>)>
		<PRINTP .CHAN .ADR <- .SIZ 1> 1>
		<PRINTP .CHAN <- <+ .ADR .SIZ> 1> 0 1>
		<+ .ADR 1>)
		(.EXTFLG
		<COND	(<AND	<G? <2 .TBL> 0>
				<SET TBLUV <REST .TBL <* <2 .TBL> 2>>>
				<==? <SET VAL <LENGTHP .CHAN>>
					<+ <1 .TBLUV> <2 .TBLUV>>>>
			<SET ADR <2 .TBLUV>>
			<PUT .TBL 2 <- <2 .TBL> 1>>)
			(<L? <SET ADR <LENGTHP .CHAN>> 1>
			<SET ADR 1>)>
		<PRINTP .CHAN .ADR <- .SIZ 1> 1>
		<PRINTP .CHAN <SET LNT <- <* <+ 1 </ <SET VAL <- <+ .ADR .SIZ> 1>>
							1024>> 1024> 1>>
			0 1>
		<COND	(<G? <SET LNT <- .LNT .VAL>> 0>
			<PUT .TBL 2 <+ <2 .TBL> 1>>
			<COND	(<L=? <* <2 .TBL> 2> <- <LENGTH .TBL> 2>>
				<PUT .TBL <+ 1 <* <2 .TBL> 2>> .LNT>
				<PUT .TBL <+ 2 <* <2 .TBL> 2>> <+ .ADR .SIZ>>)
				(ELSE
				<PUT .CHAN ,PIOFTBL <SET TBL <UVECTOR !.TBL .LNT
						<+ .ADR .SIZ> 0 0 0 0 0 0 0 0>>>)>)>
		<PUT .TBL 1 <MAX .LNT <1 .TBL>>>
		<+ .ADR 1>)>)>>



<DEFINE DALLOCP (CHAN ADR "AUX" LNT TBL VAL SAV1 SAV2)
#DECL ((CHAN) CHANP (VALUE) <OR 'T FALSE> (LNT ADR SAV1 SAV2) FIX
	(TBL) <UVECTOR [REST FIX]> (VAL) ANY)
<COND	(<SET VAL <GET-ALLOC-TABLE .CHAN>>
	<SET TBL .VAL>
	<SET ADR <- .ADR 1>>
	<COND	(<AND	<G? .ADR 0>
			<L? .ADR <LENGTHP .CHAN>>
			<SET VAL <READP .CHAN .ADR <> 1>>
			<L=? <+ .ADR <SET LNT <CHTYPE .VAL FIX>>> <LENGTHP .CHAN>>
			<G? .LNT 0>>
		<SET LNT <+ 1 .LNT>>
		<COND	(<AND	<0? <2 .TBL>>
				<G=? <LENGTH .TBL> 4>>
			<PUT .TBL 1 .LNT>
			<PUT .TBL 2 1>
			<PUT .TBL 3 .LNT>
			<PUT .TBL 4 .ADR>
			T)
			(<0? <2 .TBL>>
			<PUT .CHAN ,PIOFTBL
				<SET TBL <UVECTOR .LNT 1 .LNT .ADR 0 0 0 0 0 0>>>
			T)
			(<G? <2 .TBL> 0>
			<REPEAT ((UV <REST .TBL 2>) (CNT <2 .TBL>) (LRGST 0))
			#DECL ((UV) <UVECTOR [REST FIX]>
				(CNT LRGST) FIX)
			<COND	(<EMPTY? .UV>
				<PUT .CHAN ,PIOFTBL
					<SET TBL <UVECTOR !.TBL .LNT .ADR 0 0 0 0 0 0>>>
				<PUT .TBL 2 <+ 1 <2 .TBL>>>
				<PUT .TBL 1 <MAX .LNT .LRGST>>
				<RETURN>)
				(<L? <SET CNT <- .CNT 1>> 0>
				<PUT .UV 1 .LNT>
				<PUT .UV 2 .ADR>
				<PUT .TBL 2 <+ <2 .TBL> 1>>
				<PUT .TBL 1 <MAX .LNT .LRGST>>
				<RETURN>)
				(<==? <+ <1 .UV> <2 .UV>> .ADR>
				<PUT .UV 1 <+ <1 .UV> .LNT>>
				<COND	(<AND	<G=? <LENGTH .UV> 4>
						<G? .CNT 0>
						<==? <4 .UV> <+ <1 .UV> <2 .UV>>>>
					<PUT .UV 1 <+ <1 .UV> <3 .UV>>>
					<REPEAT ((V .UV) (C .CNT))
					#DECL ((V) UVECTOR (C) FIX)
					<COND	(<AND	<G=? <SET C <- .C 1>> 0>
						<G=? <LENGTH <SET V <REST .V 2>>> 4>>
						<PUT .V 1 <3 .V>>
						<PUT .V 2 <4 .V>>)
						(ELSE <RETURN>)>>
					<PUT .TBL 2 <- <2 .TBL> 1>>)>
				<PUT .TBL 1 <MAX <1 .UV> .LRGST <1 .TBL>>>
				<RETURN>)
				(<==? <2 .UV> <+ .ADR .LNT>>
				<PUT .UV 1 <+ <1 .UV> .LNT>>
				<PUT .UV 2 .ADR>
				<PUT .TBL 1 <MAX <1 .UV> .LRGST <1 .TBL>>>
				<RETURN>)
				(<AND	<G? <2 .UV> .ADR>
					<G? <2 .UV> <+ .ADR .LNT>>>
				<COND	(<G? <LENGTH .TBL> <+ 2 <* <2 .TBL> 2>>>
					<SET SAV1 <1 .UV>>
					<SET SAV2 <2 .UV>>
					<PUT .UV 1 .LNT>
					<PUT .UV 2 .ADR>
					<REPEAT ((C .CNT))
					<SET UV <REST .UV 2>>
					<SET VAL <1 .UV>>
					<PUT .UV 1 .SAV1>
					<SET SAV1 .VAL>
					<SET VAL <2 .UV>>
					<PUT .UV 2 .SAV2>
					<SET SAV2 .VAL>
					<AND <L? <SET C <- .C 1>> 0> <RETURN>>>)
					(ELSE
					<SET TBL <INSERT-INTO-ALLOC-TBL .TBL
							<- <LENGTH .TBL> <LENGTH .UV>>
							.LNT .ADR>>
					<PUT .CHAN ,PIOFTBL .TBL>)>
				<PUT .TBL 1 <MAX .LNT .LRGST <1 .TBL>>>
				<PUT .TBL 2 <+ 1 <2 .TBL>>>
				<RETURN>)
				(<L? <+ <1 .UV> <2 .UV>> .ADR>
				<AND <G? <1 .UV> .LRGST> <SET LRGST <1 .UV>>>
				<SET UV <REST .UV 2>>)
				(<==? <2 .UV> .ADR>
				<AND	<ERROR ATTEMPT-TO-DEALLOCATE-BLOCK!-ERRORS
						WHICH-IS-ALREADY-DEALLOCATED!-ERRORS
						ERRET-T-TO-IGNORE!-ERRORS
						.ADR .LNT .UV>
					<RETURN>>
				<RETURN <>>)
				(ELSE
				<AND
				<ERROR ATTEMPT-TO-DEALLOCATE-OVERLAPPING-BLOCK!-ERRORS
					ERRET-T-TO-IGNORE!-ERRORS
					.ADR .LNT .UV>
				<RETURN>>)>>)>)>)>>












<ENDPACKAGE>

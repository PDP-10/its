<PACKAGE "LIB">

<ENTRY LIB-CHAN-LIST
	LIB-LIST
	LIB-ALWAYS-CLOSE
	LIB-NOISY?
	LIB-NOISY-CHAR
	LIB-ACT
	LIB-DCT
	LIB-LOAD
	LIB-DYNAMIC-LOADER
	LIB-HANDLER>

<SETG LIB-CHAN-LIST <>>

<COND	(<NOT <GASSIGNED? LIB-LIST>>
	<SETG LIB-LIST ("_LIB_ >")>)>

<COND	(<NOT <GASSIGNED? LIB-ALWAYS-CLOSE>> <SETG LIB-ALWAYS-CLOSE T>)>

<COND	(<NOT <GASSIGNED? LIB-NOISY?>> <SETG LIB-NOISY? <>>)>

<COND	(<NOT <GASSIGNED? LIB-NOISY-CHAR>> <SETG LIB-NOISY-CHAR !"#>)>


<DEFINE LIB-ACT ("OPTIONAL" (L ,LIB-LIST))
<SETG LIB-CHAN-LIST <MAPF ,LIST <FUNCTION (NM "AUX" VAL)
			<COND	(<AND <TYPE? .NM STRING>
					<SET VAL <SDMOPN .NM>>>
				<MAPRET .VAL>)
				(ELSE <MAPRET>)
				(ELSE T)>>
		.L>>>


<DEFINE LIB-DCT ()
<COND	(<TYPE? ,LIB-CHAN-LIST LIST>
	<MAPF <> <FUNCTION (CHN)
		<COND	(<TYPE? .CHN PMCHAN> <SDMDCT .CHN>)>>
		,LIB-CHAN-LIST>)>>


<DEFINE LIB-LOAD (ATM "AUX" VAL)
<COND	(<TYPE? ,LIB-CHAN-LIST LIST>)
	(<LIB-ACT>)>
<COND	(<AND <TYPE? ,LIB-CHAN-LIST LIST>
		<REPEAT ((L ,LIB-CHAN-LIST))
		<COND	(<EMPTY? .L> <RETURN <>>)
			(<SET VAL <SDMGET <1 .L> .ATM ,SDBEVL>>
			<AND	,LIB-ALWAYS-CLOSE
				<SDMDCT <1 .L>>>
			<RETURN .VAL>)>
		<COND	(,LIB-ALWAYS-CLOSE <SDMDCT <1 .L>>)>
		<SET L <REST .L>>>>
	T)>>


<DEFINE LIB-DYNAMIC-LOADER (FRM
		   "TUPLE" JUNK
		   "AUX" ATM)
   #DECL ((FRM) FRAME (JUNK) TUPLE (ATM) ATOM)
	 <COND (<OR <NOT <==? 3 <LENGTH .JUNK>>>
		    <NOT <OR <AND <==? <1 .JUNK> UNASSIGNED-VARIABLE!-ERRORS>
				  <==? <3 .JUNK> GVAL>>
			     <AND <==? <1 .JUNK> UNBOUND-VARIABLE!-ERRORS>
				  <OR <==? <3 .JUNK> VALUE>
				      <==? <3 .JUNK> CALLER>>>>>>)
		(ELSE
		<COND (<AND <LIB-LOAD <SET ATM <2 .JUNK>>> <GASSIGNED? .ATM>>
			<INT-LEVEL 0>
			<COND	(,LIB-NOISY? <PRINC ,LIB-NOISY-CHAR>)>
			<APPLY ,ERRET ,.ATM .FRM>)>)>>



<SETG LIB-HANDLER <ON "ERROR" ,LIB-DYNAMIC-LOADER 100000>>

<ENDPACKAGE>


<PACKAGE "INFERIOR">

<ENTRY INF-RUN
       INF-READY
       INF-LOAD
       INF-KILL
       INF-START
       INF-CONTIN
       INF-RESULT
       INF-WORD
       INF?
       INF-HANDLER
       INF-ACT
       GET-ICHAN
       INF-LIST
       CURRENT-INF>

<ENTRY *BREAK-HANDLER *VALUE-HANDLER ^Z-HANDLER VALRET-STRING PASS-JCL-DOWN>

<ENTRY INF-INT-DEBUG?
       INF-BREAK?
       INF-DIRS
       ACTION-INTERRUPTS
       NO-ACTION-INTERRUPTS
       NO-ACTION-MESSAGES>

<ENTRY INF INF-JNAME INF-UCHAN INF-ICHAN INF-INDEX INF-SADDR INF-JCL INF-STATUS>

<ENTRY *VALUE
       *BREAK
       *BREAK-16
       :KILL
       FINISHED
       *BREAK-12
       AOBJN
       DDTWRITE
       ^Z-TYPED
       PIRQC
       WANTS-TTY
       IOC-ERROR
       PROCEEDABLE>

<USE "INFASS">

<NEWTYPE INF VECTOR '<VECTOR STRING [2 <OR FALSE CHANNEL>] [2 FIX] STRING>>

<AND? <SETG INF-JNAME 1>
      <SETG INF-UCHAN 2>
      <SETG INF-ICHAN 3>
      <SETG INF-INDEX 4>
      <SETG INF-SADDR 5>
      <SETG INF-JCL 6>
      <SETG INF-STATUS 7>>

<MANIFEST INF-JNAME INF-UCHAN INF-ICHAN INF-INDEX INF-SADDR INF-JCL INF-STATUS>

<FLOAD "LIBRM4;S-TO-6 NBIN">

;"ALSO HAS INF-UV-STR"

<SETG INF-INT-DEBUG? <>>

<SETG INF-BREAK? <>>

<SETG INF-LIST ()>

<SETG CURRENT-INF <>>

<SETG INF-DIRS '["" "SYS" "SYS1" "SYS2"]>

<GDECL (INF-LIST) <LIST [REST FIX INF]>
       (CURRENT-INF) <OR INF FALSE>
       (INF-DIRS) <VECTOR [REST STRING]>>

<AND? <SETG RUPC 0>
      <SETG RTTY 2>
      <SETG RFLS 3>
      <SETG RUSTP 7>
      <SETG RPIRQC 8>
      <SETG RSV40 11>
      <SETG RUIND 19>
      <SETG ROPTIO 44>
      <SETG RXJNAM 61>>

<MANIFEST RUPC RTTY RFLS RUSTP RPIRQC RSV40 RUIND ROPTIO RXJNAM>

<DEFINE INF-RUN (JNAME "OPTIONAL" (JCL "") (FIL "") (ATTY? T) (ITTY? T) "AUX" INF)
	#DECL ((JNAME JCL FIL) STRING (INF) <OR INF FALSE>
	       (ATTY? ITTY?) <OR ATOM FALSE>)
	<COND (<SET INF <INF-READY .JNAME .JCL .FIL>>
	       <INF-START .INF .ATTY? .ITTY?>)>>

<DEFINE INF-READY (JNAME "OPTIONAL" (JCL "") (FIL "") "AUX" INF)
	#DECL ((JNAME JCL FIL) STRING (INF) <OR INF FALSE>)
	<COND (<EMPTY? .FIL>
	       <SET FIL <STRING "TS " .JNAME>>
	       <MAPF <>
		     <FUNCTION (SNM)
			       #DECL ((SNM) <SPECIAL STRING>)
			       <COND (<EMPTY? .SNM> <SET SNM <SNAME>>)>
			       <COND (<SET INF <INF-LOAD .FIL .JNAME .JCL>>
				      <MAPLEAVE .INF>)>>
		     ,INF-DIRS>)
	      (<SET INF
		    <PROG ((NM1 "TS") (NM2 .JNAME))
			  #DECL ((NM1 NM2) <SPECIAL STRING>)
			  <INF-LOAD .FIL .JNAME .JCL>>>)>>

<DEFINE INF-START ("OPTIONAL" (INF ,CURRENT-INF) (ATTY? T) (ITTY? T)) 
	#DECL ((INF) <OR INF FALSE> (ATTY? ITTY?) <OR ATOM FALSE>)
	<COND (.INF
	       <USET <INF-UCHAN .INF> ,RUPC <INF-SADDR .INF>>
	       <INF-CONTIN .INF .ATTY? .ITTY?>)>>

<DEFINE INF-CONTIN ("OPTIONAL" (INF ,CURRENT-INF)
		    (ATTY? T) (ITTY? T)
		    "AUX" UCH INFI RES)
	#DECL ((INF) <OR INF FALSE> (ATTY? ITTY?) <OR ATOM FALSE> (UCH) CHANNEL
	       (RES) ANY (INFI) HANDLER)
	<COND (.INF
	       <SET UCH <INF-UCHAN .INF>>
	       <USET .UCH ,RPIRQC 0>
	       <USET .UCH
		     ,RTTY
		     <COND (.ITTY? #WORD *100000000000*) (#WORD *140000000000*)>>
	       <PUT .INF ,INF-STATUS <>>
	       <AND .ATTY? <ATTY .UCH>>
	       <SETG CURRENT-INF .INF>
	       <SET INFI <HANDLER ,INF-IHEADER ,INF-IHANDLER>>
	       <SET RES
		    <PROG INF-ACT ()
			  #DECL ((INF-ACT) <SPECIAL ACTIVATION>)
			  <USET .UCH ,RUSTP 0>
			  <COND (.ATTY? <HANG>)>>>
	       <COND (.ATTY? <OFF .INFI> <DTTY .UCH>)>
	       .RES)>>

<DEFINE INF-HANDLER (N "AUX" (INF ,CURRENT-INF) RES A)
	#DECL ((N) FIX (INF) INF (RES) ANY (A) ACTIVATION)
	<COND (<AND <==? .N <INF-GET-NUM <INF-UCHAN .INF>>>
		    <ASSIGNED? INF-ACT>
		    <LEGAL? <SET A .INF-ACT>>>
	       <INT-LEVEL 0>
	       <DISMISS <^Z-HANDLER .INF .A> .A>)
	      (<SET INF <INF? .N>>
	       <AND <N==? <SET RES <^Z-HANDLER .INF>> <>>
		    <INF-RESULT .INF .RES>>
	       T)>>

<DEFINE INF-RESULT (INF X "OPTIONAL" (J? T) (OUTCHAN .OUTCHAN)) 
	#DECL ((INF) INF (X) ANY (OUTCHAN) CHANNEL (J?) <OR ATOM FALSE>)
	<COND (<N==? .X ,NULL>
	       <PRINC " [">
	       <COND (.J? <PRINC "JOB "> <PRINC <INF-JNAME .INF>> <PRINC ": ">)>
	       <COND (<==? <PRIMTYPE .X> LIST>
		      <AND <NOT .X> <PRINC "ERROR ">>
		      <MAPR <>
			    <FUNCTION (X)
				      #DECL ((X) LIST)
				      <PRINC <1 .X>>
				      <OR <LENGTH? .X 1> <PRINC !\ >>>
			    .X>)
		     (<TYPE? .X ATOM> <PRIN1 .X>)
		     (<PRINC .X>)>
	       <PRINC "] ">)>>

<DEFINE INF-KILL ("OPTIONAL" (INF ,CURRENT-INF) "AUX" (CI ,CURRENT-INF) (LI ,INF-LIST)) 
	#DECL ((INF CI) <OR FALSE INF> (LI) <LIST [REST FIX INF]>)
	<COND (.INF
	       <UCLOSE <INF-UCHAN .INF>>
	       <CLOSE <INF-UCHAN .INF>>
	       <AND <INF-ICHAN .INF> <CLOSE <INF-ICHAN .INF>>>
	       <PUT .INF ,INF-UCHAN <>>
	       <PUT .INF ,INF-ICHAN <>>
	       <COND (<REPEAT ((IL .LI) L)
			      #DECL ((IL) <LIST [REST FIX INF]> (L) FIX)
			      <COND (<EMPTY? .IL> <RETURN <>>)
				    (<L? <SET L <LENGTH .IL>> 2>
				     <RETURN <>>)
				    (<==? .INF <2 .IL>>
				     <SETG INF-LIST <REST .IL 2>>
				     <RETURN T>)
				    (<L? .L 4> <RETURN <>>)
				    (<==? .INF <4 .IL>>
				     <PUTREST <REST .IL> <REST .IL 4>>
				     <RETURN T>)>
			      <SET IL <REST .IL 2>>>
		      <COND (<==? .INF .CI>
			     <SET LI ,INF-LIST>
			     <SETG CURRENT-INF
				   <COND (<EMPTY? .LI> <>)
					 (ELSE <2 .LI>)>>)>
		      .INF)>)>>

<DEFINE INF? (JJ "AUX" J (LI ,INF-LIST))
	#DECL ((JJ) <OR INF FIX> (J) FIX (LI) <LIST [REST FIX INF]>)
	<COND (<TYPE? .JJ INF> <SET J <INF-GET-NUM <INF-UCHAN .JJ>>>)
	      (ELSE <SET J .JJ>)>
	<REPEAT ()
		<COND (<EMPTY? .LI> <RETURN <>>)
		      (<==? <1 .LI> .J> <RETURN <2 .LI>>)>
		<SET LI <REST .LI 2>>>>

<DEFINE INF-LOAD (FILE XJNAM
		  "OPTIONAL" (JCL "") (SADOFF 0)
		  "AUX" (JNAM .XJNAM) START-ADDRESS LCH UCH OOPS) 
	#DECL ((VALUE) <OR INF FALSE> (LCH UCH) <OR CHANNEL FALSE>
	       (FILE JNAM XJNAM) STRING (SADOFF) <OR FIX FALSE>
	       (JCL) STRING (START-ADDRESS) FIX (OOPS) <OR WORD FALSE>)
	<PROG ((DEV "DSK") (SNM <SNAME>) (NM1 "TS"))
	      #DECL ((DEV SNM NM1) <SPECIAL STRING>)
	      <COND (<SET LCH <OPEN "READB" .FILE>>)>>
	<COND (<NOT .LCH> .LCH)
	      (<NOT <SET UCH <INF-CREATE .XJNAM>>>
	       <CLOSE .LCH>
	       .UCH)
	      (<NOT <SET OOPS <INF-LOAD-FILE .LCH .UCH>>>
	       <UCLOSE .UCH>
	       <CLOSE .UCH>
	       <CLOSE .LCH>
	       .OOPS)
	      (ELSE
	       <CLOSE .LCH>
	       <COND (<GASSIGNED? INF-IHANDLER>)
		     (ELSE
		      <SETG INF-IHANDLER <ON "INFERIOR" ,INF-HANDLER 7>>
		      <SETG INF-IHEADER <GET INFERIOR!-INTERRUPTS INTERRUPT>>)>
	       <USET .UCH
		     ,ROPTIO
		     <COND (<NOT <EMPTY? .JCL>> *60000000000*)
			   (ELSE *20000000000*)>>
	       <USET .UCH ,RXJNAM <CHTYPE <S-TO-6 .XJNAM> WORD>>
	       <USET .UCH
		     ,RUPC
		     <SET START-ADDRESS
			  <+ .SADOFF <CHTYPE <GETBITS .OOPS <BITS 18>> FIX>>>>
	       <SETG INF-LIST
		     (<INF-GET-NUM .UCH>
		      <SETG CURRENT-INF
			    <CHTYPE [<8 .UCH>
				     .UCH
				     <>
				     <USET .UCH ,RUIND>
				     .START-ADDRESS
				     .JCL
				     <>]
			     INF>>
		      !,INF-LIST)>
	       ,CURRENT-INF)>>



<SETG TUV ![0 0!]>

<GDECL (TUV) <UVECTOR [2 FIX]>>

<DEFINE INF-WORD (INF WH "OPTIONAL" VAL "AUX" TMP (UV <REST ,TUV>) CH) 
	#DECL ((INF) INF (WH TMP) FIX (VAL VALUE) <PRIMTYPE WORD>
	       (CH) CHANNEL (UV) <UVECTOR [REST FIX]>)
	<SET WH <CHTYPE <ANDB .WH *777777*> FIX>>
	<COND (<ASSIGNED? VAL>
	       <ACCESS <SET CH <INF-UCHAN .INF>> .WH>
	       <PUT .UV 1 .VAL>
	       <PRINTB .UV .CH>
	       .VAL)
	      (<AND <ACCESS <SET CH <GET-ICHAN .INF>> .WH>
		    <SET TMP <READB .UV .CH '<>>>
		    <1? .TMP>>
	       <1 .UV>)>>

<DEFINE GET-ICHAN (INF "AUX" (ICH <INF-ICHAN .INF>) OCH) 
	#DECL ((INF) INF (ICH) <OR FALSE CHANNEL> (OCH) CHANNEL)
	<COND (.ICH <COND (<0? <1 .ICH>> <RESET .ICH>) (ELSE .ICH)>)
	      (<SET ICH
		    <OPEN "READB"
			  <7 <SET OCH <INF-UCHAN .INF>>>
			  <8 .OCH>
			  <9 .OCH>
			  <10 .OCH>>>
	       <PUT .INF ,INF-ICHAN .ICH>
	       .ICH)
	      (ELSE <ERROR CANT-GET-READ-CHANNEL-TO-INFERIOR .INF>)>>

<SETG NO-ACTION-INTERRUPTS
      '![4							        ;"BADPI"
	 16								  ;"DPY"
	 32							        ;"ILOPR"
	 512							        ;"ILUAD"
	 2048							      ;"1PROCED"
	 8192								  ;"MPV"
	 16384								  ;"MAR"
	 262144								  ;"RES"
	 8388608						       ;"SUPUUO"
	 16777216							  ;"PUR"
	 33554432							 ;"PURW"
	 134217728						   ;"PARERR"!]>

<SETG ACTION-INTERRUPTS '![2						   ;"^Z"
			   128					       ;".VALUE"
			   256						  ;"IOC"
			   1024					       ;".BREAK"
			   268435456				      ;"TTY"!]>

<SETG NO-ACTION-MESSAGES
      ["Bad interrupt location"
       "Display MPV"
       "Illegal instruction"
       "Illegal user address"
       "One-proceed breakpoint"
       "Memory protection violation"
       "MAR"
       "Restriction violation"
       "System UUO trap"
       "Pure page trap"
       "Attempt to write into read-only memory"
       "Parity error"]>

<GDECL (ACTION-INTERRUPTS NO-ACTION-INTERRUPTS)
       <UVECTOR [REST FIX]>
       (NO-ACTION-MESSAGES)
       <VECTOR [REST STRING]>>

<DEFINE ^Z-HANDLER (INF "OPTIONAL" (FREE? <>)
		    "AUX" RES (UCH <INF-UCHAN .INF>) (USTP <USET .UCH ,RUSTP>)
			  (UPC <USET .UCH ,RUPC>) (FLS <USET .UCH ,RFLS>)
			  (PIRQC <USET .UCH ,RPIRQC>) (SV40 <USET .UCH ,RSV40>)
			  (TTY <USET .UCH ,RTTY>))
	#DECL ((INF) INF (UCH) CHANNEL (RES) ANY (FREE?) <OR ACTIVATION FALSE>
	       (TTY USTP UPC FLS PIRQC SV40) FIX)
	<OR ,INF-INT-DEBUG? <USET .UCH ,RPIRQC 0>>
	<SET RES
	     <COND (<AND <0? <CHTYPE <GETBITS .USTP <BITS 1 33>> FIX>>
		    <0? .FLS>>
	       RUNNING)
	      (<0? .PIRQC>
	       <COND (<0? .FLS> <CHTYPE (PIRQC 0) FALSE>)
		     (ELSE PROCEEDABLE)>)
	      (<NOT <0? <CHTYPE <ANDB .PIRQC 2> FIX>>> ^Z-TYPED)
	      (<MAPF <>
		     <FUNCTION (BIT MES) 
			     #DECL ((MES) STRING (BIT) FIX)
			     <COND (<NOT <0? <CHTYPE <ANDB .PIRQC .BIT> FIX>>>
				    <MAPLEAVE .MES>)>>
		     ,NO-ACTION-INTERRUPTS
		     ,NO-ACTION-MESSAGES>)
	      (<NOT <0? <CHTYPE <ANDB .PIRQC 268435456> FIX>>>
	       <USET .UCH ,RUPC <- .UPC 1>>
	       <AND .FREE? <LEGAL? .FREE?> <INT-LEVEL 0> <AGAIN .FREE?>>
	       WANTS-TTY)
	      (<NOT <0? <CHTYPE <ANDB .PIRQC 256> FIX>>>
	       <USET .UCH ,RUPC <- .UPC 1>>
	       IOC-ERROR)
	      (<NOT <0? <CHTYPE <ANDB .PIRQC 128> FIX>>>	       ;".VALUE"
	       <*VALUE-HANDLER .SV40 .INF>)
	      (<NOT <0? <CHTYPE <ANDB .PIRQC 1024> FIX>>>
	       <*BREAK-HANDLER .SV40 .INF .TTY .FREE?>)
	      (ELSE <CHTYPE (PIRQC .PIRQC) FALSE>)>>
	<PUT .INF ,INF-STATUS .RES>
	.RES>

\ 

<AND? <SETG AC-FIELD <BITS 4 23>>
      <SETG *BREAK #WORD *045000000000*>
      <SETG *VALUE #WORD *043200000000*>
      <SETG *LOGOUT #WORD *042000000033*>>

<MANIFEST AC-FIELD *BREAK *VALUE *LOGOUT>

<DEFINE *BREAK-HANDLER (SV40 INF TTY FREE?
			"AUX" (CI? <==? .INF ,CURRENT-INF>) (UCH <INF-UCHAN .INF>)
			      (INS <ANDB .SV40 #WORD *777000000000*>)
			      (LOGO? <==? ,*LOGOUT <ANDB .SV40 #WORD *777000000077*>>)
			      LH W J TMP
			      (AC <CHTYPE <GETBITS .SV40 ,AC-FIELD> FIX>)
			      (EFF <COND (.LOGO? *160000*)
					 (<CHTYPE <GETBITS .SV40 <BITS 18>> FIX>)>))
	#DECL ((INF) INF (SV40 TTY) <PRIMTYPE WORD> (W AC EFF TMP LH) FIX (UCH) CHANNEL
	       (INS) WORD (J) STRING (FREE?) <OR ACTIVATION FALSE>
	       (CI? LOGO?) <OR ATOM FALSE>)
	<PROG ()
	      <COND (<AND <N==? ,*BREAK .INS>
			  <NOT .LOGO?>>
		     <CHTYPE (*BREAK .INS) FALSE>)
		    (<AND <==? .AC 10>
			  <NOT .LOGO?>>
		     <COND (<L? <SET W <INF-WORD .INF .EFF>> 0>
			    <SET LH <CHTYPE <GETBITS .W <BITS 17 18>> FIX>>
			    <COND (<1? .LH>
				   <PUT .INF ,INF-SADDR <INF-WORD .INF .W>>)
				  (<==? .LH 5>
				   <PUT .INF ,INF-JCL <SET J <VALRET-STRING .EFF .INF>>>
				   <USET ,UCH
					 ,ROPTIO
					 <COND (<EMPTY? .J> *20000000000*)
					       (ELSE *60000000000*)>>)
				  (,INF-BREAK? <RETURN (*BREAK-12 DDTWRITE)>)>)
			   (<0? <SET LH <CHTYPE <GETBITS .W <BITS 18 18>> FIX>>>
			    <RETURN <CHTYPE (*BREAK-12 .W) FALSE>>)
			   (<==? #WORD *000000600000*
				 <ANDB .LH #WORD *000000600000*>>
			    <RETURN (*BREAK-12 AOBJN)>)
			   (<1? .LH> <INF-WORD .INF .W ,INF-SADDR>)
			   (<==? .LH 2>
			    <INF-FILE-NAMES .INF
					    .W
					    <9 .UCH>
					    <10 .UCH>
					    <7 .UCH>
					    <8 .UCH>>)
			   (<==? .LH 5>
			    <PASS-JCL-DOWN .INF <CHTYPE <ANDB .W 262143> FIX>>)
			   (<==? .LH 6>
			    <INF-FILE-NAMES .INF .W>)
			   (<==? .LH 9> <INF-WORD .INF .W <S-TO-6 <UNAME>>>)>
		     <COND (.FREE? <AGAIN .INF-ACT>)
			   (ELSE <INF-CONTIN .INF <G=? <CHTYPE .TTY FIX> 0>>)>
		     <>)
		    (<OR <==? .AC 14> .LOGO?>
		     <COND (<NOT <0? <SET TMP <CHTYPE <GETBITS .EFF <BITS 2 13>> FIX>>>>
			    <INF-KILL .INF>
			    <COND (<AND .CI?
					<G=? <CHTYPE .TTY FIX> 0>
					<NOT <0? <CHTYPE <ANDB .EFF *200000*> FIX>>>>
				   <CRLF>)>
			    <COND (.CI?
				   <COND (<OR <==? .TMP 1>
					      <NOT <0? <CHTYPE <ANDB .EFF *4000*>
							       FIX>>>>
					  ,NULL)
					 (ELSE :KILL)>)
				  (<==? .TMP 2> :KILL)
				  (<==? .TMP 3> FINISHED)>)
			   (<NOT <0? <CHTYPE <ANDB .EFF 32768> FIX>>>
			    (*BREAK-16 BACK))
			   (ELSE (*BREAK-16 .EFF))>)
		    (ELSE (*BREAK .AC .EFF))>>>

<DEFINE INF-FILE-NAMES (INF W
			"OPTIONAL" (D <VALUE? DEV "DSK">) (S <VALUE SNM>)
				   (N1 <VALUE? NM1 "INPUT">) (N2 <VALUE? NM2 ">">))
	#DECL ((INF) INF (W) FIX (D S N1 N2) STRING)
	<INF-WORD .INF .W <S-TO-6 .D>>
	<INF-WORD .INF <+ .W 1> <S-TO-6 .S>>
	<INF-WORD .INF <+ .W 2> <S-TO-6 .N1>>
	<INF-WORD .INF <+ .W 3> <S-TO-6 .N2>>>

<DEFINE VALUE? (ATM DEF)
	#DECL ((ATM) ATOM (VALUE DEF) ANY)
	<COND (<ASSIGNED? .ATM> ..ATM)
	      (<GASSIGNED? .ATM> ,.ATM)
	      (ELSE .DEF)>>

<DEFINE *VALUE-HANDLER (SV40 INF
			"AUX" (INS <ANDB .SV40 #WORD *777600000000*>) ST
			      (EFF <CHTYPE <GETBITS .SV40 <BITS 18>> FIX>))
	#DECL ((INF) INF (SV40) <PRIMTYPE WORD> (INS) WORD (EFF) FIX (ST) STRING)
	<COND (<N==? ,*VALUE .INS> <CHTYPE (*VALUE) FALSE>)
	      (<0? .EFF> (*VALUE 0))
	      (<SET ST <VALRET-STRING .EFF .INF>> (*VALUE .ST))>>

<DEFINE VALRET-STRING (EFF INF
		       "AUX" (ICH <GET-ICHAN .INF>) (CNT 0) (E .EFF) U)
   #DECL ((U) UVECTOR (EFF CNT E W) FIX (ICH) CHANNEL (INF) INF (VALUE) STRING)
   <ACCESS .ICH .EFF>
   <SET U
	<MAPF ,UVECTOR
	      <FUNCTION ("AUX" (W <INF-WORD .INF .E>)) 
		      #DECL ((W) FIX)
		      <COND (<OR <0? .W>
				 <0? <CHTYPE <GETBITS .W <BITS 7 29>> FIX>>>
			     <MAPSTOP>)
			    (<0? <CHTYPE <GETBITS .W <BITS 7 22>> FIX>>
			     <SET CNT <+ .CNT 1>>
			     <MAPSTOP .W>)
			    (<0? <CHTYPE <GETBITS .W <BITS 7 15>> FIX>>
			     <SET CNT <+ .CNT 2>>
			     <MAPSTOP .W>)
			    (<0? <CHTYPE <GETBITS .W <BITS 7 8>> FIX>>
			     <SET CNT <+ .CNT 3>>
			     <MAPSTOP .W>)
			    (<0? <CHTYPE <GETBITS .W <BITS 7 1>> FIX>>
			     <SET CNT <+ .CNT 4>>
			     <MAPSTOP .W>)
			    (ELSE
			     <SET CNT <+ .CNT 5>>
			     <SET E <+ .E 1>>
			     <MAPRET .W>)>>>>
   <INF-UV-STR .U .CNT>>

\ 

<SETG JCL-UV <IUVECTOR 20 0>>

<GDECL (JCL-UV) <UVECTOR [REST FIX]>>

<DEFINE PASS-JCL-DOWN (INF ADDR
		       "AUX" (JCL <INF-JCL .INF>) (C <GET-ICHAN .INF>)
			     (UCH <INF-UCHAN .INF>) (UV ,JCL-UV) N LB L CR?)
	#DECL ((INF) INF (ADDR) FIX (JCL) STRING (C UCH) CHANNEL
	       (CR?) <OR FALSE STRING> (UV) UVECTOR (N LB L) FIX)
	<PROG ()
	      <COND (<EMPTY? .JCL> <RETURN <>>)>
	      <SET L
		   <+ 2
		      <COND (<SET CR? <MEMQ <ASCII 13> .JCL>>
			     <- <LENGTH .JCL> <LENGTH .CR?>>)
			    (ELSE <LENGTH .JCL>)>>>
	      <COND (<G? <SET N </ <+ 4 .L> 5>> <LENGTH .UV>> <RETURN <>>)>
	      <COND (<0? <CHTYPE <USET .UCH <+ 128 </ .ADDR 1024>>> FIX>>
		     <RETURN <>>)>
	      <COND (<0? <CHTYPE <USET .UCH
				       <+ 128
					  </ <SET LB <+ .ADDR .N -1>> 1024>>>
				 FIX>>
		     <SET N <- <* </ .LB 1024> 1024> .ADDR>>)>
	      <ACCESS .C .ADDR>
	      <SET UV <REST .UV <- <LENGTH .UV> .N>>>
	      <SET N <READB .UV .C>>		       ;"Read from job at addr."
	      <SET LB 0>
	      <MAPF <>
		    <FUNCTION (W) 
			    #DECL ((W) FIX)
			    <COND (<G? .LB .L> <MAPLEAVE>)
				  (<0? .W> <SET LB <+ .LB 5>>)
				  (ELSE <MAPLEAVE>)>>
		    .UV>
	      <SET L <MIN .L .LB>>
	      <ACCESS .UCH .ADDR>
	      <SET LB <PRINTSTRING .JCL .UCH <- .L 2>>>
	      <PRINC <ASCII 13> .UCH>
	      <SET LB <+ .LB 1>>
	      <COND (<G? <SET LB <MOD .LB 5>> 0>
		     <PRINTSTRING <ISTRING 5> .UCH <- 5 .LB>>)>
	      <BUFOUT .UCH>
	      .JCL>>

<ENDPACKAGE>

;;;-*-LISP-*-
; Code for defining assembler read macros.
; Definitions of assembler read macros.

(herald armacs)

(eval-when (compile)
	   (setq defmacros-for-compiling nil)
	   (special assem-ibase number-context-p)
	   (*expr gettok unagetchar agetchar)
	   (fixsw t))

(eval-when (compile eval)
	   (or (get 'defdef 'version) (load "klotz;defdef")))

(array *assem-read-table* t 200)

(declare (array* (notype (*assem-read-table* 200))))

;Read macro definitions.

(defarmac #/+ (ch)
	  (ascii ch)) ;self-delimiting character.


(mapc #'(lambda (c) (store (*assem-read-table* c)
			   (*assem-read-table* #/+)))
      '(#/- #/* #// #/# #/: #/@ #/( #/)
	    #/[ #/] #/< #/> #/, #/= #/& #/!))


(defarmac #/; (NIL)
	  (do () ((= (agetchar) #\cr) (gobble-lf) ()))) ;nil token means end of line

(defun gobble-lf ()
       (let ((ch (agetchar)))
	    (cond ((not (= ch #\lf)) (unagetchar ch)))))

(defarmac #\cr (NIL)
	  (gobble-lf)
	  (*throw 'END-OF-LINE ()))

(defarmac #/$ (NIL)
	  (let ((assem-ibase 16.)
		(number-context-p t))
	       (gettok)))
(defarmac #/ (NIL)
	  (let ((assem-ibase 8.)
		(number-context-p t))
	       (gettok)))

(defarmac #/ (NIL)
	  (let ((assem-ibase 2.)
		(number-context-p t))
	       (gettok)))

(defarmac #/' (NIL) ;returns the ascii value of the character it quotes.
	  (agetchar))


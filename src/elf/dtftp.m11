         .TITLE    FTPDAT                                                       
;***********************************************************************        
;                                                                               
;DTFTP:  DTFTP IS POSTED FROM TNFTP. TNFTP PASSES THE POINTER TO                
;        THE DATA EXCHANGE AREA IN PTEX (PRELIMINARY) AND THE PTR               
;        TO THE DATA CCT IS WITHIN THIS (START OF BUFFER + PICP).               
;        THE DTFTP IS ALSO POSTED FROM TNFTP WHEN IT IS ASKED TO                
;        STOP REC DATA.                                                         
;        THE TNFTP PROCESS IS POSTED BACK WHEN                                  
;        1.DTFTP CANT CONNECT TO FOREIGN SOCKET                                 
;        2.A REQUESTED ABOR IS DONE                                             
;        3.SUCCESSFUL DATA TRANSMISSION (CONN. CLOSED                           
;                                                                               
         .MCALL    $N.SND,$N.CON,$N.CLS,$N.LSN,$N.RCV,$N.CNT                    
         .MCALL    $WAIT,$POST,$STIME                                                  
         .MCALL    $PUSH,$POP                                                   
         .MCALL    $ALOCB,$FREEB                                                
         .MCALL    $DFCCT,$CNFIG,$DFREG,$DISCC                                  
;                                                                               
         .GLOBL    DTFTP                                                        
         .GLOBL    PTEX            ;PRELIMINARY, PTR TO EXCHANG AREA            
         .GLOBL    $TNPCT,$LGFTP,$DTPCT                                         
         .GLOBL    $ALOCW                                                       
         .GLOBL    $LPLST          ;PRINT ROURINE                               
;                                                                               
         $CNFIG                    ;SYSTEM PROCESSOR CONFIGURATION              
         $DFCCT                    ;DDEFINE CCT ENTRY                           
         $DFREG                    ;DEFINE REGS                                 
         $DISCC                    ;DEFINE COMPLETION CODES                     
;$DFCCT                                                                         
;CCTHOS=0                                                                       
;CCTOP=1                                                                        
;CCTCC=2                                                                        
;CCTBS=3                                                                        
;CCTLCL=4                                                                       
;CCTFGN=6                                                                       
;                                                                               
;DISCC                                                                          
;RDY=200                                                                        
;TIM=100                                                                        
;IO=40                                                                          
;ACK=20                                                                         
;BUF=10                                                                         
;                                                                               
BFPOOL=3                           ;EXHANGE BUFFER 16 WORDS                     
CCPOOL=3                           ;CCT POOL ID                                 
LINPOOL= 0                         ;LINE BUFFER ID 64 WORDS                     
LINLEN=128.                        ;LENGTH OF LINE BUFFFER IN CHARS.            
;                                                                               
SPACE=   40                                                                     
CR=      15                                                                     
LF=      12                                                                     
;                                                                               
;***********************************************************************        
;                                                                               
;NOW DEFINE POINTERS TO  THE EXCHANGE BUFFER                                    
PRID=    0         ;PROCESS ID TNFTP                                            
PICP=    2         ;ICP AND DATA CCT PTR                                        
FLAG=    4         ;FLAG TNLOG-TNFTP                                            
FLAGTD=  6         ;FLAG TNFTP-DTFTP                                            
FLAGN=   10        ;FLAG DTFTP/TNFTP                                            
FLAGO=   11        ;OLD FLAG DTFTP-TNFTP                                        
PSCCT=   12        ;PTR TELNET SEND CCT                                         
PRCCT=   14        ;PTR TELNET REC CCT                                          
PREC=    16        ;PTR DATE REC BUFFER                                         
STAT=    20        ;STATUS DTFTP                                                
STPTR=   22        ;INITIAL STACK PTR DTFTP                                     
;***********************************************************************        
;                                                                               
DTFTP:   $WAIT                     ;WAIT FOR BEING POSTED                       
         MOV       PTEX,R5         ;GET PTR EXCH AREA                           
         BEQ       DTFTP           ;NO,WAIT AGAIN                               
         MOV       SP,STPTR(R5)    ;REMEMBER STACK POINTER                      
         $PUSH     R5              ;YES, SAVE PTR                               
         MOV       #LINPOOL,R0     ;ALLOCATE SPACE REC. BUFFER                  
         JSR       PC,$ALOCW                                                    
         MOV       (SP),R5         ;RESET PTR                                   
         MOV       R1,PREC(R5)     ;SET PTR DATA BUFFER                         
         CLR       STAT(R5)        ;STATE=0                                     
;NOW TRY TO CONNECT                                                             
;                                                                               
         MOV       PICP(R5),R0     ;PTR CCT                                     
         $N.CON                    ;CONNECT PRIMITIVE                           
DTFTP1:  $WAIT                     ;WAIT FOR COMPLETION                         
         MOV       (SP),R5                                                      
         MOV       PICP(R5),R0     ;TEST COMPLETION                             
         BPL       DTFTP1          ;NOT DONE                                    
         BITB      #37,CCTCC(R0)    ;CHECK IF OK                                
         BEQ       DTMAIN          ;YES                                         
         JSR       PC,DTCLS        ;NO, CLOSE CONN. AND REPORT FAILURE          
         MOV       #1,FLAGN(R5)    ;SET FLAG                                    
;POST TNFTP                                                                     
         $POST     #$TNPCT+2,#RDY+ACK                                           
         MOV       (SP),R5
         JMP       DTFRZ
;                                                                               
;WE CAN NOW ENTER THE MAIN PROCESSING LOOP (RECEIVING DATEA )                   
;                                                                               
DTMAIN:  MOV       PICP(R5),R0     ;PTR CCT                                     
         MOV       PREC(R5),R4     ;PTR DATA BUFFER                             
         MOV       #LINLEN*10,R3   ;BIT COUNT                                   
         $N.RCV                    ;REC. PRIMITIVE                              
         MOV       (SP),R5         ;RESET PTR                                   
         JMP       DTMON           ;WAIT FOR COMPLETION                         
;                                                                               
;DTMON RETURNS WITH THE BUFFER ADR IN R0 AND BYTE COUNT IN R1.                  
;                                                                               
DTPRT:   JSR       PC,$LPLST       ;LIST LINE                                   
         MOV       (SP),R5                                                      
         BR        DTMAIN          ;GET MORE                                    
;***********************************************************************        
;                                                                               
;DTCLS:  CLOSES THE DATA CONNECTION                                             
;                                                                               
DTCLS:   $PUSH   R5
         $STIME    1000.
DTCLS2:  $WAIT                     ;WAIT FOR EXPIRE
         BIT       #TIM,-(R4)
         BEQ       DTCLS2
         MOV       (SP),R5
         MOV       PICP(R5),R0     ;GET PTR CCT                                 
         $N.CLS                                                                 
DTCLS1:  $WAIT                     ;WAIT FOR COMPLETION                         
         MOV       (SP),R5                                                      
         TSTB      CCTCC(R0)       ;DONE?                                       
         BPL       DTCLS1          ;NO                                          
         $POP      R5
         RTS       PC              ;YES                                         
;***********************************************************************        
;                                                                               
;DTFRZ:  GIVES BACK BUFFER , RESETS STACK AND GOES TO SLEEP                     
;                                                                               
DTFRZ:   MOV       #LINPOOL,R0                                                  
         MOV       PREC(R5),R1     ;BUFFER ADR                                  
         $FREEB                    ;FREE IT                                     
         MOV       (SP),R5                                                      
         MOV       STPTR(R5),SP    ;RESET STACK PTR                             
         CLR       PTEX            ;*******!!!!!*********
         JMP       DTFTP           ;GO TO SLEEP                                 
;                                                                               
;***********************************************************************        
;                                                                               
;DTMON:  MONITOR ROUTINE WHICH CHECKS THE SEND COMPLETION AND                   
;MESSAGE FROM TNFTP                                                             
;                                                                               
DTMON:   MOV       PICP(R5),R0     ;REC CCT                                     
         TSTB      CCTCC(R0)       ;DONE                                        
         BEQ       DTMO1           ;NO, CHECK SIGNAL FROM DTFTP                 
         BITB      #37,CCTCC(R0)   ;YES, SEE IF CLOSED                          
         BNE       ERCLS           ;YES                                         
         $N.CNT                    ;YES, COUNT                                  
         MOV       (SP),R5
         ASR       R3              ;CONVERT BITS TO BYTES                       
         ASR       R3                                                           
         ASR       R3                                                           
         MOV       #LINLEN,R1                                                   
         SUB       R3,R1           ;GET NO OF BYTES REC.                        
         $PUSH     R1              ;SAVE                                        
;                                                                               
;WE NOW HAVE TO CHECK STATE. IF 0 THENREPORT AND SET STATE = 1                  
;                                                                               
         TST       STAT(R5)        ;CHECK STATE                                 
         BNE       DTMO2           ;IF 0, REPORT 'FILE TRANSFER STARTED'        
         INC       STAT(R5)        ;STAT=1                                      
         MOVB       #2,FLAGN(R5)    ;SET FLAG                                    
         $POST     #$TNPCT+2,#RDY+ACK ;POST TNFTP                               
DTMO2:   $POP      R1              ;RESET BYTE COUNT                            
         MOV       (SP),R5                                                      
         MOV       PREC(R5),R0     ;SET PARAMETERS FOR REC (LIST)               
         JMP       DTPRT           ;BACK TO PTINT                               
;                                                                               
;DTMO1:  CHECK IF SIGNALLED FROM DTFTP                                          
;                                                                               
DTMO1:   TST       FLAGTD(R5)      ;TEST IF 0                                   
         BNE       DTDEL           ;NO, SIGNALLED                               
         $WAIT                     ;WAIT FOR POST                               
         MOV       (SP),R5                                                      
         BR        DTMON           ;BACK TO CHECK                               
;                                                                               
;***********************************************************************        
;                                                                               
;ERCLS:  CONNECTION CLOSED, REPORT SUCCESS                                      
;                                                                               
ERCLS:   JSR       PC,DTCLS        ;CLOSE CONNS                                 
         MOV       #5,FLAGN(R5)    ;REPORT                                      
         $POST     #$TNPCT+2,#RDY+ACK ;POST TNFTP                               
         MOV       (SP),R5                                                      
         JMP       DTFRZ           ;GO TO SLEEP                                 
;                                                                               
;***********************************************************************        
;                                                                               
;DTDEL:  SIGNALLED FROM TNFTP, CLOSE AND REPORT                                 
;                                                                               
DTDEL:   JSR       PC,DTCLS        ;CLOSE CONNS                                 
         MOV       #4,FLAGN(R5)    ;REPORT                                      
         $POST     #$TNPCT+2,#RDY+ACK ;POST TNFTP                               
         MOV       (SP),R5                                                      
         JMP       DTFRZ           ;GO TO SLEEP                                 
;                                                                               
;***********************************************************************        
         .END                                                                   
                                                                                                                                                                                                                                                                                                                                                                                         
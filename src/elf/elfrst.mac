	TITLE ELFRST	ELF RESTORE

	PRINTX	FILE PRSV REQUIRED

	MOVEI	1,400000	;ENABLE MYSELF
	RPCAP
	MOVE	3,2
	EPCAP
getjfn:	hrroi	1,[ asciz /
Input file: /]
	psout
	movsi	1,160003
	move	2,[ xwd 100,101 ]
	gtjfn
	jrst	[ cain	1,600115
		  jrst	dflt
		  jrst	getjfn ]
	jrst	opnfil
DFLT:	HRLZI	1,100001	;GET READY TO SPEW THIS FILE
	HRROI	2,[ASCIZ/<VOICE>CARTRIDGE.BAK/]
	GTJFN
	JRST	WAIT1		;WAIT UNTIL THERE IS A FILE TO SEND
opnfil:	MOVEM	1,FILJFN
	MOVE	2,[XWD 110000,201000]	;OPEN 9-BIT BYTES, WAIT IF BUSY
	OPENF
	JSR	ERROR		;WONT OPEN, SAY WHY
	HRLZI	1,100001	;SET UP SOCKET TO LISTEN FOR STUFF
	HRROI	2,[ASCIZ/NET:.26-3002;T/]
	GTJFN
	JSR	ERROR
	MOVEM	1,SKTJFN
	MOVE	2,[XWD 102400,100000]	;OPEN 8-BIT BYTES, BUFFERED SEND
	OPENF
	JSR	ERROR
	HRROI	1,[ASCIZ /
Restore started.
/]
	PSOUT
	DTACH			;Release tty
LOOP:
	MOVE	1,FILJFN	;GET THAT BYTE
	BIN
	JUMPE	2,CHKJFN	;IS IT NULL?
LOOP2:
	MOVE	1,SKTJFN	;NO, STUFF THAT BYTE
	BOUT
	JRST	LOOP		;GET THE NEXT BYTE
CHKJFN:
	MOVE	1,FILJFN	;NULL BYTE, SEE IF EOF
	GTSTS
	TLNN	2,1000
	JRST	[SETZ	2,2	;NOT EOF, STUFF THE BYTE
		JRST	LOOP2]
	MOVE	1,SKTJFN	;EOF, TRANSFER DONE
	MOVEI	2,21		;DUMP THE BUFFER
	MTOPR
	MOVE	1,SKTJFN	;AND CLOSE THE CONNECTION
	HRLI	1,200000	;BE SURE IT CLOSES BEFORE REOPENING
	CLOSF
	JSR	ERROR		;CURIOUS
	PRINT	<FILE TRANSFER COMPLETED>
	HALTF
	JRST	START
ERROR:
	JFCL			;HOLDS ADDRESS
	PRINT	<ELF-RESTORE: AT LOC >
	MOVEI	1,101
	HRRZ	2,ERROR
	MOVE	3,[XWD 7,10]
	NOUT
	JFCL
	QPASA
WAIT1:
	SKIPA	1,[^D300000]
WAIT2:
	MOVE	1,[^D30000]	;GO AWAY TO LET ERROR CLEAR ITSELF
	DISMS
	JRST	START		;DONE

	LIT

SKTJFN:	0
FILJFN:	0
NAMSTG:	BLOCK 10
LPTNAM:	BLOCK 10

	END	STARTî
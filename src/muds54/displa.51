TITLE DISPLAY FOR MUDDLE	(BKD)

RELOCATABLE

;MUST ASSEMBLE WITH MIDASD (E&S)
J3D==4000
SP==3
JMP==100,,
LI=0      
DSP==6     
JMPPSH==60100,,  
PEEL==22,,    
SKCL==360020,,    
SAVELB=0  
LOCLSA==302000,,  
VIEW==15    
SETPTA==462000,,  
RTCLA==340020,,   
WINDRT==5  
SAVE==14    
LOMDIR==307001,,  
LIPSH==40000,,   
DIR==12     
J3D     
LOMM==304000,,    
IF1 [ ESSP==SP ]

O==0

.INSRT MUDDLE >

.GLOBAL DISXTR,DISOPN,DISROP,DISCLS,DCHAR,DISLNL,DISPGL

.GLOBAL CAFRE,CAFRET,CHRWRD,DISINF,DIRECT

.GLOBAL BADCHN,WRONGD,CHNCLS,IGVAL,SAT



DEFINE INCR ARG
	MOVEM	E,ARG(B)
	ARG==ARG+1
TERMIN

WIDTH==50000.
HEIGHT==50000.
DISLNL==72.
DISPGL==40.
XSIZ==7
YSIZ==9
XTTL==<2*WIDTH+DISLNL/2>/DISLNL
YTTL==0.
XSPC==XTTL
YSPC==<2*HEIGHT+DISPGL/2>/DISPGL
STEP==<XTTL*2/3+XSIZ/2>/XSIZ

;TOP LEFT HAND CORNER OF SCREEN WHERE PRINTING STARTS
TOPLFT:	-WIDTH+STEP*<XSIZ+1>/2,,HEIGHT-STEP*<YSIZ+1>/2
;STORAGE MANAGEMENT

MFUNCTION STORE,SUBR

	ENTRY	1
	GETYP	A,(AB)
	PUSHJ	P,SAT
	CAIE	A,SNWORD	;MUST BE OF STORAGE TYPE UVECTOR
	CAIN	A,SSTORE	;OR STORAGE
	SKIPA
	JRST	WTYP1
	HLRE	B,(AB)+1	;GET THE COUNT
	MOVMS	B
	ADD	B,(AB)+1	;POINT AT FIRST DOPE WORD
	GETYP	A,(B)		;GET THE UTYPE
	PUSHJ	P,SAT
	CAIE	A,S1WORD	;ONLY UNMARKED GOODIES CAN BE COPIED
	JRST	BADUTP
	HLRE	A,(AB)+1	;REGOBBLE THE LENGTH
	MOVMS	A
	PUSHJ	P,CAFRE
	PUSH	P,A		;SAVE POINTER
	HRL	A,(AB)+1	;BUILD BLT POINTER
	HLRE	B,(AB)+1
	MOVMS	B
	ADDI	B,(A)+1
	BLT	A,(B)		;COPY
	EXCH	B,(P)	; NEED POINTER TO END
	HRRM	B,@(P)	; PUTS POINTER TO START IN SECOND DOPE WORD.
	HLL	B,(AB)+1
	MOVSI	A,TSTORAGE
	JRST	FINIS


MFUNCTION MFREE,SUBR,[FREE]
	ENTRY	1
	GETYP	A,(AB)
	PUSHJ	P,SAT
	CAIE	A,SSTORE	;MUST BE SPECIAL AFREE STORAGE
	JRST	WTYP1
	MOVE	B,(AB)+1
	PUSHJ	P,FREEIT
	MOVE	A,(AB)		;RETURN EMPTY VERSION OF ARGUMENT
	MOVEI	B,0
	JRST	FINIS


FREEIT:	HLRE	A,B		;GET COUNT FIELD
	MOVEI	B,(B)		;CLEAR LEFT HALF
	SUB	B,A		;POINT TO DOPE WORD
	HLRZ	A,1(B)		;GET LENGTH FIELD FROM THERE
	SUBI	B,(A)-2		;POINT TO TOP
	SUBI	A,2
	PUSHJ	P,CAFRET	;RETURN FREE STORAGE
	POPJ	P,

BADUTP:	PUSH	TP,$TATOM
	PUSH	TP,EQUOTE DATA-CANT-BE-STORED
	JRST	CALER1
;INITIALIZE DISPLAY FOR OPEN


BUFFER==1700		;BUFFER SIZE FOR CHARACTER OUTPUT
BUFLEV==40		;TOP LEVEL DISPLAY SIZE
STKSIZ==200

IMPURE
DISXTR:
DISFLG:	0		;0  = DISPLAY CLOSED, ELSE ADDRESS OF DISPLAY BUFFER
MESTBL:	0		;ADDRESS OF E&S CHARACTER TABLE (INDIRECT W/CHAR IN A)
PURE

;A CONTAINS SIXBIT DEVICE AND E CONTAINS ASCII DIRECTION
DISOPN:	SKIPE	DISFLG		;DO WE HAVE THE DISPLAY ?
	POPJ	P,		;YES, CAN'T OPEN AGAIN
	.DSTART	[[JMP $.]]	;NO, ATTEMPT TO GOBBLE IT
	POPJ	P,		;NOT AVAILABLE, LOSE
	CAIN	A,(SIXBIT /E&S/)
	POPJ	P,		;BAD DEVICE
	CAME	E,[ASCII /DISPL/+1]
	CAMN	E,[ASCII /PRINT/]
	SKIPA			;ASKED FOR GOOD DIRECTION, SKIP AND CONTINE
	POPJ	P,		;CAN'T READ FROM SIMPLE DISPLAY, LOSE

	PUSH	P,E		;SAVE THE DIRECTION
	SKIPE	MESTBL		;E&S CHARACTER TABLE LOADED ?
	JRST	DIS1			;YES
	PUSH	TP,$TCHSTR
	PUSH	TP,CHQUOTE [MUDSYS;E&S TABLE]
	MCALL	1,FLOAD
	MOVE	B,MQUOTE MESTBL,[MESTBL]MUDDLE
	PUSHJ	P,IGVAL
	HRLI	B,A		;MAKE INDEX ON A
	MOVEM	B,MESTBL	;CAN INDIRECT THROUGH MESTBL
	CAMN	A,$TPICTURE
	JUMPN	B,DIS1		;GOOD E&S CHARACTER TABLE WAS LOADED
	SETZM	MESTBL
	PUSH	TP,$TATOM
	PUSH	TP,EQUOTE BAD-E&S-TABLE
	JRST	CALER1

DIS1:	PUSH	TP,$TFIX	;CALL ON "ISTORAGE"
	PUSH	TP,[STKSIZ]
	MCALL	1,UVECTOR
	PUSH	TP,A
	PUSH	TP,B
	MCALL	1,STORE
	PUSH	P,B		;SAVE THIS AWAY

BUF==0
	HLLI	B,0		;CLEAR LEFT HALF
	MOVE	E,[LI DSP,]
	ADDI	E,BUFLAST(B)
	INCR	BUF
	MOVE	E,[LI ESSP,]
	ADDI	E,STKSIZ(B)
	INCR	BUF
	MOVE	E,[JMPPSH INITD]
	INCR	BUF
	MOVE	E,[JMPPSH [PEEL]]
	INCR	BUF
	MOVE	E,[JMP]
	ADDI	E,BUF(B)-1
	INCR	BUF
BUFLAST==BUF

	.DSTART	B
	.VALUE			;SHOULD NEVER GET HERE

	MOVEI	A,BUFFER
	MOVE	E,(P)-1		;REGOBBLE DIRECTION
	CAME	E,[ASCII /PRINT/]
	MOVEI	A,BUFLEV
	PUSH	TP,$TFIX	;CALL ON "ISTORAGE"
	PUSH	TP,A
	MCALL	1,UVECTOR
	PUSH	TP,A
	PUSH	TP,B
	MCALL	1,STORE
	MOVE	O,B		;COPY POINTER
	MOVE	E,(P)-1		;REGOBBLE DIRECTION
	CAME	E,[ASCII /PRINT/]
	JRST	NOTPRT

NUM==0
	MOVE	E,[SKCL SAVELB,(6)]
	INCR	NUM
	MOVE	E,[LOCLSA VIEW,VW(2)]
	INCR	NUM
	MOVE	E,[SETPTA TOPLFT]
	INCR	NUM
	MOVE	E,[JMPPSH]
	ADDI	E,(B)+NUMLAST	;ADDRESS OF REAL CHARACTERS
	INCR	NUM
	MOVE	E,[RTCLA WINDRT,(6)]
	INCR	NUM
	MOVE	E,[PEEL]
	INCR	NUM
	ADD	B,[NUM,,NUM]
	JRST	BOTH
NUMLAST==NUM
NOTPRT:
BOTH:	MOVE	E,[PEEL]
	ADDI	E,(B)		;MARK THE PEEL INSTRUCTION WITH ITS CURRENT ADDRESS
	MOVEM	E,(B)
	MOVE	E,(P)		;REGOBBLE POINTER TO DISPLAY LOOP
	HRRM	O,BUFLAST(E)-2	;START THIS CROCK GOING
	POP	P,DISFLG	;SET DISPLAY FLAG
	SUB	P,[1,,1]
	MOVSI	C,TFIX
	MOVEI	D,0
	AOS	(P)		;SKIP RETURN FOR SUCCESSFUL OPEN
	POPJ	P,



DISROP:	HRRZ	O,DISFLG	; ATTEMPT TO RESTART DISPLAY
	AOS	(P)		;ASSUME SUCCESS
	.DSTART	O
	SOS	(P)		;DISPLAY BUSY, UNDO ASSUMPTION OF SUCCESS
	POPJ	P,
INITD:	LOCLSA SAVE,ESPRAM(3)
	LOMDIR [1143,,0]
	LIPSH DIR,J3D
	LOMM MAT(4)
	PEEL

VW:	3777,,3777
	WIDTH,,HEIGHT


ESPRAM:	0
	3777,,3777
	50000.,,50000.	; Window

MAT:	377777,,0
	0,,0
	0,,377777
	0,,0
	0,,0
	377777,,377777
	0,,0
	0,,0
;ROUTINE TO CLOSE A DISPLAY CHANNEL

DISCLS:	MOVE	A,(AB)+1	;GET POINTER TO CHANNEL
	GETYP	O,DISINF-1(A)
	CAIE	O,TSTORAGE	;DOES THIS CHANNEL HAVE AFREE STORAGE BUFFER
	POPJ	P,		;NO, IGNORE
	SKIPN	B,DISINF(A)
	POPJ	P,		;CHANNEL NOT REALLY DISPLAYING
	SETZM	DISINF(A)
	PUSHJ	P,FREEIT	;RETURN TO FREE STORAGE
	SKIPN	B,DISFLG
	POPJ	P,		;DISPLAY NOT REALLY OPEN
	.DCLOSE
	PUSHJ	P,FREEIT	;RETURN STACKS TO FREE STORAGE
	SETZM	DISFLG
	POPJ	P,
;ROUTINE FOR SIMPLE CHARACTER OUTPUT TO THE DISPLAY

DCHAR:	PUSH	P,D
	PUSH	P,C
	MOVE	D,DISINF(B)	;FREE SPACE POINTER
	CAIN	A,14		;FORM FEED?
	JRST	CLRBUF		;GO CLEAR AND RESET THE BUFFER
	AOBJP	D,RETBC		;INCREMENT THE BUFFER COUNT
				;IF NO MORE ROOM IN BUFFER, JUST GO AWAY
	MOVE	C,(D)-1		;SHIFT LAST E&S INSTRUCTION DOWN
	MOVEM	C,(D)
	MOVE	C,@MESTBL	;INSERT PROPER CHARACTER DRAWING INSTRUCTION
	MOVEM	C,(D)-1
	MOVEM	D,DISINF(B)
RETBC:	POP	P,C		;RESTORE AND RETURN
	POP	P,D
	POPJ	P,



CLRBUF:	MOVE	C,(D)		;PUT E&S PEEL INSTRUCTION JUST BELOW INITIALIZATION CODE
	MOVEM	C,(C)
	SUBI	D,(C)		;NUMBER OF NEWLY FREE WORDS
	HRLI	D,(D)		;NUMBER OF FREE WORDS TO LEFT HALF
	MOVE	C,DISINF(B)	;REPAIR THE POINTER TO FREE SPACE
	SUB	C,D
	MOVEM	C,DISINF(B)	;REPLACE CORRECTED POINTER
	JRST	RETBC

;SUBRS FOR PICTURE DISPLAY

;CALLING SEQUENCE:		<DISPLAY -CHANNEL- -PICTURE- >

MFUNCTION DISPLAY,SUBR
	ENTRY	2
	GETYP	A,(AB)+2
	CAIE	A,TPICTURE	;SECOND ARG MUST BE PICTURE TO BE DISPLAYED
	JRST	WTYP2
	GETYP	A,(AB)
	CAIE	A,TCHAN		;FIRST ARG IS CHANNEL
	JRST	WTYP1
	MOVE	B,(AB)+1	;GET POINTER TO CHANNEL
	MOVEI	B,DIRECT-1(B)	;POINTER TO DIRECTION STRING
	PUSHJ	P,CHRWRD
	JFCL
	CAME	B,[ASCII /DISPL/ +1]	;SHOULD BE DISPLAY DIRECTION
	JRST	WRONGD		;IF NOT ERROR
	MOVE	B,(AB)+1	;REGOBBLE CHANNEL POINTER
	GETYP	A,DISINF-1(B)
	CAIE	A,TSTORAGE
	JRST	WRONGD		;DOESN'T LOOK LIKE A DISPLAY-FLAVOR CHANNEL
	MOVE	A,DISINF(B)
	MOVE	C,(A)		;GET LAST INSTRUCTION
	AOBJN	A,.+2
	JRST	FULL
	MOVEM	C,(A)		;MOVE THE INSTRUCTION DOWN
	MOVE	C,(AB)+3	;ADDRESS OF THE PICTURE
	HRLI	C,(JMPPSH)
	MOVEM	C,(A)-1		;INSERT INTO DISPLAY BUFFER
	MOVEM	A,DISINF(B)
	MOVE	A,(AB)+2
	MOVE	B,(AB)+3
	JRST	FINIS


FULL:	PUSH	TP,$TATOM
	PUSH	TP,EQUOTE DISPLAY-FULL
	JRST	CALER1
;SUBR TO CLEAR THE DISPLAY

;CALLING SEQUENCE:		<ERASE -CHANNEL- -PICTURE- >

MFUNCTION ERASE,SUBR
	ENTRY
	JUMPGE	AB,TFA
	CAMGE	AB,[-4,,0]	;ONE OR TWO ARGS ALLOWED
	JRST	TMA
	GETYP	A,(AB)
	CAIE	A,TCHAN		;ARGUMENT MUST BE A CHANNEL
	JRST	WTYP1
	MOVE	B,(AB)+1	;POINTER TO CHANNEL
	GETYP	A,DISINF-1(B)
	CAIE	A,TSTORAGE
	JRST	WRONGD		;THIS DOES NOT LOOK LIKE A DISPLAY-FLAVOR CHANNEL
	MOVE	A,DISINF(B)	;GET A POINTER TO THE BUFFER
	CAMGE	AB,[-2,,0]	;ONE ARG ONLY ?
	JRST	ERASE2		;NO, GO ERASE SPECIFIC PICTURE
	MOVE	C,(A)		;GET THE LAST INSTRUCTION
	MOVEM	C,(C)		;PUT IT BACK WHERE IT STARTED
	SUBI	A,(C)		;NUMBER OF NEWLY FREE WORDS
	HRLS	A
	MOVE	C,DISINF(B)
	SUB	C,A		;FIX UP POINTER TO FREE SPACE
	MOVEM	C,DISINF(B)
ERASE0:	MOVE	A,(AB)
	MOVE	B,(AB)+1
	JRST	FINIS


ERASE2:	GETYP	C,(AB)+2	;SECOND ARG BETTER BE A PICTURE
	CAIE	C,TPICTUR
	JRST	WTYP2
	MOVE	C,(AB)+3	;GET PICTURE ADDRESS
	HRLI	C,(JMPPSH)	;WHAT WE WILL FIND IN THE BUFFER
	HRRZ	D,(A)		;SEARCH START
ERASEL:	CAIL	D,(A)		;FINISHED ?
	JRST	NOTFND		;YES, NOT FOUND
	CAME	C,(D)		;FOUND IT ?
	AOJA	D,ERASEL	;NO, CONTINUE LOOKING
	MOVE	C,(A)-1		;GET LAST PICTURE CALL
	MOVEM	C,(D)		;LAST PICTURE REPLACES FOUND ONE
	POP	A,-1(A)		;WRITES PEEL OVER LAST ENTRY
	MOVEM	A,DISINF(B)	;PUTS DECREMENTED PTR IN CHAN
	JRST	ERASE0

NOTFND:	PUSH	TP,$TATOM
	PUSH	TP,EQUOTE PICTURE-NOT-FOUND
	JRST	CALER1


END

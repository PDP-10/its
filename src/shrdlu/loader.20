;;;   THIS IS A PACKAGE FOR LOADING SHRDLU'S INTO CORE FROM THE DISK FILES.
;;;    THE PROCEDURE IS TO FIRST LOAD A BLISP (IGNORE ALLOCATIONS, THE 
;;;    PROGRAMS DO THEIR OWN). AND UREAD THIS FILE. EXECUTING "LOADSHRDLU"
;;;    WILL GENERATE (AFTER SOME TIME) A FULLY INTERPRETED VERSION. 
;;;    PARTIALLY COMPILED MIXES ARE AVAILLABLE, AS SEEN BELOW.
;;;    THE VARIABLE "VERSION-FILES" KEEPS A RUNNING TAB OF THE FILES
;;;    LOADER VIA "LOADER". IF ANY ERRORS OCCUR DURING READIN THEY
;;;    ARE PROTECTED BY AN "ERRSET" AND LOADING CONTINUES. (NOTE !! IF AN
;;;    UNBOUND PAREN CAUSES THE FILE TO BE TERMINATED TOO SOON, YOU'LL
;;;    NEVER NOTICE)
;;;

(setsyntax 34. 'single 34.)

(SETQ GC-OVERFLOW '(LAMBDA (X) T)) 

(defun MAKOBLIST (x)
  (cond ((null x)
         (LISTARRAY obarray (- (cadr (arraydims 'obarray)) 129.)))
        (t 
         (*ARRAY x 'OBARRAY))))
                        
(defun ioc fexpr (x)
  (cond 
        ((eq (car x) 'c) (setq ^d nil))
        ((eq (car x) 'd) (setq ^d t))
        ((eq (car x) 'q) (setq ^q t))
        ((eq (car x) 's) (setq ^q nil))
        ((eq (car x) 't) (setq ^r nil))
        ((eq (car x) 'v) (setq ^w nil))
        ((eq (car x) 'r) (setq ^r t))
        ((eq (car x) 'w) (progn (setq ^w t) (clear-output t)))
        ((eq (car x) 'g) (tyo 7))		; ring the bell
        (t (break (eval (car x))))))

(SETQ *RSET T) 

(DEFUN LOADER (*!?KEY) 
       (OR (ERRSET (EVAL (LIST 'UREAD
			       *!?KEY
			       '>
			       'DSK
			       'SHRDLU))
		   NIL)
	   (AND (PRINT *!?KEY)
		(PRINC 'NOT-FOUND)
		(RETURN NIL)))
       (LOADX)) 

(DEFUN LOADX NIL 
       (PROG (*!?H *!?F *!?EOF) 
	     (SETQ *!?EOF (GENSYM))
	     (PRINT 'READING)
	     (PRINC *!?KEY)
	     (SETQ VERSION-FILES (CONS (STATUS UREAD) VERSION-FILES))
	LOOP ((LAMBDA (^Q) (SETQ *!?H (READ *!?EOF))) T)
	     (AND (EQ *!?H *!?EOF) (RETURN T))
	     (OR (ERRSET ((LAMBDA (^W ^Q) (EVAL *!?H)) T T))
		 (PROG2 (PRINT 'ERROR-IN-FILE) (PRINT *!?H)))
	     (GO LOOP)))

(DEFUN FLOAD FEXPR (SPECS)
   (TERPRI)
   (PRINC (CAR SPECS))
   (princ '/ )
   (PRINC (CADR SPECS))
   (OR (ERRSET (APPLY 'FASLOAD SPECS))
       (ERT lossage in loading - try again ?))
   )
 

(SETQ VERSION-FILES NIL) 

(defun loadplanner ()
       (ALLOC '(LIST 320000
		FIXNUM 15000
		SYMBOL 15000
		array 500
		flonum 4000))
       (SETQ PURE NIL)
       (setq car t)
       (setq cdr t)
       (SETQ THINF NIL THTREE NIL THLEVEL NIL)
       (MAPC 'LOADER '(PLNR THTRAC))
       (THINIT))

(DEFUN LOADSHRDLU NIL 
       (ALLOC '(LIST 320000
		     FIXNUM
		     15000
		     SYMBOL
		      15000
                     array 500
		     flonum 3000))
       (SETQ PURE NIL)
       (setq car t)
       (setq cdr t)
       (SETQ THINF NIL THTREE NIL THLEVEL NIL)
       (load '((lisp) slave fasl))
       (MAPC 'LOADER '(PLNR THTRAC))
       (THINIT)
       (setq errlist nil)   ;removes micro-planner's fangs
       (MAPC 'LOADER '(SYSCOM MORPHO SHOW))
       (MAPC 'LOADER '(PROGMR GINTER GRAMAR DICTIO))
       (MAPC 'LOADER '(SMSPEC SMASS SMUTIL))
       (LOADER 'NEWANS)
       (load 'blockp)
       (load 'blockl)
       (load 'data)
       (load '((lisp) trace fasl))
       (load '((shrdlu) graphf fasl))
       (LOADER 'SETUP)
       (load '((lisp) grinde fasl))
       'CONSTRUCTION/ COMPLETED) 

(defun loadparser nil
	(mapc 'loader '(syscom morpho show))
	(mapc 'loader '(progmr ginter gramar dictio))
	(loader 'setup)
	(load parser > dsk shrdlu)		;load is defined on ddm;*load >
	'complete-call-setup-num-date)

(DEFUN PARSER-compiled NIL 
	(SETQ PURE NIL)
	(FLOAD FASL SYSCOM DSK SHRDLU)
	(FLOAD FASL MORPHO DSK SHRDLU)
	(FLOAD FASL SHOW DSK SHRDLU)
	;;;
	(FLOAD FASL PROGMR DSK SHRDLU)
	(FLOAD FASL GRAMAR DSK SHRDLU)
	(LOADER 'DICTIO)
	;;;
	(FLOAD TRACE FASL COM COM)
	(FLOAD FASL SETUP DSK SHRDLU)
	;;;
	(load parser > dsk shrdlu)
	'PARSER-LOADED)



(DEFUN SHRDLU-COMPILED ()
(SETQ PURE NIL)
(FLOAD FASL SYSCOM  DSK SHRDLU)
(FLOAD FASL MORPHO DSK SHRDLU)
(FLOAD FASL SHOW DSK SHRDLU)
;;
(FLOAD FASL PROGMR DSK SHRDLU)
(FLOAD FASL gRAMar  DSK SHRDLU)
(LOADER 'DICTIO)
;;
(FLOAD FASL SMSPEC DSK SHRDLU)
(FLOAD FASL SMASS DSK SHRDLU)
(FLOAD FASL SMUTIL DSK SHRDLU)
;;
(FLOAD FASL NEWANS DSK SHRDLU)
;;
(FLOAD FASL PLNR DSK SHRDLU)
(LOADER 'THTRAC)
(THINIT)
(SETQ THINF NIL THTREE NIL THLEVEL NIL)
(setq errlist nil)
(FLOAD FASL BLOCKL DSK SHRDLU)
(LOADER 'BLOCKP)
(LOADER 'DATA)
;;
(FLOAD GRAPHF FASL DSK SHRDLU)
(FLOAD TRACE FASL COM COM)
(FLOAD FASL SETUP DSK SHRDLU)
'COMPLETED)

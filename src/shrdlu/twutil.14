(*RSET T)
(DEFUN BARF ()
(LABELTRACE CLAUSE NG PREPG ADJG VG CONJOIN)
(SETQ LABELTRACE T NOSTOP T BUILD-SEE T PARSENODE-SEE T PLANNERSEE 'NOSTOP)
(OR(GET 'TRACE 'FEXPR)(LOADFL TRACE > DSK COMLAP))
(TRACE PARSE CALLSM )
(THTRACE THEOREM THGOAL)
(UWRITE DSK SHRDLU)
(IOC R))

(DEFUN UNBARF()
(SETQ LABELTRACE NIL PARSENODE-SEE NIL BUILD-SEE NIL PLANNERSEE NIL)
(UNTRACE PARSE CALLSM)
(THUNTRACE)
(UFILE BARF >))




(DEFUN BLINK(X)
(PRINT 'BLINK)(PRINC X))

(DEFUN MOVETO (X Y Z)
(PRINT 'MOVETO)(PRINC (LIST X Y Z)))


(DEFUN GRASP (X)(PRINT 'GRASP)(PRINC X))


(DEFUN UNGRASP()(PRINT 'UNGRASP))

(DEFUN GB FEXPR(A)
(MAPC '(LAMBDA(X)
(APPLY 'GRINDEF (COND((GET X 'BREXPR)(LIST '(BREXPR) X))((GET X 'THEOREM)(LIST '(THEOREM) X))((GET X 'INTERPRET)(LIST '(INTERPRET) X))((LIST X)))))A))

(DEFUN LB FEXPR(A)(SETQ LABELBREAK(APPEND A LABELBREAK)))


(DEFUN FORGET()())


(DEFUN PDA NIL 
 (PROG (X) 
  (SETQ X (CAR (SM ANSWER)))
  (DISP
   (SETQ
    FOO
    (PLNR-DESCRIBE (CONS X
			 (RELATIONS? (COND ((REL? X))
					   (T (TERPRI)
					      (SPRINT (RELATIONS? X)
						      LINEL
						      0)
					      (PRINT 'REL?)
					      (PUTPROP X
						       (READ)
						       'REL=)))))
		   (VARIABLE? (REL? X))
		   (LIST (VARIABLE? (REL? X))))))
T (RETURN T)))

(DEFUN DC NIL (DP (CAR C)))


(DEFUN DSA NIL (DP (CAR (SM ANSWER))))

(DEFUN T FEXPR (A) (ERT T???))

(DEFUN RPT '(/,NUM /,ITEM)
(COND((NOT(NUMBERP /,NUM))(ERT RPT))
((MINUSP /,NUM)(ERT RPT))
((ZEROP /,NUM)NIL)
((CONS (EVAL /,ITEM )(RPT (SUB1 /,NUM) /,ITEM)))))

(DEFUN P FEXPR (A)
(RETURN(SETQ RESULT(PRINT (RPT (COND((CDR A)(CADR A))(1))'(MAKESYM (CAR A)))))))



 

(DEFPROP W WBREAK FEXPR)

(DEFUN DEFINE FEXPR(X)
(PROG(FEATURES TYPE MARKERS RESTRICTIONS PROCEDURE DEFINITIONS N)
(SETQ N 0)
(PRINT 'FEATURES)
(TAB 17)
(SETQ FEATURES (READ))
(COND((MEMQ 'NOUN FEATURES)(SETQ TYPE 'NOUN))
((MEMQ 'VB FEATURES)(SETQ TYPE 'VB))
(T(RETURN 'USE-MORE-COMPLETE-DEFINITION-METHOD)))
(PRINT 'SEMANTICS:)
GO
(TAB 5)
(PRINC 'DEFINITION/ )
(PRINC (SETQ N(ADD1 N)))
(TERPRI)
(TAB 11)
(PRINC  'MARKERS:)
(TAB 31)
(SETQ MARKERS (READ))
(TERPRI)
(COND((EQ TYPE 'VB)
(TAB 11)
(PRINC 'RESTRICTIONS:)
(TAB 31)
(SETQ RESTRICTIONS(READ))
(TERPRI)))
(TAB 11)
(PRINC 'PROCEDURE:)
(TAB 31)
(SETQ PROCEDURE(READ))
(SETQ DEFINITIONS (CONS(APPEND (AND RESTRICTIONS (LIST 'RESTRICTIONS: RESTRICTIONS))(LIST 'MARKERS: MARKERS 'PROCEDURE: PROCEDURE))DEFINITIONS))
(TERPRI)
(PRINT 'MORE?)
(AND(EQ(READCH)'Y)(GO GO))
(PUTPROP(CAR X) FEATURES 'FEATURES)
(PUTPROP(CAR X)(COND((EQ TYPE 'NOUN)(LIST(LIST 'NOUN(CONS 'OBJECT DEFINITIONS))))
(T(LIST(LIST 'VB (LIST(LIST(CAR(OR(MEET '(TRANS ITRNS TRANSL ITRNSL TRANS2 INT)FEATURES)
(AND (PRINT 'NO-TRANSITIVITY-FEATURE-ON-VERB)(ERR NIL))))(CONS 'RELATION DEFINITIONS)))))))
'SEMANTICS)
(RETURN T)))


(DEFUN DA (X)
(AND (GET X 'THASSERTION)(DISP (APPLY 'APPEND(MAPCAR 'CDDR (APPLY 'APPEND(MAPCAR 'CDR (CDR(GET X 'THASSERTION)))))))))


(DEFUN TELLABLE FEXPR(X)
(PUTPROP(CAR X) T 'TELLABLE)
(PUTPROP (CAR X) '((2 '((THTBF THTRUE)))(3'((THTBF THTRUE)))(3 '((THTBF THTRUE)))) 'THMLIST)
(CAR X))


(DEFUN DG
       FEXPR
       (A)
       (COND ((NULL A) (DG GRAM))
	     ((CDR A)
	      (SETQ GRAMUNIT
		    (SETQ GRAM (GET (CAR A) (QUOTE INTERPRET))))
	      (DGP (SETQ GRAM (MEMQ (CADR A) GRAM))))
	     ((NUMBERP (CAR A))
	      (DO I
		  0
		  (ADD1 I)
		  (EQUAL I (CAR A))
		  (AND GRAM (SETQ GRAM (CDR GRAM))))
	      (DGP GRAM))
	     ((SETQ GRAM (GET (CAR A) (QUOTE INTERPRET)))
	      (DGP (SETQ GRAMUNIT GRAM)))
	     ((SETQ GRAM (MEMQ (CAR A) GRAMUNIT)) (DGP GRAM))
	     (T (QUOTE TAG-NOT-FOUND))))

(DEFUN DGP
       (X)
       (TYO 14)
       (MAPC (QUOTE (LAMBDA (X Y) (OR (EQ (CAR X) (QUOTE PASSING))
				      (TERPRI)
				      (SPRINT X LINEL 0))))
	     X
	     (QUOTE (A A A A A A A A A A)))
       (TERPRI)
       T)
  ; "Modified by TT, 15-19th April, 1975.
     New features:
     1. Remove old breakpoints.
     2. Remove old symbols.
     3. RSUBR-ENTRIES  breakable."

<PACKAGE "RDB">

<ENTRY RFREEZE RBREAK ADR>

<DEFINE GOOD-SQUOZE (STR) #DECL ((STR VALUE) STRING)
    <MAPF ,STRING
	  <FUNCTION (X) #DECL ((X) CHARACTER)
		<COND (<MEMQ .X "%$.0123456789">)
		      (<AND <G=? <ASCII .X> <ASCII !"A>>
			    <L=? <ASCII .X> <ASCII !"Z>>>)
		      (<AND <G=? <ASCII .X> <ASCII !"a>>
			    <L=? <ASCII .X> <ASCII !"z>>>)
		      (T <MAPRET>)>
		.X>
	  .STR>>

   ; "Brief explaination of associations used:
      object______         indicator_________  meaning if non-false____________________
      atom of rsubr  RFREEZE    code = oldcode
      rsubr          RFREEZE    fix = absolute position of beginning of rsubr
      atom of rsubr  RBREAK     list of r/re that has break points
      rsubr/re       RBREAK     fix = absolute location where break point is set"

<DEFINE RUNBREAK (ratom "AUX" break)
#DECL ((ratom) ATOM (break) <PRIMTYPE LIST>)
   <COND (<SET break <GET .ratom RBREAK>>
          <VALRET
             <STRING "" 
                     !<MAPF ,STRING
                            <FUNCTION (foo "AUX" fix)
                               <COND (<SET fix <GETPROP .foo RBREAK>>
                                      <PUTPROP .foo RBREAK>
                                      <MAPRET <UNPARSE .fix 8> "0B">)
                                     (T
                                      <MAPRET>)>
                               T>
                           .break>
                     ":CONTIN
">>
         <PUTPROP .ratom RBREAK>
         "UNBROKEN")>>

<DEFINE IRFREEZE (atom whoamI?
                  "AUX" xsym num rpos pos code rsubr? rsubr stuff entry ratom oldcode
                        rcpos-or-false)
#DECL ((atom ratom whoamI?) ATOM
       (num pos rpos) FIX
       (code) <<PRIMTYPE UVECTOR> [REST <PRIMTYPE WORD>]>
       (oldcode) <OR FALSE <<PRIMTYPE UVECTOR> [REST <PRIMTYPE WORD>]>>
       (xsym) <OR FALSE <<PRIMTYPE UVECTOR> [REST <PRIMTYPE WORD>]>>
       (rsubr?) <OR ATOM FALSE>
       (rsubr) RSUBR
       (entry) RSUBR-ENTRY
       (name) FRAME)

   <PROG ()
      <COND (<GASSIGNED? .atom>
             <SET stuff ,.atom>)
            (T
             <RETURN <CHTYPE ("No GVAL?" .atom) FALSE>>)>
      <COND (<SET rsubr? <TYPE? .stuff RSUBR>>
             <SET rsubr .stuff>
             <SET ratom .atom>)
            (<TYPE? .stuff RSUBR-ENTRY>
             <SET entry .stuff>
             <COND (<TYPE? <1 .stuff> ATOM>
                    <SET ratom <1 .stuff>>
                    <SET rsubr ,.ratom>)
                   (T
                    <SET rsubr <1 .stuff>>
                    <SET ratom <2 .rsubr>>)>)
            (T
             <RETURN <CHTYPE ("Can't Freeze" .stuff) FALSE>>)>
      <COND (<TYPE? <1 .rsubr> PCODE>
             <RETURN <CHTYPE ("Can't Freeze Pure Code" <1 .rsubr>) FALSE>>)>
      <COND (<SET rpos-or-false <GET .rsubr RFREEZE>>
             <SET rpos .rpos-or-false>
             <COND (.rsubr? <SET pos .rpos>)
                   (T       <SET pos <+ .rpos <ENTRY-LOC .entry>>>)>)
            (T
             <RUNBREAK .ratom>
             <SET code <CHTYPE <FREEZE <1 .rsubr>> CODE>>
             <PUT .rsubr 1 .code>
             <RSUBR <CHTYPE .rsubr VECTOR>>
             <SET rpos <ADR .code>>
             <COND (.rsubr? <SET pos .rpos>)
                   (T       <SET pos <+ .rpos <ENTRY-LOC .entry>>>)>
             <COND (<0? <SET num <CHTYPE <ANDB <CHTYPE <NTH .code <LENGTH .code>> FIX>
					       *777777*> FIX>>>
                    <VALRET <STRING ""
                                     <UNPARSE .pos 8>
                                     "/"
                                     <GOOD-SQUOZE <PNAME .atom>>
                                     "::CONTIN
">>)
                   (T
                    <SYM-TO-DDT <REST .code <- <LENGTH .code> .num 1>> .num .rpos>)>
             <AND <SET xsym <GET .rsubr FREEZE>>
                  <SYM-TO-DDT .xsym <LENGTH .xsym> .rpos>>
             <PUT .rsubr RFREEZE .rpos>)>
      <COND (<==? .whoamI? RFREEZE> <RETURN "FROZEN">)
            (<GET .stuff RBREAK> <RETURN "BROKEN">)
            (T
             <PUT .ratom RBREAK <CONS .stuff <GET .ratom RBREAK ()>>>
             <PUT .stuff RBREAK .pos>
             <VALRET <STRING "" 
                             <UNPARSE .pos 8>
                             "B:CONTIN
">>
            "BROKEN")>>>

<DEFINE RFREEZE (atom) #DECL ((atom) ATOM) <IRFREEZE .atom RFREEZE>>

<DEFINE RBREAK (atom) #DECL ((atom) ATOM) <IRFREEZE .atom RBREAK>>

<ENTRY RFREEZE RBREAK RUNBREAK ADR>

<TITLE ADR>
	<MOVSI A* TFIX>
	<HRRZ B* 1 (AB)>
	<JRST FINIS>

<TITLE SYM-TO-DDT>
<DECLARE (UVECTOR FIX FIX)>
	<MOVE	A*	(AB)	1>
	<MOVE	B*	(AB)	3>
again	<JUMPLE B*	done>
	<MOVE	C*	(A)>
	<HRRZ	D*	(A)	1>
	<ADD	D*	(AB)	5>
	<*BREAK	(*500*)	[<(*400004*) C>]>
	<ADDI	A*	2>
	<SUBI	B*	2>
	<JRST	again>
done	<MOVE	A*	(AB)>
	<MOVE	B*	(AB)	1>
	<JRST	FINIS>

<END>

<ENDPACKAGE>

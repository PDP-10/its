; "Used in UNLINK package:  called by DFL."
<TITLE PURE?>
	<DECLARE ("VALUE" <OR ATOM FALSE> ANY)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* 1 (AB)>
	<PUSHJ	P* IPUREQ>
	<JRST	FINIS>

<INTERNAL-ENTRY IPUREQ 1>
	<SUBM	M* (P)>
	<HRRZ	B* (TP)>
	<SUB	TP* [<2(2)>]>
	<CAMGE	B* PURBOT>
	<JRST	PURWIN>
	<MOVE	A* <MQUOTE T> -1>
	<MOVE	B* <MQUOTE T>>
	<JRST	MPOPJ>
PURWIN
	<MOVSI	A* <TYPE-CODE FALSE>>
	<SETZ	B*>
	<JRST	MPOPJ>


<SUB-ENTRY UNPURIFY ("VALUE" ATOM <OR <PRIMTYPE VECTOR> <PRIMTYPE UVECTOR>>)>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* IUNPURE>
	<JRST	FINIS>
<INTERNAL-ENTRY IUNPURE 1>
	<SUBM	M* (P)>
	<SKIPL	(TP)>			; "IS FROB NON-EMPTY?"
	 <JRST	UNPOUT>			; "NO"
	<PUSH	TP* -1(TP)>
	<PUSH	TP* -1(TP)>
	<PUSHJ	P* IPUREQ>		; "IS IT PURE?"
	<JUMPGE	B* UNPOUT>		; "NO"
	<MOVE	E* <MQUOTE <RGLOC MUDDLE>>>
	<ADD	E* GLOTOP 1>
	<MOVEI	F* 0>
	<MOVE	E* 1(E)>
	<CAIL	E* 100>
	 <MOVNI	F* 1>
	<JUMPL	F* DOUNP>		; "DON'T NEED BUFFER ON 20X"
	<MOVE	A* <MQUOTE <RGLOC UNPURIFY-PAGE T>>>
	<ADD	A* GLOTOP 1>
	<MOVE	B* 1(A)>		; "GET PAGE #"
	<GETYP	O* (A)>			; "GET TYPE"
	<CAIE	O* <TYPE-CODE UNBOUND>>
	 <JRST	DOUNP>			; "IT IS A PAGE, SO WIN"
	<PUSH	P* A>			; "SAVE RGLOC"
	<PUSH	P* F>
	<MOVEI	A* 1>
	<PUSHJ	P* PGFIND>
	<JUMPL	B* [<ERRUUO* <MQUOTE CANT-GET-PAGE>>]>
	<POP	P* F>
	<POP	P* A>
	<MOVEM	B* 1(A)>
	<MOVE	C* <TYPE-WORD FIX>>
	<MOVEM	C* (A)>			; "SAVE PAGE"
; "THE NUMBER OF THE BUFFER PAGE IS IN B; THE OBJECT TO BE UNPURIFIED
IS ON THE TOP OF THE STACK"
DOUNP	<PUSH	P* B>
	<HRRZ	O* (TP)>		; "POINTER"
	<HLRE	B* (TP)>		; "LENGTH"
	<MOVE	A* O>			; "POINTER"
	<TRZ	A* *1777*>		; "GET BEGINNING OF PAGE"
	<SUB	O* A>			; "# OF WORDS TO IT"
	<SUB	B* O>			; "UPDATE LENGTH"
	<MOVEI	E* (A)>			; "SAVE REAL POINTER"
	<ASH	A* -10>
	<PUSH	P* A>			; "PAGE # OF REAL PAGE"
	<MOVE	D* -1(P)>		; "BUFFER PAGE"
	<ASH	D* 10>			; "ADDRESS OF BUFFER PAGE"
	<MOVMS	B>
	<IDIVI	B* *2000*>
	<JUMPE	C* HERE 2>
	<ADDI	B* 1>
	<HRLZ	A* (P)>			; "PAGE # OF FIRST VICTIM"
	<ADD	A* [<(*200*)>]>
; "D HAS ADDRESS OF BUFFER; E HAS ADDRESS OF PURE PAGE.  B IS # ITERS NEEDED
A HAS PURE PAGE+200,,0, FOR .PMAP INTO O.
(P) IS # OF REAL PAGE, -1(P) IS PAGE # OF BUFFER"
UNPLOP	<JUMPL	F* [<PUSH P* A>
		    <PUSH P* B>
		    <MOVE A* -2(P)>	; "PURE PAGE"
		    <ASH A* 1>
		    <HRLI A* *400000*>
		    <HRLZI B* *120400*>
		    <SPACS>		; "COPY-ON-WRITE"
		    <ADDI A* 1>
		    <SPACS>
		    <POP P* B>
		    <POP P* A>
		    <JRST UNLEND>]>
	<*SUSET	A>
	<JUMPL	O* UNLEND>		; "SEE IF ALREADY UNPURE"
	<*CALL	COPCOR>			; "MAP PAGE INTO BUFFER"
	<ERRUUO* <MQUOTE COPY-FAILED>>
	<*CALL	GETCOR>			; "GET FRESH PAGE IN PURE SPACE"
	<ERRUUO* <MQUOTE CANT-GET-NEW-CORE>>
DOBLT	<HRRI	C* (E)>
	<HRLI	C* (D)>			; "SET UP BLT POINTER"
	<BLT	C* *1777*(E)>		; "BLT PAGE BACK"
UNLEND	<SOJLE	B* UNPDON>		; "DONE?"
	<ADDI	E* *2000*>		; "UPDATE PURE PAGE POINTER"
	<AOS	(P)>			; "UPDATE PURE PAGE NUMBER"
	<ADD	A* [<(1)>]>
	<JRST	UNPLOP>			; "UPDATE ARG TO .PMAP"
UNPDON	<SUB	P* [<(2) 2>]>		; "FROB P STACK"
UNPOUT	<POP	TP* B>
	<POP	TP* A>			; "RETURN ARG"
	<JRST	MPOPJ>
COPCOR	<SETZ>				; "CALL TO MAP PURE PAGE INTO BUFFER"
	<SIXBIT	"CORBLK">
	[<*30000*>]
	[-1]				; "ME"
	<(P) -1>			; "LOC OF BUFFER"
	[-1]				; "ME"
	<SETZ	(P)>			; "LOC OF PURE PAGE"
GETCOR	<SETZ>				; "CALL TO CONS FRESH R/W PAGE ON PURE"
	<SIXBIT	"CORBLK">
	[<*120000*>]
	[-1]				; "ME"
	<(P)>				; "LOCATION"
	<SETZI	-5>			; "FRESH PAGE"


<DEFINE FIND-ATOM (IT "AUX" PNM (A <ASSOCIATIONS>) (OL ()))
	<SET PNM <COND (<TYPE? .IT ATOM> <SPNAME .IT>)
		       (<TYPE? .IT STRING> .IT)>>
	<REPEAT ()
		<COND (<NOT .A> <RETURN .OL>)>
		<COND (<AND <==? <INDICATOR .A> OBLIST>
			    <TYPE? <AVALUE .A> OBLIST>
			    <LOOKUP .PNM <AVALUE .A>>>
		       <SET OL (<ITEM .A> !.OL)>)>
		<SET A <NEXT .A>>>>


<DEFINE UNASSIGNED-ATOMS (A)
	#DECL ((A) OBLIST)
	<MAPF ,LIST
	      <FUNCTION (XX)
			#DECL ((XX) LIST)
			<MAPRET !<MAPF ,LIST
				       <FUNCTION (X) 
						 #DECL ((X) ATOM)
						 <COND (<OR <ASSIGNED? .X>
							    <GASSIGNED? .X>>
							<MAPRET>)
						       (.X)>>
				       .XX>>>
	      .A>>

<DEFINE ALL-OBLISTS ("AUX" (A <ASSOCIATIONS>))
	<MAPF ,LIST
	      <FUNCTION ("AUX" FROB) 
		<COND (<AND <==? <INDICATOR .A> OBLIST>
			    <TYPE? <AVALUE .A> OBLIST>>
		       <SET FROB <AVALUE .A>>)>
		<COND (<AND <SET A <NEXT .A>> <ASSIGNED? FROB>> .FROB)
		      (.A <MAPRET>)
		      (<ASSIGNED? FROB> <MAPSTOP .FROB>)
		      (<MAPSTOP>)>>>>

<DEFINE ALL-ASSOCIATIONS ("OPTIONAL" (INCLUDE '())
			  "AUX" (A <ASSOCIATIONS>) (VEC [1 2 3]))
	#DECL ((INCLUDE) <STRUCTURED [REST ANY]> (A) <OR ASOC FALSE>
	       (VEC) <VECTOR [3 ANY]>)
	<MAPF <>
	      <FUNCTION ("AUX" (FROB <INDICATOR .A>))
		<COND (<OR <EMPTY? .INCLUDE> <MEMQ .FROB .INCLUDE>>
		       <PUT .VEC 1 <ITEM .A>>
		       <PUT .VEC 2 .FROB>
		       <PUT .VEC 3 <AVALUE .A>>
		       <& .VEC>)>
		<OR <SET A <NEXT .A>> <MAPSTOP>>>>>


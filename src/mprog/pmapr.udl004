;"PMAP RSUBRS"

;"RSUBR FOR MAPPING PAGES"

<TITLE CORE-BLOCK>		;"MAP A PAGE"
	<DECLARE ("VALUE" <OR FIX FALSE> <PRIMTYPE WORD> FIX FIX FIX FIX)>
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* ICORE-BLOCK>
	<JRST	FINIS>

<INTERNAL-ENTRY ICORE-BLOCK 5>
	<SUBM	M* (P)>
	<*CALL	CORE>
	<JRST	FAIL>
	<MOVSI	A* <TYPE-CODE FIX>>
	<MOVE	B* -4 (TP)>	;"CORE BLOCK NUMBER"
	<LSH	B* 10>		;"CHANGE TO ADDRESS"
CBX	<SUB	TP* [<10 (10)>]>
	<JRST	MPOPJ>

FAIL	<MOVSI	C* <TYPE-CODE FIX>>
	<MOVEI	E* 0>
	<PUSHJ	P* CICONS>
	<MOVSI	A* <TYPE-CODE FALSE>>
	<JRST	CBX>

CORE	<SETZ>
	<SIXBIT "CORBLK">
	<(TP) -8>		;"MODE"
	<(TP) -6>		;"INTO"
	<(TP) -4>
	<(TP) -2>		;"FROM"
	<(TP)>
	<SETZB D>		; "ERROR"

;"RSUBR TO FIND FREE CORE PAGES"

<TITLE	PAGE-FIND>
	<DECLARE ("VALUE" <OR FIX FALSE> "OPTIONAL" FIX)>
	<JUMPGE	AB* ONEARG>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* IPAGE-FIND2>
	<JRST	FINIS>

ONEARG	<PUSHJ	P* IPAGE-FIND1>
	<JRST	FINIS>

<INTERNAL-ENTRY IPAGE-FIND1 0>
	<SUBM	M* (P)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [<1>]>
	<JRST	PF1>

<INTERNAL-ENTRY IPAGE-FIND2 1>
	<SUBM	M* (P)>
PF1	<MOVE	A* (TP)>	;"YES, GET IT"
	<JUMPLE	A* WRONGT>
	<PUSHJ	P* PGFIND>
	<JUMPL	B* [<MOVSI A* TFALSE>
		    <SETZ B*>
		    <JRST PFX>]>
	<MOVSI	A* <TYPE-CODE FIX>>
PFX	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>

;"RSUBR TO GIVE BACK CORE PAGES"

<TITLE	PAGE-GIVE>
	<DECLARE ("VALUE" FIX FIX "OPTIONAL" FIX)>
	<DPUSH	TP* (AB)>
	<AOBJN	AB* HERE 1>
	<AOBJP	AB* ONEARG>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* IPAGE-GIVE2>
	<JRST	FINIS>

ONEARG	<PUSHJ	P* IPAGE-GIVE1>
	<JRST	FINIS>

<INTERNAL-ENTRY IPAGE-GIVE1 1>
	<SUBM	M* (P)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [<1>]>
	<JRST	PG1>

<INTERNAL-ENTRY IPAGE-GIVE2 2>
	<SUBM	M* (P)>
PG1	<MOVE	A* (TP)>	;"YES, GET IT"
	<JUMPLE	A* WRONGT>
	<MOVE	B* (TP) -2>	;"GET NUMBER OF FIRST BLOCK"
	<JUMPL	B* WRONGT>
	<MOVEI	O* (B)>
	<ADDI	O* (A)>
	<CAIGE	B* 256>		;"VALID FIRST BLOCK NUMBER ?"
	<CAILE	O* 256>		;"VALID LAST+1 BLOCK NUMBER ?"
	<JRST	WRONGT>		;"NO, LOSE"
	<PUSHJ	P* PGGIVE>
	<MOVSI	A* <TYPE-CODE FIX>>
	<SUB	TP* [<4 (4)>]>
	<JRST	MPOPJ>

<TITLE APPEND-IOT>
	<DECLARE ("VALUE" <PRIMTYPE WORD>
		  FIX			; "number of words to write"
		  <PRIMTYPE WORD>	; "buffer"
		  CHANNEL)>		; "channel to write on"
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* IAPPEND-IOT>
	<JRST	FINIS>

<INTERNAL-ENTRY IAPPEND-IOT 3>
	<SUBM	M* (P)>
	<MOVE	B* -4 (TP)>
	<MOVNS	B>
; "make fake uvector"
APPLOOP	<ADDI	B* 1000>
	<PUSH	P* B>
	<SKIPG	B>
	<SETZ	B*>
	<SUBI	B* 1000>
	<HRLS	B>
	<HRR	B* -2 (TP)>
	<HLRE	A* B>
	<MOVMS	A>
	<ADDI	A* (B)>
	<SETZM (A)>
; "call printb"
	<MOVE	C* -1 (TP)>
	<MOVE	D* (TP)>
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<PUSH	TP* B>
	<DPUSH	TP* C>
	<MCALL	2 PRINTB>
	<POP	P* B>
	<JUMPL	B* APPLOOP>
; "return the buffer pointer"
	<MOVE	A* -3 (TP)>
	<MOVE	B* -2 (TP)>
	<SUB	TP* [<6 (6)>]>
	<JRST	MPOPJ>

; "rsubr to find the length of a file"

<TITLE *FILE-LENGTH>
	<DECLARE ("VALUE" <OR FIX FALSE> CHANNEL)>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* IFILE-LENGTH>
	<JRST	FINIS>

<INTERNAL-ENTRY IFILE-LENGTH 1>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<MOVE	B* (A) 21>	; "status slot"
	<ANDI	B* *77*>
	<CAIE	B* *43*>
	<JRST	NOTDSK>
	<*CALL	FILLEN>
	<JRST	FAIL>
	<MOVSI	A* <TYPE-CODE FIX>>
FLX	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>

NOTDSK	<MOVSI	A* <TYPE-CODE FIX>>
	<SETZ	B*>
	<JRST	FLX>

FAIL	<MOVSI	A* <TYPE-CODE FALSE>>
	<SETZ	B*>
	<JRST	FLX>

FILLEN	<SETZ>
	<SIXBIT "FILLEN">
	<(A) 1>			; "io channel #"
	<SETZM B>

<TITLE DISK-UPDATE>
	<DECLARE ("VALUE" <OR 'T FALSE> CHANNEL)>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* IDISK-UPDATE>
	<JRST	FINIS>

<INTERNAL-ENTRY IDISK-UPDATE 1>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<MOVE	A* 1(A)>
	<*CALL	DSKUPD>
	<JRST	UPD-LOST>
	<DMOVE	A* <PQUOTE T>>
DUX	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>
UPD-LOST
	<MOVSI	A* <TYPE-CODE FALSE>>
	<SETZM	B>
	<JRST	DUX>

DSKUPD
	<SETZ>
	<SIXBIT "DSKUPD">
	<SETZ A>

; "takes request, buffer, direction (0=read), returns buffer"

<TITLE COPY-REQ>
	<PSEUDO <SETG *RDTIME #OPCODE *42000000017*>>
	<DECLARE ("VALUE" UVECTOR 
		  <VECTOR UVECTOR FIX FIX>
		  <UVECTOR [4 FIX]>
		  FIX)>
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* ICOPY-REQ>
	<JRST	FINIS>

<INTERNAL-ENTRY ICOPY-REQ 3>
	<SUBM	M* (P)>
	<MOVE	A* (TP) -4>
	<MOVE	B* (A) 1>
	<MOVE	C* (A) 3>
	<MOVE	D* (A) 5>
	<ANDI	D* *1777*>
	<MOVE	A* (TP) -2>
	<MOVE	E* (A) 1>
	<LSH	E* 10>
	<ADD	D* E>
	<HRL	B* D>
	<SKIPE	(TP)>
	<MOVSS	B>
	<MOVE	E* B>
	<ADD	E* C>
	<BLT	B* (E) -1>
	<*RDTIME B*>
	<MOVE	A* (TP) -2>
	<CAML	B* (A) 3>
	<MOVEM	B* (A) 3>
	<MOVE	A* (TP) -4>
	<MOVE	B* (A) 1>
	<MOVSI	A* <TYPE-CODE UVECTOR>>
	<SUB	TP* [<6 (6)>]>
	<JRST	MPOPJ>

<TITLE SHARERS>
	<DECLARE ("VALUE" <OR FIX FALSE>
			  <PRIMTYPE WORD>
		  "OPTIONAL" <PRIMTYPE WORD>)>
	<DPUSH	TP* (AB)>
	<AOBJN	AB* HERE 1>
	<AOBJP	AB* ONEARG>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* ISHARERS2>
	<JRST	FINIS>

ONEARG	<PUSHJ	P* ISHARERS1>
	<JRST	FINIS>

<INTERNAL-ENTRY ISHARERS1 1>
	<SUBM	M* (P)>
	<MOVSI	A* <TYPE-CODE FIX>>
	<MOVNI	B* 1>
	<EXCH	A* -1 (TP)>
	<EXCH	B* (TP)>
	<DPUSH	TP* A>
	<JRST	SH2>

<INTERNAL-ENTRY ISHARERS2 2>
	<SUBM	M* (P)>
SH2	<*CALL	CORE>
	<JRST	FAIL>
	<MOVSI	A* <TYPE-CODE FIX>>
	<HRRZS	B>
SHX	<SUB	TP* [<4 (4)>]>
	<JRST	MPOPJ>

; "failed"
FAIL	<MOVSI	A* <TYPE-CODE FALSE>>
	<SETZ	B*>
	<JRST	SHX>

; ".call block"
CORE	<SETZ>
	<SIXBIT "CORTYP">
	<-2 (TP)>	; "JOB"
	<(TP)>		; "PAGE"
	<MOVEM B>
	<MOVEM B>
	<MOVEM B>
	<SETZM B>	; "# OF SHARERS"

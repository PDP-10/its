<PACKAGE "PCOND">

<ENTRY PCOND>
;"***** PCOND (PROG/COND) Example:
	 <PCOND (<EMPTY? .X> #FALSE (none))
		<SET Y <1 .X>>
		(<NOT <TYPE? .Y ATOM>> #FALSE (not-simple))
		(<NOT <GASSIGNED? .Y>> #FALSE (not-defined))
		<SET Z ,.Y>
		(<TYPE? .Z MACRO> <EXPAND .X>)>
*****"

<DEFMAC PCOND ("ARGS" L)
	#DECL ((L) LIST)
	<COND-CODE .L>>

<DEFINE COND-CODE (L)		;"Make a COND Form using the Phrases from L"
	#DECL ((L) LIST)
	<CHTYPE <PUTREST (COND)
		 <MAPR ,LIST <FUNCTION (RL "EXTRA" (X <1 .RL>))
					#DECL ((RL) <LIST ANY>)
					<COND (<TYPE? .X LIST>	;"COND Phrase ?"
					       .X	;"Include It in COND")
					      (ELSE	;"Random MUDDLE Expression"
					       <MAPSTOP <ELSE-CODE .RL>>
					;"End COND with an ELSE Phrase")>>
			.L>>
		FORM>>

<DEFINE ELSE-CODE (L)		;"Make an ELSE Phrase using the Expressions from L"
	#DECL ((L) <LIST ANY>)
	<PUTREST (T)
		 <MAPR ,LIST <FUNCTION (RL "EXTRA" (X <1 .RL>))
					#DECL ((RL) <LIST ANY>)
					<COND (<TYPE? .X LIST>	;"COND Phrase ?"
					       <MAPSTOP <COND-CODE .RL>>
					;"End Phrase with another COND")
					      (ELSE	;"Random MUDDLE Expression"
					       .X	;"Include It in Phrase")>>
			.L>>>

<ENDPACKAGE>

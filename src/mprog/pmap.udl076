
<RPACKAGE "PMAP">

<ENTRY PMCHAN
       POPEN
       PREAD
       PWRITE
       PRESET
       PCLOSE
       PBUFFERS
       PWIRE
       PUNWIRE
       PMMPLEX
       PMCHANLIST
       PMMAX
       PMAP-RESTORE
       CORE-BLOCK
       PAGE-FIND
       PAGE-GIVE
       SHARERS>

<SETG PMTIME 0>

<SETG PMCHANLIST ()>

<SETG PMMAX 4>

<GDECL (PRVCT)
       <UVECTOR [REST <VECTOR [3 ANY]>]>
       (PMTIME PMMAX)
       FIX
       (PMCHANLIST)
       <LIST [REST PMCHAN]>>

<NEWTYPE PMCHAN
	 VECTOR
	 '<VECTOR CHANNEL STRING FIX LIST FIX APPLICABLE FIX FIX>>

<FLOAD "MBPROG;PMAPR">

<DEFINE PMMPLEX ("OPTIONAL" CHAN "AUX" (OC 0) (OLD <>))
   #DECL ((CHAN) PMCHAN (OLD) <SPECIAL <OR FALSE PMCHAN>> (OC) <SPECIAL FIX>)
   <COND (<L? ,PMMAX 0>)
	 (<ASSIGNED? CHAN> <CLOSE <1 .CHAN>>)
	 (ELSE
	  <MAPF <>
		<FUNCTION (C)
			#DECL ((C) PMCHAN (OLD) <OR FALSE PMCHAN> (OC) FIX)
			<COND (<G? <1 <1 .C>> 0>
			       <SET OC <+ .OC 1>>
			       <COND (<AND <N=? <2 .C> "LOCKED">
					   <OR <NOT .OLD> <G? <8 .OLD> <8 .C>>>>
				      <SET OLD .C>)>)>>
		,PMCHANLIST>
	  <COND (<AND <G=? .OC ,PMMAX> .OLD> <CLOSE <1 .OLD>>)>)>>

<DEFINE PMAP-RESTORE ()
	<MAPF <>
	      <FUNCTION (C)
		      #DECL ((C) PMCHAN)
		      <MAPF <>
			    <FUNCTION (B)
				    #DECL ((B) <UVECTOR [3 FIX]>)
				    <PAGE-GIVE <2 .B>>>
			    <4 .C>>
		      <PUT .C 4 ()>>
	      ,PMCHANLIST>
	"DONE">

<DEFINE POPEN (MODE FILE "OPTIONAL" (MAXBUF 2) (SWAPPER ,BUF-LRU) "AUX" CHAN)
   #DECL ((MODE FILE) STRING (MAXBUF) FIX (SWAPPER) APPLICABLE
	  (CHAN) <OR CHANNEL FALSE> (VALUE) <OR PMCHAN FALSE>)
   <PROG (PC TMP FL)
     #DECL ((PC) PMCHAN (TMP FL) ANY)
     <COND (<=? .MODE "READ">
	    <COND (<NOT <SET CHAN <OPEN "READ" .FILE>>> <RETURN .CHAN>)>)
	   (<=? .MODE "PRINT">
	    <COND (<AND <NOT <SET CHAN <OPEN "READ" .FILE>>>
			<NOT <SET CHAN <OPEN "PRINTB" .FILE>>>>
		   <RETURN .CHAN>)>
	    <DISK-UPDATE .CHAN>)
	   (<=? .MODE "LOCKED">
	    <COND (<NOT <SET CHAN <OPEN "PRINTO" .FILE>>> <RETURN .CHAN>)>)
	   (ELSE <RETURN #FALSE ("MODE NOT READ, PRINT, OR LOCKED")>)>
     <PMMPLEX>
     <COND (<N=? <9 .CHAN> "DSK"> <SET FL 0>)
	   (<SET FL <*FILE-LENGTH .CHAN>>)
	   (ELSE <ERROR FILE-LENGTH-FAILED!-ERRORS POPEN>)>
     <SET PC
	  <CHTYPE <VECTOR .CHAN
			  .MODE
			  <COND (<=? .MODE "READ"> 18253611008)
				(<MEMBER .MODE ("PRINT" "LOCKED")>
				 -25769803776)>
			  ()
			  .MAXBUF
			  .SWAPPER
			  .FL
			  0>
		  PMCHAN>>
     <COND
      (<AND <=? .MODE "LOCKED"> <NOT <0? <7 .PC>>>>
       <COND
	(<SET TMP
	  <REPEAT ((D 0) (L </ <- <7 .PC> 1> 1024>) (P <PAGE-BUY .PC>))
	    #DECL ((D L P) FIX)
	    <GET-CORE-BLOCK <3 .PC> -1 .P <1 <1 .PC>> .D>
	    <COND (<G? <SHARERS .P> 1>
		   <CORE-BLOCK 0 -1 .P 0 0>
		   <CLOSE <1 .PC>>
		   <RETURN <CHTYPE ("PAGE OF LOCKED FILE IS SHARED" .D)
				   FALSE>>)>
	    <COND (<G=? <SET D <+ .D 1>> .L>
		   <CORE-BLOCK 0 -1 .P 0 0>
		   <PAGE-GIVE .P>
		   <RETURN T>)>>>)
	(THEN <RETURN .TMP>)>)>
     <1 <SETG PMCHANLIST (.PC !,PMCHANLIST)>>>>

<DEFINE PREAD (CHAN VCT D1 "AUX" RQ)
	#DECL ((CHAN) PMCHAN (VCT) UVECTOR (D1) FIX (RQ) LIST)
	<COND (<EMPTY? <SET RQ <PIOT .CHAN .VCT .D1 0>>> .VCT)
	      (ELSE <CHTYPE .RQ FALSE>)>>

<DEFINE PWRITE (CHAN VCT D1
		"AUX" (MODE <2 .CHAN>) RQ (EOF </ <7 .CHAN> 1024>)
		      RL (ITSMODE <2 <1 .CHAN>>))
   #DECL ((CHAN) <SPECIAL PMCHAN> (VCT) UVECTOR (D1) FIX (EOF) <SPECIAL FIX>
	  (RL) ANY (RQ) LIST (MODE ITSMODE) STRING)
   <COND (<OR <=? "PRINT" .MODE> <=? "LOCKED" .MODE>>
	  <COND (<EMPTY? <SET RQ <PIOT .CHAN .VCT .D1 -1>>> .VCT)
		(ELSE
		 <MAPF <>
		       <FUNCTION (B)
			       #DECL ((B) <UVECTOR [4 FIX]> (EOF) FIX)
			       <COND (<==? .EOF <1 .B>>
				      <GET-CORE-BLOCK 0 -1 <2 .B> 0 0>
				      <PUT .B 1 -1>
				      <PUT .B 4 -1>
				      <MAPLEAVE>)>>
		       <4 .CHAN>>
		 <COND (<NOT <OR <=? .ITSMODE "PRINTB"> <=? .ITSMODE "PRINTO">>>
			<PRESET .CHAN "PRINTO">)
		       (<0? <1 <1 .CHAN>>> <PMMPLEX>
			<PROG ()
			      <OR <SET RL <RESET <1 .CHAN>>>
				  <NOT <ERROR RESET-FAILED!-ERRORS .RL <1 .CHAN> PWRITE>>
				  <AGAIN>>>)>
		 <MAPF <>
		       <FUNCTION (R)
			       #DECL ((R) <VECTOR <OR UVECTOR ATOM> FIX FIX>
				      (CHAN) PMCHAN)
			       <PUT .CHAN 7 <IOT-REQ .R .CHAN>>>
		       .RQ>
		 <COND (<=? .MODE "LOCKED"> <ACCESS <1 .CHAN> 0>)
		       (ELSE <PRESET .CHAN "READ">)>
		 .VCT)>)
	 (ELSE #FALSE ("ATTEMPT-TO-PRINT-ON-NON-PRINT-CHANNEL"))>>

<DEFINE PIOT (CHAN VCT D1 IN-OUT
	      "AUX" (REQ <REQUESTS .VCT .D1 <7 .CHAN>>) (BUFLIST <4 .CHAN>))
   #DECL ((CHAN) <SPECIAL PMCHAN> (VCT) UVECTOR (D1) FIX (IN-OUT) <SPECIAL FIX>
	  (REQ) <SPECIAL <LIST [REST VECTOR]>> (VALUE) <LIST [REST VECTOR]>
	  (BUFLIST) <LIST [REST UVECTOR]>)
   <PUT .CHAN 8 <PMCOUNT>>
   <MAPF <>
    <FUNCTION (BUF "AUX" (DPAGE <1 .BUF>) (R .REQ))
	    #DECL ((BUF) <UVECTOR [4 FIX]> (DPAGE) FIX
		   (R) <LIST [REST <VECTOR [3 ANY]>]>)
	    <REPEAT (RR)
		    #DECL ((RR) <VECTOR UVECTOR FIX FIX>)
		    <COND (<EMPTY? .R> <RETURN>)>
		    <COND (<==? <1 <1 .R>> PAST-EOF>)
			  (ELSE
			   <SET RR <1 .R>>
			   <COND (<OR <EMPTY? <1 .RR>> <G=? <3 .RR> <7 .CHAN>>>)
				 (<==? </ <3 .RR> 1024> .DPAGE>
				  <COPY-REQ .RR .BUF .IN-OUT>
				  <PUT <1 .R>
				       1
				       <REST <1 .RR> <LENGTH <1 .RR>>>>)>)>
		    <SET R <REST .R>>>>
    .BUFLIST>
   <SET REQ
	<MAPF ,LIST
	      <FUNCTION (R)
		      #DECL ((R) <VECTOR <OR ATOM UVECTOR> FIX FIX>
			     (CHAN) PMCHAN (IN-OUT) FIX)
		      <COND (<AND <TYPE? <1 .R> UVECTOR> <EMPTY? <1 .R>>>
			     <MAPRET>)
			    (<G=? <3 .R> <7 .CHAN>> <MAPRET .R>)
			    (ELSE
			     <COPY-REQ .R <GET-BUF .R .CHAN> .IN-OUT>
			     <MAPRET>)>
		      T>
	      .REQ>>>

<DEFINE PMCOUNT () #DECL ((VALUE) FIX) <SETG PMTIME <+ ,PMTIME 1>>>

<DEFINE PCLOSE (CHAN)
	#DECL ((VALUE) PMCHAN (CHAN) <SPECIAL PMCHAN>)
	<MAPF <>
	      <FUNCTION (B)
		      #DECL ((B) <UVECTOR [4 FIX]>)
		      <COND (<G=? <2 .B> 0>
			     <CORE-BLOCK 0 -1 <2 .B> 0 0>
			     <PAGE-GIVE <2 .B>>
			     <PUT .B 1 -1>
			     <PUT .B 4 -1>)>>
	      <4 .CHAN>>
	<PUT .CHAN 4 ()>
	<SETG PMCHANLIST
	      <MAPF ,LIST
		    <FUNCTION (C)
			    #DECL ((C CHAN) PMCHAN)
			    <COND (<==? .C .CHAN> <MAPRET>) (ELSE <MAPRET .C>)>
			    T>
		    ,PMCHANLIST>>
	<CLOSE <1 .CHAN>>
	.CHAN>

<DEFINE PRESET (CHAN "OPTIONAL" (MODE "READ") "AUX" (CH <1 .CHAN>) RL FL)
	#DECL ((CHAN VALUE) PMCHAN (CH) CHANNEL (MODE) STRING
	       (RL) ANY (FL) <OR FIX FALSE>)
	<CLOSE .CH>
	<PUT .CH 2 .MODE>
	<PMMPLEX>
	<PROG ()
	      <OR <SET RL <RESET .CH>>
		  <NOT <ERROR RESET-FAILED!-ERRORS .RL .CH PRESET>>
		  <AGAIN>>>
	<COND (<SET FL <*FILE-LENGTH .CH>>)
	      (ELSE <ERROR FILE-LENGTH-FAILED!-ERRORS PRESET>)>
	<PUT .CHAN 7 .FL>
	.CHAN>

<DEFINE PBUFFERS (CHAN MAX
		  "AUX" (BUFLIST <4 .CHAN>) (BL <- <LENGTH .BUFLIST> .MAX>))
   #DECL ((CHAN) PMCHAN (MAX BL) FIX (BUFLIST) <LIST [REST <UVECTOR [4 FIX]>]>)
   <COND
    (<G? .MAX 0>
     <PUT .CHAN 5 .MAX>
     <COND
      (<G? .BL 0>
       <REPEAT (F)
	       <COND (<G? .BL 0>
		      <PAGE-GIVE <2 <SET F <APPLY <6 .CHAN> .BUFLIST>>>>
		      <PUT .F 1 -1>
		      <SET BL <- .BL 1>>)
		     (ELSE
		      <PUT .CHAN
			   4
			   <MAPF ,LIST
				 <FUNCTION (B)
					 #DECL ((B) <UVECTOR [4 FIX]>)
					 <COND (<G? <1 .B> 0> <MAPRET .B>)
					       (ELSE <MAPRET>)>
					 T>
				 .BUFLIST>>
		      <RETURN>)>>)>
     .MAX)>>

<DEFINE PWIRE (CHAN DPAGE)
	#DECL ((CHAN) PMCHAN (DPAGE) FIX)
	<PUT <REPEAT ((B <4 .CHAN>))
		     #DECL ((B) <LIST [REST <UVECTOR [4 FIX]>]>)
		     <COND (<EMPTY? .B>
			    <RETURN <GET-BUF [![!] 0 <* .DPAGE 1024>] .CHAN>>)
			   (<==? <1 <1 .B>> .DPAGE> <RETURN <1 .B>>)>
		     <SET B <REST .B>>>
	     4
	     34359738367>>

<DEFINE PUNWIRE (CHAN DPAGE)
	#DECL ((CHAN) PMCHAN (DPAGE) <SPECIAL FIX>)
	<REPEAT ((B <4 .CHAN>))
		#DECL ((B) <LIST [REST <UVECTOR [4 FIX]>]>)
		<COND (<EMPTY? .B>
		       <RETURN #FALSE ("BUFFER NOT CURRENTLY MAPPED")>)
		      (<==? <1 <1 .B>> .DPAGE> <PUT <1 .B> 4 0> <RETURN T>)>
		<SET B <REST .B>>>>

<DEFINE GET-BUF (R C "AUX" (BL <4 .C>) B P)
	#DECL ((R) <VECTOR UVECTOR FIX FIX> (C) PMCHAN
	       (BL) <LIST [REST UVECTOR]> (B VALUE) <UVECTOR [4 FIX]>
	       (P) <OR FIX FALSE>)
	<PAGE-MAP .C
		  <COND (<REPEAT ((B .BL))
				 #DECL ((B) <LIST [REST UVECTOR]>)
				 <COND (<EMPTY? .B> <RETURN <>>)
				       (<==? <1 <1 .B>> -1> <RETURN <1 .B>>)>
				 <SET B <REST .B>>>)
			(<L? <LENGTH .BL> <5 .C>>
			 <SET P <PAGE-BUY .C>>
			 <PUT .C 4 (<SET B <UVECTOR -1 .P <* .P 1024> 0>> !<4 .C>)>
			 .B)
			(ELSE <APPLY <6 .C> .BL>)>
		  </ <3 .R> 1024>>>

<DEFINE PAGE-MAP (CHAN BUF DSKPAGE "AUX" RL)
	#DECL ((CHAN) PMCHAN (BUF VALUE) <UVECTOR [4 FIX]> (DSKPAGE) FIX)
	<COND (<0? <1 <1 .CHAN>>> <PMMPLEX>
	       <PROG ()
		     <OR <SET RL <RESET <1 .CHAN>>>
		         <NOT <ERROR RESET-FAILED!-ERRORS .RL <1 .CHAN> PAGE-MAP>>
			 <AGAIN>>>)>
	<GET-CORE-BLOCK <3 .CHAN>
			-1
			<2 .BUF>
			<1 <1 .CHAN>>
			.DSKPAGE>
	<PUT .BUF 1 .DSKPAGE>
	.BUF>

<SETG PRVCT <IUVECTOR 4 '<VECTOR 0 0 0>>>

<DEFINE APPEND (A B C D "AUX" T)
	#DECL ((A VALUE) LIST (T) VECTOR (B C D) ANY)
	<COND (<EMPTY? ,PRVCT> <SET T <VECTOR .B .C .D>>)
	      (ELSE
	       <SET T <1 ,PRVCT>>
	       <PUT .T 1 .B>
	       <PUT .T 2 .C>
	       <PUT .T 3 .D>
	       <SETG PRVCT <REST ,PRVCT>>)>
	<REST <PUTREST .A (.T)>>>

<DEFINE REQUESTS (VCT DSK EOF
		  "AUX" (N <LENGTH .VCT>) (DD <+ .DSK .N>) (L (T)) (LL .L))
	#DECL ((VCT) UVECTOR (DSK EOF N DD) FIX (L LL) LIST
	       (VALUE) <LIST [REST <VECTOR <OR UVECTOR ATOM> FIX FIX>]>)
	<SETG PRVCT <TOP ,PRVCT>>
	<COND (<L? .DSK 0>
	       <ERROR READ-OR-WRITE-ADDRESS-NEGATIVE?!-ERRORS PIOT>)>
	<REPEAT (DDM DDL)
		#DECL ((DDM DDL) FIX)
		<SET DDM
		     <COND (<==? .DSK .EOF> .DD)
			   (<G? .DSK .EOF>
			    <SET LL <APPEND .LL PAST-EOF <- .DSK .EOF> .EOF>>
			    .DD)
			   (<NXTBLK .DSK .EOF>)>>
		<SET DDL <- <COND (<L? .DD .DDM> .DD) (.DDM)> .DSK>>
		<SET LL <APPEND .LL .VCT .DDL .DSK>>
		<COND (<0? <SET N <- .N .DDL>>> <RETURN <REST .L>>)
		      (ELSE
		       <SET DSK <+ .DSK .DDL>>
		       <SET VCT <REST .VCT .DDL>>)>>>

<DEFINE NXTBLK (N EOF "AUX" (B <+ 1 <CHTYPE <ORB .N 1023> FIX>>))
	#DECL ((N EOF B VALUE) FIX)
	<COND (<L? .EOF .B> .EOF) (.B)>>

<DEFINE BUF-LRU (BUFLIST "AUX" (OLD <1 .BUFLIST>))
	#DECL ((BUFLIST) <LIST [REST <UVECTOR [4 FIX]>]>
	       (OLD VALUE) <UVECTOR [4 FIX]>)
	<REPEAT ((B <REST .BUFLIST>))
		<COND (<EMPTY? .B> <RETURN .OLD>)
		      (<G? <4 .OLD> <4 <1 .B>>> <SET OLD <1 .B>>)>
		<SET B <REST .B>>>>

<DEFINE IOT-REQ (RQ CHAN "AUX" (CH <1 .CHAN>))
	#DECL ((RQ) <VECTOR <OR UVECTOR ATOM> FIX FIX> (CHAN) PMCHAN
	       (CH) CHANNEL)
	<ACCESS .CH <3 .RQ>>
	<COND (<==? <1 .RQ> PAST-EOF>
	       <3 <PUT .RQ 3 <PAGE-BUY .CHAN>>>
	       <APPEND-IOT <2 .RQ>
			   <GET-CORE-BLOCK -25769803776 -1 <3 .RQ> 131073 0>
			   .CH>
	       <CORE-BLOCK 0 -1 <3 .RQ> 0 0>
	       <PAGE-GIVE <3 .RQ>>
	       <+ <7 .CHAN> <2 .RQ>>)
	      (ELSE <PRINTB <1 .RQ> .CH> <+ <3 .RQ> <2 .RQ>>)>>

<DEFINE GET-CORE-BLOCK (MM MJ1 MP1 MJ2 MP2 "AUX" R)
	#DECL ((R) <OR FIX <FALSE FIX>> (MM MJ1 MP1 MJ2 MP2) <PRIMTYPE WORD>
	       (VALUE) <PRIMTYPE WORD>)
	<PROG ()
	      <COND
	       (<SET R <CORE-BLOCK .MM .MJ1 .MP1 .MJ2 .MP2>>)
	       (<N==? <1 .R> *37*> ;"not no-core error?"
	        <ERROR BAD-CALL!-ERRORS CORE-BLOCK <1 .R> [.MM .MJ1 .MP1 .MJ2 .MP2]>)
	       (<ERROR CANT-GET-CORE-ERRET-NON-FALSE-TO-RETRY!-ERRORS>
		<AGAIN>)
	       (ELSE <ERROR CORE-EXHAUSTED-YOU-LOSE!-ERRORS>)>>>

<DEFINE PAGE-BUY (CHAN "AUX" (P <PAGE-FIND>))
   #DECL ((VALUE) FIX (CHAN) PMCHAN (P) <OR FIX FALSE>)
   <OR .P
       <REPEAT ((C (.CHAN !,PMCHANLIST)) B BL)
		#DECL ((C) <LIST [REST PMCHAN]> (B) <UVECTOR [4 FIX]> (BL) LIST)
	       <COND (<EMPTY? .C>
		      <ERROR MUDDLE-CORE-EXHAUSTED-YOU-LOSE!-ERRORS>)
		     (<NOT <EMPTY? <SET BL <4 <1 .C>>>>>
		      <SET B <BUF-LRU .BL>>
		      <PUT <1 .C> 4 <REMOVE-FROM .BL .B>>
		      <RETURN <2 .B>>)>
	       <SET C <REST .C>>>>>

<DEFINE REMOVE-FROM (L E "AUX" (R <MEMQ .E .L>) (L1 <LENGTH .L>))
	#DECL ((VALUE L) LIST (E) ANY (R) <OR LIST FALSE> (L1) FIX)
	<COND (.R
	       <COND (<==? .R .L> <REST .L>)
		     (ELSE
		      <PUTREST <REST .L <- .L1 <+ <LENGTH .R> 1>>> <REST .R 1>>
		      .L)>)
	      (ELSE .L)>>

<ENDPACKAGE>

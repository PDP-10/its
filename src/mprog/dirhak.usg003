
<PACKAGE "DIRHAK">

<ENTRY DIR-DIFF SN&DT>

<USE "STR">

<DEFINE DIR-DIFF (NAME OLD NEW) 
	#DECL ((VALUE) <UVECTOR [2 LIST]> (NAME) FIX (OLD NEW) <<PRIMTYPE UVECTOR> FIX>)
	<REPEAT ((OLD <SN&DT .NAME .OLD>) (NEW <SN&DT .NAME .NEW>) (CAME '())
		 (GONE '()))
		#DECL ((OLD NEW) <UVECTOR [REST FIX]> (CAME GONE) <LIST [REST FIX]>)
		<COND (<=? .OLD .NEW> <RETURN <UVECTOR .CAME .GONE>>)
		      (<EMPTY? .OLD>
		       <RETURN <UVECTOR <LIST !<ALL-FILES .NEW> !.CAME> .GONE>>)
		      (<EMPTY? .NEW>
		       <RETURN <UVECTOR .CAME <LIST !<ALL-FILES .OLD> !.GONE>>>)
		      (<==? <1 .OLD> <1 .NEW>>
		       <OR <==? <2 .OLD> <2 .NEW>>
			   <SET CAME <CONS <1 .NEW> .CAME>>>
		       <SET OLD <REST .OLD 2>>
		       <SET NEW <REST .NEW 2>>)
		      (<L? <1 .OLD> <1 .NEW>>
		       <SET CAME <CONS <1 .NEW> .CAME>>
		       <SET NEW <REST .NEW 2>>)
		      (<SET GONE <CONS <1 .OLD> .GONE>> <SET OLD <REST .OLD 2>>)>>>

<DEFINE SN&DT (NAM DIR)
	#DECL ((VALUE) <UVECTOR [REST FIX]> (NAM) FIX (DIR) <<PRIMTYPE UVECTOR> FIX>)
	<SORT <>
	      ![!<REPEAT ((D <MEMQ .NAM <REST .DIR <2 .DIR>>>) (L ()) SN)
			 #DECL ((D) <OR FALSE <<PRIMTYPE UVECTOR> [REST FIX]>> (L) LIST)
			 <COND (<OR <EMPTY? .D> <N==? .NAM <1 .D>>> <RETURN .L>)
			       (<AND <0? <CHTYPE <ANDB <3 .D> #WORD *64000000*> FIX>>
				     <TYPE? <SET SN <PARSE <SIXTOS <2 .D>>>> FIX>>
				<SET L <LIST .SN <4 .D> !.L>>)>
			 <SET D <REST .D 5>>>!]
	      2>>

<DEFINE ALL-FILES (L "AUX" (F T)) 
	#DECL ((VALUE L) <UVECTOR [REST FIX]> (F) <OR 'T FALSE>)
	<MAPF ,UVECTOR
	      #FUNCTION ((N) 
			 #DECL ((VALUE N) FIX)
			 <COND (<SET F <NOT .F>> <MAPRET>) (T .N)>)
	      .L>>

<ENDPACKAGE>

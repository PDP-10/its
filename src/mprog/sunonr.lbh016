
;;; SUN 
;;;
;;; COPYRIGHT Berthold K. P. Horn, 1977
;;; 
;;; Program to calculate sun-elevation and sun-azimuth.
;;; Given observers geographical position and time of observation.
;;;
;;; UT = time in (universal) days since 1975/01/01 U.T. 00:00:00
;;; ET = time in (ephemeris) days since 1975/01/01 E.T. 00:00:00
;;;
;;; DT = ET - UT reduction from universal time to ephemeris time.
;;; DT = +45.6 seconds for 1975/01/01
;;;
;;; Note, starting epoch is 27393.5 days later than epoch usually used,
;;; namely, 1900/01/00 12:00:00. 
;;;
;;; GEOMETRIC MEAN LONGITUDE (OF SUN) (L) = 280.0271 + .98564734 * ET
;;; Relative to equinox of date (that is luni-solar and planetary
;;; precession included). [Not directly used here].
;;;
;;; MEAN ANOMALY (M) = Geometric Mean Longitude - Mean Longitude of Perigee.
;;; M = 357.5166 + .98560026 * ET 
;;; 
;;; Eccentricity e = .016720 - .0000000011 * ET
;;;
;;; ECCENTRIC ANOMALY (E) -- useful auxillary angle.
;;; Anomaly measured from center of ellipse to circumscribed circle.
;;; E + e sin(E) = M. Transcendental equation (due to Kepler ...).
;;;
;;; TRUE ANOMALY (N):
;;; Anomaly measured from focus of ellipse to actual position.
;;; tan (N/2) = SQRT((1+e)/(1-e)) tan(E/2)
;;;
;;; LONGITUDE OF EARTH PERIGEE (G) = 282.5105 + .00004709 * ET
;;; Relative to equinox of date (that is luni-solar and planetary
;;; precession included).
;;;
;;; TRUE LONGITUDE = LONGITUDE OF PERIGEE + TRUE ANOMALY
;;;
;;; Position of MOON'S NODE (O) = 248.59 - .052954 * ET
;;;
;;;  OBLIQUITY OF ECLIPTIC PLANE (X) = 23.4425 - .000000036 ET 
;;;  Nutation in obliquity = + .0026 * cos(O)		( +9".210)
;;;  Nutation in longitude = - .0048 * sin(O)		(-17".234)
;;;
;;;  Radius-Vector =  (1 - e * e) / (1 + e * cos(N) ) = 1 - e * cos (E)
;;;
;;;  Semi-Diameter = .2670 / Radius-Vector		(16' 01".18)
;;;  Parallax = .0024 / Radius-Vector			( 8".794)
;;;  Abberation = .0057 / Radius-Vector 		(20".496)
;;;
;;;  DECLINATION of sun         PHI = asin( sin(L) * sin(X) )
;;;  RIGHT ASCENSION of sun     THETA = atan( sin(L) * cos(X) / cos(L) )
;;;
;;;  Mean Sidereal Time = Mean Greenwich Hour Angle of Equinox
;;;  GHA(ARIES) = 100.0215 + 360.98564734 * UT
;;; 
;;;  True GHA-Equinox = Mean GHA-Equinox + Nut-Lon * cos(X)
;;; 
;;;  LONGITUDE(SUB-SOLAR POINT) = R.A.(SUN) - GHA(ARIES)
;;;  LATITUDE(SUB-SOLAR POINT)  = DECLINATION(SUN)
;;;
;;;     Latitude and Declination increase Northward.
;;;     Longitude and Righ Ascension increase Eastward.
;;;     Hour Angles increase Westward (sigh...)
;;;
;;; Significant digits: 
;;;
;;;	Angles 		-- 4 digits (.3" accuracy)
;;; 	Angular rates   -- 8 digits (1".3 accuracy per century)
;;;	Quadratic terms -- l2 digits (5" accuracy per century)
;;;
;;;	Lunar node 	-- use two digits less, used indirectly.
;;;
;;;	Eccentricity	-- use two digits more, for rad-to-deg conversion.
;;;

(DECLARE (SPECIAL PI LONGITUDE LATITUDE GMT-OFFSET TRACEF ANGLEF ET-UT
		  INDEX)) 

(DECLARE (FLONUM JULIANS HHMMSS DDMMSS TMP X)) 

(SETQ BASE (+ 5. 5.)
      IBAS (+ 5. 5.)
      PI (*$ 4.0 (ATAN 1.0 1.0))
      TRACEF NIL
      ANGLEF NIL) 

;;;  Calculate GHA and DECLINATION and SEMI-DIAMETER of SUN.
;;;  Given time (UT) in days since 1975/01/01 U.T. 00:00:00
;;;  Result is list, (GHA DEC SD), numbers in decimal degrees.


(DEFUN SUN-POSITION (UT) 
       (PROG (ET ECC MEANA ECCEA GUESA TRUEA LAMBDM LAMBDA PERI
	      OMEGA OBLIQ PHI THETA GHAGAM SEMID RADVEC ABBER PARAL
	      NUT-OBLIQ NUT-LONGIT) 
	     (SETQ ET  (+$ UT ET-UT)
		   ECC  (ECCENTRICITY ET)
		   MEANA  (MEANANOM ET)
		   GUESA  (TRUEANOM MEANA ECC)
		   GUESA  (ECCENANOM GUESA MEANA ECC)
		   ECCEA  (ECCENANOM GUESA MEANA ECC)
		   TRUEA  (TRUEANOM ECCEA ECC)
		   PERI  (PERIGEE ET)
		   LAMBDM  (RANGE (+$ TRUEA PERI (PERTURB-L ET)))
		   OBLIQ  (OBLIQUITY ET))

	     (COND (TRACEF (PRINT (LIST 'ECCENTRICITY ECC))))
	     (COND (TRACEF (BARF 'MEAN-ANOMALY (RANGE MEANA))
			   (BARF 'ECCEN-ANOMALY (RANGE ECCEA))
			   (BARF 'TRUE-ANOMALY (RANGE TRUEA))
			   (BARF 'PERIGEE (RANGE PERI))
			   (BARF 'MEAN-OBLIQUITY OBLIQ)
			   (BARF 'MEAN-LONGITUDE (RANGE LAMBDM))))

	     (SETQ OMEGA (MOON-NODE ET)
		   NUT-OBLIQ (*$ (COSD OMEGA) 2.6E-3)
		   NUT-LONGIT  (*$ (SIND OMEGA) -4.7E-3)
		   OBLIQ  (+$ OBLIQ NUT-OBLIQ)
		   LAMBDA  (+$ LAMBDM NUT-LONGIT))

	     (COND (TRACEF (BARF 'MOON-NODE (RANGE OMEGA))
			   (BARF 'NUT-OBLIQUITY	NUT-OBLIQ)
			   (BARF 'NUT-LONGITUDE	NUT-LONGIT)
			   (BARF 'TRUE-OBLIQUITY OBLIQ)
			   (BARF 'TRUE-LONGITUDE (RANGE LAMBDA))))

	     (SETQ RADVEC  (RADIUS-VECTOR-T TRUEA ECC ET)
		   SEMID  (//$ 0.267 RADVEC)
		   PARAL  (//$ 2.4E-3 RADVEC)
		   ABBER  (//$ 5.7E-3 RADVEC)
		   LAMBDA   (-$ LAMBDA ABBER))

	     (COND (TRACEF (PRINT (LIST 'TRUE-DISTANCE RADVEC))))
	     (COND (TRACEF (BARF 'SEMI-DIAMETER SEMID)
			   (BARF 'PARALLAX PARAL)
			   (BARF 'ABBERATION ABBER)
			   (BARF 'APPARENT-LONGITUDE (RANGE LAMBDA))))

	     (SETQ PHI   (DECLINATION LAMBDA OBLIQ)
		   THETA   (RIGHT-ASCENSION LAMBDA OBLIQ)
		   GHAGAM   (RANGE (GHA-ARIES UT)))

	     (COND (TRACEF (BARF 'DECLINATION PHI)
			   (BARF 'RIGHT-ASCENSION (RANGE THETA))
			   (BARF 'MEAN-GHA-EQUINOX GHAGAM)))

	     (SETQ GHAGAM (+$ GHAGAM (*$ NUT-LONGIT (COSD OBLIQ)))
		   THETA (RANGE (-$ GHAGAM THETA)))

	     (COND (TRACEF (BARF 'TRUE-GHA-EQUINOX (RANGE GHAGAM))
			   (BARF 'TRUE-GHA-SUN THETA)
			   (BARF 'TRUE-DECLINATION-SUN PHI)))
	     (RETURN (LIST THETA PHI SEMID)))) 

;;;  CALCULATES ELEVATION AND AZIMUTH AT OBSERVERS LOCATION.
;;;  THETA1 PHI1 OBSERVERS LONGITUDE AND LATITUDE (decimal degrees).
;;;  THETA2 PHI2 CELESTIAL OBJECTS LONGITUDE AND LATITUDE (decimal degrees).
;;;  Result is list, (ELEV AZIM), numbers are decimal degrees.
;;;  (Does not take into account parallax and refraction)

(DEFUN SKY-ANGLES (THETA1 PHI1 THETA2 PHI2) 
       (LIST (ASIND (+$ (*$ (SIND PHI1) (SIND PHI2))
			(*$ (COSD PHI1)
			    (COSD PHI2)
			    (COSD (-$ THETA2 THETA1)))))
	     (ATANE (*$ (COSD PHI2) (SIND (-$ THETA2 THETA1)))
		    (-$ (*$ (COSD PHI1) (SIND PHI2))
			(*$ (SIND PHI1)
			    (COSD PHI2)
			    (COSD (-$ THETA2 THETA1))))))) 

;;; Calculate sun-elevation and sun-azimuth and semi-diameter.
;;; Given observer longitude and latitude, date and time.
;;; Input format: (A DD MM SS), (A DD MM SS), (YYYY MM DD), (HH MM SS).
;;;
;;; RETURNS (ELEVATION AZIMUTH SEMI),
;;; format ((A DD MM SS) (A DD MM SS) (A DD MM SS))
;;; AZIMUTH MEASURED CLOCKWISE FROM NORTH.

(DEFUN SUN (LONG LATI DATE HOURS) 
       (PROG (SUNPOS SKYANG) 
	     (SETQ SUNPOS (SUN-POSITION (+$ (JULIAN DATE)
					    (HHMMSS HOURS))) 
		   SKYANG (SKY-ANGLES (DDMMSS LONG)
				      (DDMMSS LATI)
				      (-$ 360.0 (CAR SUNPOS))
				      (CADR SUNPOS)))
	     (RETURN (LIST (ANGLED (CAR SKYANG))
			   (ANGLED (CADR SKYANG))
			   (ANGLED (CADDR SUNPOS)))))) 

(DEFUN BARF (A B)
       (PRINT (LIST A (COND (ANGLEF (ANGLED B))
			    (T B)))))


;;;  CALCULATE DAYS SINCE 1975/01/01 -- INPUT format (YY MM DD)
;;;  JULIAN DATE EQUALS RESULT PLUS 2442414.5

(DEFUN JULIAN (DATE) 
       (PROG (YEAR MONTH DAY DYR YRS) 
	     (SETQ YEAR (CAR DATE) MONTH (CADR DATE) DAY (CADDR DATE))
	     (SETQ DYR
		   (- (// (- 14. MONTH) 12.))
		   YRS
		   (+ DYR YEAR 4800.))
	     (RETURN (FLOAT (+ (- (// (* 367.
					 (- (- MONTH 2.) (* DYR 12.)))
				      12.)
				  (// (* 3. (1+ (// YRS 100.))) 4.))
			       (+ (// (* 1461. YRS) 4.)
				  (- DAY (+ 32075. 2442414.)))))))) 

;;; CALCULATE DATE, GIVEN DAYS SINCE 1975/01/01  -- OUTPUT format (YY MM DD)
;;; ARGUMENT IS (JULIAN DATE - 2442414.5)

(DEFUN DATED (JULIANS) 
       (PROG (LOFF NOFF IOFF JOFF KOFF) 
	     (SETQ LOFF
		   (+ (FIX JULIANS) 68569. 2442414.)
		   NOFF
		   (// (* LOFF 4.) 146097.)
		   LOFF
		   (- LOFF (// (+ (* 146097. NOFF) 3.) 4.))
		   IOFF
		   (// (* 4000. (1+ LOFF)) 1461001.)
		   LOFF
		   (- LOFF (- (// (* 1461. IOFF) 4.) 31.))
		   JOFF
		   (// (* 80. LOFF) 2447.)
		   KOFF
		   (- LOFF (// (* 2447. JOFF) 80.))
		   LOFF
		   (// JOFF 11.)
		   JOFF
		   (- JOFF (- (* 12. LOFF) 2.))
		   IOFF
		   (+ IOFF (* 100. (- NOFF 49.)) LOFF))
	     (RETURN (LIST IOFF JOFF KOFF)))) 

;;; NEGATE ANGLE IN FUNNY FORMAT

(DEFUN INVERT (L) 
       (COND ((EQUAL (CAR L) '+) (CONS '- (CDR L)))
	     ((EQUAL (CAR L) '-) (CONS '+ (CDR L)))
	     (T (PRINT 'ERROR-IN-ANGLE-FORMAT)))) 

;;; CONVERT FROM HOURS -- format (HH MM SS) -- TO DECIMAL DAYS.

(DEFUN HHMMSS (TIMED) 
       (//$ (+$ (FLOAT (CAR TIMED))
		(//$ (+$ (FLOAT (CADR TIMED))
			 (//$ (FLOAT (CADDR TIMED)) 60.0))
		     60.0))
	    24.0)) 

;;; CONVERT FROM DECIMAL DAYS TO HOURS -- format (HH MM SS).

(DEFUN TIMED (HHMMSS) 
       (PROG (HH MM SS TMP) 
	     (SETQ HHMMSS
		   (*$ 24.0 HHMMSS)
		   HH
		   (FIX HHMMSS)
		   TMP
		   (*$ 60.0 (-$ HHMMSS (FLOAT HH)))
		   MM
		   (FIX TMP)
		   TMP
		   (*$ 60.0 (-$ TMP (FLOAT MM)))
		   SS
		   (FIX (+$ 0.5 TMP)))
	     (RETURN (LIST HH MM SS)))) 

;;; CONVERT FROM ANGLE -- format (A DD MM SS) -- TO DECIMAL DEGREES.

(DEFUN DDMMSS (ANGLED) 
       (COND ((EQUAL (CAR ANGLED) '-)
	      (-$ 0.0 (DDMMSS (INVERT ANGLED))))
	     (T (+$ (FLOAT (CADR ANGLED))
		    (//$ (+$ (FLOAT (CADDR ANGLED))
			     (//$ (FLOAT (CADDDR ANGLED)) 60.0))
			 60.0))))) 

;;; CONVERT FROM DECIMAL DEGREES TO ANGLE -- format (A DD MM SS).

(DEFUN ANGLED (DDMMSS) 
       (PROG (DD MM SS TMP) 
	     (COND ((< DDMMSS 0.0)
		    (RETURN (INVERT (ANGLED (-$ 0.0 DDMMSS))))))
	     (SETQ DD
		   (FIX DDMMSS)
		   TMP
		   (*$ 60.0 (-$ DDMMSS (FLOAT DD)))
		   MM
		   (FIX TMP)
		   TMP
		   (*$ 60.0 (-$ TMP (FLOAT MM)))
		   SS
		   (FIX (+$ 0.5 TMP)))
	     (RETURN (LIST '+ DD MM SS)))) 

(DEFUN HOURS-TO-ANGLE (HOURS)
       (ANGLED (*$ 360.0 (HHMMSS HOURS))))

(DEFUN ANGLE-TO-HOURS (ANGLE)
       (COND ((EQUAL (CAR ANGLE) '-) (TIMED (+$ 1.0 (//$ (DDMMSS ANGLE) 360.0))))
	     ((EQUAL (CAR ANGLE) '+) (TIMED (//$ (DDMMSS ANGLE) 360.0)))
	     (T 'ERROR-IN-ANGLE))))

;;; Calculate MEAN GHA of vernal equinox -- given UNIVERSAL TIME

(DEFUN GHA-ARIES (TIME) 
       (+$ (*$ TIME 0.985647348) (*$ (FRACTION TIME) 360.0) 100.0215)) 

;;; Calculate geometric mean longitude of sun -- given EPHEMERIS TIME
;;; Not used now -- 

(DEFUN LONGITUDE (TIME) (+$ 280.0271 (*$ TIME 0.985647348))) 

;;; Calculate longitude of sun's perigee -- given EPHEMERIS TIME

(DEFUN PERIGEE (TIME) (+$ 282.5105 (*$ TIME 4.7087E-5))) 

;;; Calculate obliquity of ecliptic -- given EPHEMERIS TIME

(DEFUN OBLIQUITY (TIME) (-$ 23.4425 (*$ TIME 3.56E-7))) 

;;; Calculate longitude of moon's node -- given EPHEMERIS TIME

(DEFUN MOON-NODE (TIME) (-$ 248.59 (*$ TIME 0.0529538))) 

;;; Calculate eccentricity of earth orbit -- given EPHEMERIS TIME

(DEFUN ECCENTRICITY (TIME) (-$ 0.016720 (*$ TIME 1.15E-9))) 

;;; Calculate mean anomaly -- given EPHEMERIS TIME

(DEFUN MEANANOM (TIME) (+$ 357.5167 (*$ TIME 0.985600261))) 

;;; FIRST FEW TERMS IN PERTURBATION OF MEAN LONGITUDE OF SUN
;;; FROM TABLES OF SIMON NEWCOMB (1895)
;;; 
;;; MV, ME, MM, MJ ARE MEAN ANOMALIES OF VENUS, EARTH, MARS AND JUPITER.
;;; DD IS THE ELONGATION OF THE MOON FROM THE SUN.
;;; LP IS A LONG-PERIOD PLANETARY TERM

(DEFUN PERTURB-L (ET) 
       (PROG (MV ME MM MJ DD LP) 
	     (SETQ MV
		   (+$ 180.56 (*$ 1.6021302 ET))
		   ME
		   (+$ 357.52 (*$ 0.9856003 ET))
		   MM
		   (+$ 274.29 (*$ 0.5240208 ET))
		   MJ
		   (+$ 341.60 (*$ 0.0830912 ET))
		   DD
		   (+$ 218.02 (*$ 12.1907491 ET))
		   LP
		   (+$ 246.35 (*$ 5.5305E-4 ET)))
	     (RETURN (+$ (*$ 1.34E-3 (COSD (+$ 299.1 (-$ MV ME))))
			 (*$ 1.54E-3
			     (COSD (+$ 148.3
				       (-$ (*$ 2.0 MV) (*$ 2.0 ME)))))
			 (*$ 6.9E-4
			     (COSD (+$ 315.9
				       (-$ (*$ 2.0 MV) (*$ 3.0 ME)))))
			 (*$ 4.3E-4
			     (COSD (+$ 345.3
				       (-$ (*$ 3.0 MV) (*$ 4.0 ME)))))
			 (*$ 2.8E-4
			     (COSD (+$ 318.2
				       (-$ (*$ 3.0 MV) (*$ 5.0 ME)))))
			 (*$ 5.7E-4
			     (COSD (+$ 343.9
				       (-$ (*$ 2.0 ME) (*$ 2.0 MM)))))
			 (*$ 4.9E-4
			     (COSD (+$ 200.4 (-$ ME (*$ 2.0 MM)))))
			 (*$ 2.0E-3 (COSD (+$ 179.5 (-$ ME MJ))))
			 (*$ 7.2E-4 (COSD (-$ 263.2 MJ)))
			 (*$ 7.6E-4
			     (COSD (+$ 87.1
				       (-$ (*$ 2.0 ME) (*$ 2.0 MJ)))))
			 (*$ 4.5E-4
			     (COSD (+$ 109.5 (-$ ME (*$ 2.0 MJ)))))
			 (*$ 1.78E-3 (SIND LP))
			 (*$ 1.79E-3 (SIND DD)))))) 

;;; FIRST FEW TERMS IN PERTURBATION OF RADIUS-VECTOR
;;; FROM TABLES OF SIMON NEWCOMB (1895)
;;; 
;;; MV, ME, MM, MJ ARE MEAN ANOMALIES OF VENUS, EARTH, MARS AND JUPITER.
;;; DD IS THE ELONGATION OF THE MOON FROM THE SUN.

(DEFUN PERTURB-R (ET) 
       (PROG (MV ME MM MJ DD) 
	     (SETQ MV
		   (+$ 180.56 (*$ 1.6021302 ET))
		   ME
		   (+$ 357.52 (*$ 0.9856003 ET))
		   MM
		   (+$ 274.29 (*$ 0.5240208 ET))
		   MJ
		   (+$ 341.60 (*$ 0.0830912 ET))
		   DD
		   (+$ 218.02 (*$ 12.1907491 ET)))
	     (RETURN (+$ (*$ 1.6E-5
			     (COSD (+$ 58.3
				       (-$ (*$ 2.0 MV) (*$ 2.0 ME)))))
			 (*$ 1.6E-5 (COSD (+$ 89.5 (-$ ME MJ))))
			 (*$ 9.0E-6
			     (COSD (+$ 357.1
				       (-$ (*$ 2.0 ME) (*$ 2.0 MJ)))))
			 (*$ 3.1E-5 (COSD DD)))))) 

;;; Calculate true anomaly, given eccentric anomaly.
;;; (Also gives first approximation of eccentric anomaly from mean anomaly)

(DEFUN TRUEANOM (THETA ECC) 
       (*$ 2.0
	   (ATAND (*$ (SQRT (+$ 1.0 ECC)) (SIND (//$ THETA 2.0)))
		  (*$ (SQRT (-$ 1.0 ECC)) (COSD (//$ THETA 2.0)))))) 

;;; Calculate eccentric anomaly from mean anomaly.
;;; Iterative approximation to Kepler's transcendental equation.

(DEFUN ECCENANOM (THETA MEANA ECC) 
       (+$ MEANA (*$ (RAD-TO-DEG ECC) (SIND THETA)))) 

;;; Calculate declination given celestial longitude and obliquity

(DEFUN DECLINATION (LAMBD OBLIQ) 
       (ASIND (*$ (SIND LAMBD) (SIND OBLIQ)))) 

;;; Calculate right ascension given celestial longitude and obliquity

(DEFUN RIGHT-ASCENSION (LAMBD OBLIQ) 
       (ATAND (*$ (SIND LAMBD) (COSD OBLIQ)) (COSD LAMBD))) 

;;; Calculate radius-vector from sun to earth -- ECCENTRIC ANOMALY

(DEFUN RADIUS-VECTOR-E (ECCA ECC ET) 
       (+$ (-$ 1.0 (*$ (COSD ECCA) ECC)) (PERTURB-R ET))) 

;;; Calculate radius-vector from sun to earth -- TRUE ANOMALY

(DEFUN RADIUS-VECTOR-T (TRUEA ECC ET) 
       (+$ (//$ (-$ 1.0 (*$ ECC ECC)) (+$ 1.0 (*$ (COSD TRUEA) ECC)))
	   (PERTURB-R ET))) 

;;; Calculate change in elevation due to refraction.
;;; Fits data in Nautical Almanac.
;;; Sea-level, normal athmospheric pressure and temperature.
;;;
;;; NOT TO BE USED FOR ELEVATIONS BELOW ABOUT 10 DEGREES

(DEFUN REFRACTION-NA (ELEV) 
       (*$ (TAND (-$ 90.0 ELEV))
	   (+$ 0.016167 (*$ 1.7E-5 (SQUARE (TAND (-$ 90.0 ELEV))))))) 

;;; Calculate elevation of direction outside athmosphere from viewer elevation

(DEFUN ELEV-SPACE (ELEV) (ACOSD (*$ (COSD ELEV) INDEX))) 

;;; Calculate viewer elevation from direction outside athmosphere

(DEFUN ELEV-VIEW (ELEV) (ACOSD (//$ (COSD ELEV) INDEX))) 

;;; Calculate change in elevation due to refraction.
;;; Analytic Model. Does not take into account earth's curvature.

(DEFUN ELEVATION-AN (ELEV) (-$ ELEV (ELEV-SPACE ELEV))) 

(DEFUN SQUARE (X) (*$ X X)) 

;;; Restrict angle to 0.0 to 360.0 degree range.

(DEFUN RANGE (THETA) 
       (COND ((< THETA 0.0) (RANGE (+$ THETA 360.0)))
	     ((< THETA 360.0) THETA)
	     (T (RANGE (-$ THETA 360.0))))) 

(DEFUN RAD-TO-DEG (X) (*$ (//$ X PI) 180.0)) 

(DEFUN DEG-TO-RAD (X) (*$ (//$ X 180.0) PI)) 

(DEFUN SIND (X) (SIN (//$ (*$ PI X) 180.0))) 

(DEFUN COSD (X) (COS (//$ (*$ PI X) 180.0))) 

;;; RETURN RESULT BETWEEN 0 AND 360 DEGREES

(DEFUN ATANE (Y X) (*$ (//$ (ATAN Y X) PI) 180.0)) 

;;; RETURN RESULT BETWEEN -180 AND +180 DEGREES

(DEFUN ATAND (Y X) (*$ (-$ (//$ (ATAN (-$ Y) (-$ X)) PI) 1.0) 180.0)) 

(DEFUN TAND (X) (//$ (SIND X) (COSD X))) 

;;; RETURNS RESULT IN RANGE -90 TO +90 DEGREES

(DEFUN ASIND (X) (ATAND X (SQRT (-$ 1.0 (*$ X X))))) 

;;; RETURN RESULT IN RANGE 0 TO 180 DEGREES

(DEFUN ACOSD (X) (ATANE (SQRT (-$ 1.0 (*$ X X))) X)) 

(DEFUN FRACTION (X) (-$ X (FLOAT (FIX X)))) 

;;; ADD OFFSETS TO FIRST COMPONENT OF THREE-LIST.

(DEFUN UPDATE (L OFFSET) (LIST (+ (CAR L) OFFSET) (CADR L) (CADDR L))) 

;;; CALCULATE POSITION OF SUN AT PRESENT TIME, HERE.

(DEFUN SUN-NOW-HERE NIL 
       (SUN LONGITUDE
	    LATITUDE
	    (UPDATE (STATUS DATE) 1900.)
	    (UPDATE (STATUS DAYTIME) GMT-OFFSET))) 

;;; CALCULATE DAY OF WEEK FROM DAYS SINCE 1975/01/01
;;; MONDAY IS 1, TUESDAY IS 2, ... SUNDAY IS 7.

(DEFUN DAY-OF-WEEK (JULIANS) (1+ (REMAINDER (+ JULIANS 2.) 7.))) 

;;; CALCULATE DATE OF LAST SUNDAY IN PRESENT MONTH (WITH N DAYS)

(DEFUN LAST-SUNDAY (DATE N) 
       (- N
	  (PREMUTE (DAY-OF-WEEK (FIX (JULIAN (CONSTRUCT DATE N))))))) 

(DEFUN PREMUTE (N) (COND ((= N 7.) 0.) (T N))) 

(DEFUN CONSTRUCT (DATE N) 
       (CONS (CAR DATE) (CONS (CADR DATE) (CONS N NIL)))) 

;;; TO ADJUST FOR THAT CROCK CALLED DAY-LIGHT-SAVINGS TIME.
;;; SWITCH LAST SUNDAY OF APRIL AND LAST SUNDAY OF OCTOBER (?)

(DEFUN DAY-SAVE-CROCK (DATE) 
       (COND ((OR (< (CADR DATE) 4.)
		  (> (CADR DATE) 10.)
		  (AND (= (CADR DATE) 4.)
		       (< (CADDR DATE) (LAST-SUNDAY DATE 30.)))
		  (AND (= (CADR DATE) 10.)
		       (> (1- (CADDR DATE)) (LAST-SUNDAY DATE 31.))))
	      0.)
	     (T -1.))) 

;;; OFFSET OF EPHEMERIS TIME FROM UNIVERSAL TIME (1975/01/01)
;;; REFRACTIVE INDEX OF ATMOSPHERE AT STANDARD PRESSURE AND TEMPERATURE

(SETQ ET-UT 5.28E-4 INDEX 1.0002824) 

;;; GEOGRAPHICAL POSITION OF M.I.T. - A.I. LAB AND OFFSET FROM G.M.T.
;;; MODIFY TO YOUR OWN CONVENIENCE AND YOUR OWN LOCATION AND TIME SYSTEM.

(SETQ LONGITUDE '(- 71. 5. 20.)) 

(SETQ LATITUDE '(+ 42. 21. 50.)) 

;;; GIVE NORMAL OFFSET FROM G.M.T. IN HOURS AS SECOND ARGUMENT

(SETQ GMT-OFFSET (+ (DAY-SAVE-CROCK (UPDATE (STATUS DATE) 1900.)) 5.)) 

;;; CALCULATE POSITION OF SUN AT THIS TIME AND FOR THIS PLACE.

(SUN-NOW-HERE) 

<PACKAGE "AHELP">

<ENTRY ?? INFO-LIST>

<USE "APRINT" "AMAKE" "ACHECK">

<DEFINE ?? ("OPTIONAL" (FUNC GEN)
	    "AUX" (INFO <MEMQ .FUNC ,INFO-LIST>))
	<COND (.INFO <PRINC <2 .INFO>>)
	      (ELSE <PRINC "
	Never heard of it?
">)>
	,NULL>

<SETG INFO-LIST (GEN
			 
"
	The user functions in this collection include:

?? -	gives more detailed information about the functions listed
	below, if given one of them as argument, or prints this if no
	argument.

FILE-ABSTRACT - takes a file name or the name of a group and an
	optional output file name, and produces a file containing
	abstracts of each function or rsubr in the group, and an
	abstract of the entire group.

PRINT-ABSTR - Prints an abstract to a file or channel, returning the
	still-open channel in the latter case.

PPRINT-ABSTR - 'Pretty-prints' an abstract to a file or channel.

OLD-NEW - Converts a file of abstracts in the 'old' format into one in
	the new format.

CHECK-ABSTR - checks an abstract to see if the library processor will
	accept it.

CHECK-FILE - does a CHECK-ABSTR on every abstract in a file.

ABSTR-LOAD - loads a file of abstracts, similar to GROUP-LOAD.

ABSTR-DUMP - dumps a file of abstracts, similar to GROUP-DUMP.
"
			 ??
"	?? gives information.  No arguments gives general information,
a function-name as argument gives information about that function.
"
			 FILE-ABSTRACT
			 
"
	Takes two arguments:  (1) A STRING which is a file name or an
ATOM which is a group name, and (2) an optional STRING which is a file
name.  The first argument is the input and the second the output.
	FILE-ABSTRACT produces a file of abstracts of all the objects
in the file or group, and an abstract of the entire file or group.

	There are several switches which are useful:

RECORD -- if bound, it should be a string which is a file to send output
to instead of to the TTY.

AUTHOR -- if bound, it should be a string or vector of strings specifying
the author or authors to use in the abstracts being output.  Default is
<SNAME>.

OUTFILE -- if bound, performs the same function as the optional second
argument to FILE-ABSTRACT.

REDO -- if bound, a list of atoms, which are the names of the objects
to output abstracts of.  Useful if only a few abstracts in a package
want to be changed.  If the atom T is in the list, a new abstract of
the entire package will be output.
"

			 PRINT-ABSTR
			 
"
	PRINT-ABSTR takes an abstract in the vector form returned by
GEN-ABSTR and prints it with leading comments of the field names.
The second argument is an optional channel, default is .OUTCHAN.  This
is the print routine used by FILE-ABSTRACT.
"
			 PPRINT-ABSTR
"
	PPRINT-ABSTR prints an abstract in a 'human oriented' format.
It takes an abstract (in core) and a channel (default .OUTCHAN).
"
			 OLD-NEW
"
	OLD-NEW converts a file containing old style abstracts into one
containing new style abstracts.  That is, it adds a Ports field if one
is needed, a Notes field, and a space in the Description field for a
one-line description of the object.  It takes an input file and an
optional output file (default \"_ABST_ >\").
"
			 CHECK-ABSTR
"
	CHECK-ABSTR performs the library checking process on an abstract.
It prints anything it finds wrong or \"OKAY\" if the abstract is a winner.
"
			 CHECK-FILE
"
	CHECK-FILE performs a CHECK-ABSTR on each abstract in a file.
"
			 ABSTR-LOAD
"
	ABSTR-LOAD is analogous to EDIT's GROUP-LOAD, and takes the same
sequence of arguments:  a file spec, and an optional ATOM.  It makes a
list of all the abstracts in a file and makes that list the local value
of the group-name.
"
			 ABSTR-DUMP
"
	ABSTR-DUMP is analogous to EDIT's GROUP-DUMP.  It takes a file
spec, an optional ATOM whose value is the abstract list, and an optional
printing routine (which will be PRINT-ABSTR if not given explicitly).
The abstracts are output to the file.
")>

<ENDPACKAGE>

<PACKAGE "CALDES">

<ENTRY PDESC CALDESC TABMAP MASTER-DESC-FILE MASTER-DESC-CHAN>

<USE "CALCOM" "CALSYM" "LEX" "PMAP" "SDML">

<SETG ARRSTR "	=> ">

<SETG MASTER-DESC-FILE <COND (,TENEX "<MUDDLE>[DESC].MASTER") ("CALSUB;DESC MASTER")>>

<SETG MASTER-DESC-CHAN <>>

<DEFINE GETABFIL (NAM "AUX" VAL)
#DECL ((VALUE) <OR PMCHAN FALSE> (NAM) STRING (VAL) ANY)
<COND	(<OR <TYPE? ,MASTER-DESC-CHAN PMCHAN>
		<AND <SET VAL <SDMOPN ,MASTER-DESC-FILE>>
			<SETG MASTER-DESC-CHAN .VAL>>>
	<COND	(<AND	<TYPE? <SET VAL <SDMGET ,MASTER-DESC-CHAN .NAM>> STRING>
			<SET VAL <SDMOPN .VAL>>>)>)>>

<DEFINE FLSTABFIL ("OPTIONAL" (PCHAN <>))
<COND	(<TYPE? .PCHAN PMCHAN> <SDMDCT .PCHAN>)>
<COND	(<TYPE? ,MASTER-DESC-CHAN PMCHAN> <SDMDCT ,MASTER-DESC-CHAN>)>
T>




<DEFINE PDESC ("TUPLE" TABS "AUX" AT DAT)
	#DECL ((AT) ATOM (DAT) VECTOR (TABS) <TUPLE [REST SYMTABLE]>)
<MAPF <> <FUNCTION (TAB)
		#DECL ((TAB) SYMTABLE)
		<SET DAT <2 .TAB>>	;"data vector"
		<COND (<==? <SET AT <1 .TAB>> MSTOPS>
			<PDESC !.DAT>	;"data is vector of tables")
			(<==? .AT LSTOPS>
			<TABMAP .DAT 1 <3 .TAB>>)
			(<OR <==? .AT GSTOPS> <==? .AT BGSTOPS>>	;"GST types"
			<TABMAP <REST .DAT 2> <1 .DAT> <3 .TAB>>)
			(<TABMAP .DAT 2 <3 .TAB>>)>
	>
.TABS>
T>

<DEFINE TABMAP (DAT N TABNAM "AUX" TEM)
	#DECL ((TEM) ANY (DAT) VECTOR (N) FIX (VALUE) ATOM (TABNAM) STRING
	(TABFIL) <OR PMCHAN FALSE>)
<COND	(<SET VAL <GETABFIL .TABNAM>> <SET TABFIL .VAL>) (<SET TABFIL <>>)>
<COND	(<AND	<NOT <EMPTY? .DAT>> <TYPE? <1 .DAT> LEXTABLE>>
	<REPEAT ((UV <1 <1 .DAT>>) (LXTBL <1 .DAT>) NAM)
	#DECL ((UV) <UVECTOR [REST LEXID]> (LXTBL) LEXTABLE (NAM) STRING)
	<COND	(<OR <EMPTY? .UV> <NOT .TABFIL>> <RETURN>)
		(<AND	<SET TEM <LEX-GET .LXTBL <1 .UV> ,LEX-SCRATCH-STRING>>
			<TYPE? .TEM STRING>
			<SET TEM <SDMGETCHAN .TABFIL <SET NAM .TEM>>>>
		<TERPRI>
		<PRINC .NAM>
		<PRINTDAT .TEM>
		<COND	(<AND <TYPE? .TEM CHANNEL> <G? <1 .TEM> 0>>
			<CLOSE .TEM>)>)>
	<SET UV <REST .UV 1>>>)
	(<REPEAT ()
	<COND (<EMPTY? .DAT><RETURN>)
		(<SET TEM <OR <GET .DAT COMMENT>
				<AND .TABFIL <SDMGETCHAN .TABFIL <1 .DAT>>>>>
		 <TERPRI>
		 <PRINC <1 .DAT>>	;"only if comment exists"
		 <PRINTDAT .TEM>
		<COND	(<AND <TYPE? .TEM CHANNEL> <G? <1 .TEM> 0>> <CLOSE .TEM>)>)>
		<SET DAT <REST .DAT .N>>>)>
<FLSTABFIL .TABFIL>
T>

<DEFINE CALDESC ("TUPLE" TUP)
	#DECL ((TUP) <TUPLE [REST SYMBOL]>)
<COND (<EMPTY? .TUP>
	<PDESC ,COMTABLE>)
	(ELSE
	<MAPF <> <FUNCTION (S "AUX" (TAB <2 .S>) PCHAN VAL TEM)
		#DECL ((S) <PRIMTYPE VECTOR> (TAB VAL TEM) ANY (PCHAN) PMCHAN)
		<TERPRI>
		<COND (<TYPE? .TAB SYMTABLE>
			<PRINC "  ">
			<PRINC <3 .TAB>>	;"title"
			<PDESC .TAB>)
		      (ELSE		;"must be symbol"
			<TERPRI>
			<PRINC <1 .S>>	;"print symbol"
			<COND (<AND <SET TEM <GETSYMOFF <1 .S> ,COMTABLE>>
				<COND	(<SET VAL <GET <1 .TEM> COMMENT>>
					<PRINTDAT .VAL>)
					(<SET VAL <GETABFIL <2 .TEM>>>
					<SET PCHAN .VAL>
					<OR <AND <SET VAL <SDMGETCHAN .PCHAN <1 .S>>>
						<PRINTDAT .VAL>>
						<PRINC "	No info?">>
					<SDMDCT .PCHAN>)>>)
			      (ELSE <PRINC "	No info?">)> )>
		>
	.TUP>)>
<FLSTABFIL> T>

<DEFINE PRINTDAT (VAL "AUX" (OUTCHAN .OUTCHAN))
#DECL ((OUTCHAN) <SPECIAL CHANNEL> (VAL) ANY)
		<PRINC ,ARRSTR>
		<COND	(<TYPE? .VAL ATOM>
			<COND (<GASSIGNED? .VAL><PRINC ,.VAL>)
				(<ASSIGNED? .VAL><PRINC ..VAL>)>)
			(<TYPE? .VAL CHANNEL>
			<COND	(<G? <1 .VAL> 0> <FILECOPY .VAL .OUTCHAN>)>)

			(ELSE <PRINC .VAL>)>
>

<DEFINE GETSYMOFF (STR TAB "AUX" TST VAL)
	#DECL ((TST VALUE) <OR FALSE <PRIMTYPE VECTOR>>
		(STR) STRING
		(TAB) <PRIMTYPE VECTOR>)
	<COND (<==? <1 .TAB> MSTOPS>	;"if multiple, map/recurse"
		<MAPF <> <FUNCTION (TT)	
			<COND (<SET TST <GETSYMOFF .STR .TT>>
				<MAPLEAVE .TST>)> <>>
		<2 .TAB>>)
		(<==? <1 .TAB> LSTOPS>
		<COND	(<LEX-LOOKUP <1 <2 .TAB>> .STR>
			<PUT <PUT ,GETSYM2VCT 1 <1 <1 <2 .TAB>>>> 2 <3 .TAB>>)>)
		(<SET VAL <MEMBER .STR <2 .TAB>>>
		<PUT <PUT ,GETSYM2VCT 1 .VAL> 2 <3 .TAB>>)>>

<SETG GETSYM2VCT [0 0]>


<ENDPACKAGE>

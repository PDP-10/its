<PACKAGE "RJS">

<ENTRY MAKE-DEMON
       COMMAND-LOOP
       REPORT-TO DEMON-LOOP
	VERSION DEBUG
       CLEANUP
       OUTPUT-FETCH>



<USE "FTPUSR">

<USE "RJSDAT">

<USE "RJSTEL">

<USE "RJSCRD">

<USE "RJSUTI">

<USE "RJSJOB">

<USE "RJSRET">

<USE "RJSCHN">

<USE "STDMST">

<USE "RJSCMD">

<USE "NOW">

<USE "ICP">

<USE "LOGIN">

<MANIFEST COMMAND-TABLE>

<GDECL (COMMAND-TABLE) VECTOR (ERROR-HANDLER) HANDLER (VERSION) FIX>

<SETG COMMAND-TABLE <PUT <IVECTOR 14 0> 14 <ASCII 27>>>

<DEFINE MAKE-DEMON ( "AUX" S F)
	#DECL ((S) STRING (F) ANY)
<SETUP>
	<SETG DEBUG <>>
	<PRINC "VERSION NUMBER: ">
	<SET F <READ>><TERPRI><TERPRI>
	<COND (<TYPE? .F FIX>)(ELSE <SET F <ERROR VERSION-NOT-FIX-ERRET-FIX-TO-WIN>>)>
<SETG VERSION .F>
<PRINC "CREATING NETRJS DAEMON, VERSION: "><PRINC ,VERSION>
<TERPRI><PRINC "MUDDLE VERSION: "><PRINC ,MUDDLE>
<TERPRI><PRINC "FILE TO BE CREATED: ">
<PRINC <SET S <STRING "DSK:NETWRK;NETRJS " <UNPARSE .F> "SV" <UNPARSE ,MUDDLE>>>>
<TERPRI>
<COND (<=? <FSAVE 
	    .S> "SAVED">
	       <SETG DEBUG T>
	       T)
	      (ELSE <COND (<LOGIN ,DEMON-NAME><DEMON-LOOP><LOGOUT>)
			  (ELSE <COMMAND-LOOP>)>)>>

<DEFINE COMMAND-LOOP ("AUX" (READ-TABLE ,COMMAND-TABLE) C)
	#DECL ((READ-TABLE) <SPECIAL VECTOR> (INCHAN) <SPECIAL CHANNEL>
		(C) <OR FALSE CHANNEL>)
	<COND (<NOT ,DEBUG>
	       <COND (<GASSIGNED? ERROR-HANDLER> <OFF ,ERROR-HANDLER>)>
	       <SETG ERROR-HANDLER <ON "ERROR" ,ERROR-TRAP 4>>)>
	<SOAK>
	<PUT <2 <TOP .INCHAN>> 6 #LOSE *000000000015*>
	<OUTINFO INFORM
		 0
		 "MIT-DMS CCN-RJS INTERFACE, VERSION "
		 <UNPARSE ,VERSION>
		 ", "
		 <NOW>>
	<CMDDO>
	<COND (<SET C <OPEN "READ" ,JOB-INPUT-FILE>>
		<CLOSE .C><SETG NEWJOB T>)>
	<COND (,NEWJOB
	       <OUTINFO INFORM
			0
			"SIGNALLING SYSTEM TO WAKE UP DEMON">
	       <OR <DEMSIG ,DEMON-NAME>
		   <STDMST ,DEMON-NAME 1 0 1>
		   <OUTINFO INFORM 0 "DEMON NOT AVAILABLE, SORRY.">>)>
	<COND (<NOT ,DEBUG> <QUIT>)>>

<DEFINE DEMON-LOOP ("AUX" C JIN
			  (OUTCHAN
			   <COND (<AND <NOT ,DEBUG>
				       <OPEN "PRINT" 
					<USE-DATUM "NETRJS-SCRIPT-LOCATION">>>)
				 (ELSE .OUTCHAN)>))
   #DECL ((OUTCHAN) <SPECIAL CHANNEL> (C) FIX)
   <COND (<NOT ,DEBUG>
	  <COND (<GASSIGNED? ERROR-HANDLER> <OFF ,ERROR-HANDLER>)>
	  <SETG ERROR-HANDLER <ON "ERROR" ,ERROR-TRAP 4>>)>
   <COND
    (<PROG ERRLOC ()
       #DECL ((ERRLOC) <SPECIAL ACTIVATION>)
       <SOAK>
       <OUTINFO INFORM 0 "NETRJS DEMON VERSION " <UNPARSE ,VERSION> ", " <NOW>>
	<REPEAT ()
		<OR <RENAME "DSK:NETWRK;RJSAGN >" TO ,JOB-INPUT-FILE><RETURN>>>
       <REPEAT ()
	       <COND (<SETG INPUT <OPEN "READ" ,JOB-INPUT-FILE>>
		      <SETG SCRIPT <>>
		      <COND (<SET JIN
				  <PROG ERRLOC ()
					#DECL ((ERRLOC) <SPECIAL ACTIVATION>)
					<CMDDO>>>
			     <CLOSE ,INPUT>
			     <SETG INPUT <>>
			     <RENAME ,JOB-INPUT-FILE>)
			    (ELSE
			     <CLOSE ,INPUT>
			     <SETG INPUT <>>
			     <SET C <1 .JIN>>
			     <COND (<MEMQ .C '[601 701 504 403]>
				    <OUTINFO INFORM
					     0
					     "INPUT FAILED, WILL TRY LATER">
				    <RENAME ,JOB-INPUT-FILE TO "RJSAGN >">
				    <SETG LATER T>)
				   (<MEMQ .C '[401 404]>
				    <OUTINFO ERROR 0 "CAN'T SUBMIT JOB">
				    <RENAME ,JOB-INPUT-FILE TO "RJSLSR >">)
				   (<==? .C 301>
				    <OUTINFO INFORM
					     0
					     "SIGNON FAILED, WILL TRY LATER">
				    <RENAME ,JOB-INPUT-FILE TO "RJSAGN >">
				    <SETG LATER T>)
				   (ELSE <ERROR RJS-ERROR !.JIN>)>)>
		      <CLEANUP>)
		     (ELSE <RETURN>)>>
       <OUTINFO INFORM 0 "CHECKING FOR OUTPUT">
       <SET JIN
	    <PROG ERRLOC ()
		  #DECL ((ERRLOC) <SPECIAL ACTIVATION>
		(LERR\ !-INTERRUPTS) FRAME)
		  <OUTPUT-FETCH>>>
       <COND (<AND <NOT .JIN> <==? <1 .JIN> 501>>
	      <OUTINFO INFORM 0 "CCN ABORTED CONNECTION, WILL TRY LATER">)
	     (<NOT .JIN> <ERROR RJS-ERROR !.JIN>)>
       <COND (<SETG INPUT <OPEN "READ" ,JOB-INPUT-FILE>>
	      <CLOSE ,INPUT>
	      <SETG INPUT <>>
	      <COND (<NOT ,LATER>
		     <OUTINFO INFORM
			      0
			      "MORE JOB INPUT HAS ARRIVED,"
			      " REENTERING DEMON LOOP">
		     <AGAIN>)>)>
       <OUTINFO INFORM 0 "RESCHEDULING DEMON">
       <RESCHEDULE>
       <OUTINFO INFORM 0 "DEMON FINISHED, " <NOW>>
       T>)
    (ELSE
     <OUTINFO FATAL 0 "ERROR, FATAL (BUG) ">
		
	<REPORT-TO  "FATAL BUG DETECTED IN RJS DEMON-LOOP">
     <SETG BUGFATAL T>
     <RESCHEDULE>
     <RENAME .OUTCHAN "CRASH >">
     <LOGOUT>)>>

<DEFINE CLEANUP ("AUX" IL)
	#DECL ((IL) FIX)
	<SET IL <INT-LEVEL 8>>
	<COND (,TELNET-CHANNELS <SIGNOFF> <SETG TELNET-CHANNELS <>>)>
	<COND (,JOB-INPUT-CHANNEL
	       <CLOSE-CHAN ,JOB-INPUT-CHANNEL>
	       <SETG JOB-INPUT-CHANNEL <>>)>
	<COND (,FILE-INPUT-CHANNEL <CLOSE-CHAN ,FILE-INPUT-CHANNEL>)>
	<COND (,CARD-READER-CHANNEL
	       <CLOSE ,CARD-READER-CHANNEL>
	       <SETG CARD-READER-CHANNEL <>>)>
	<COND (,OUTPUT-CHANNEL
	       <CLOSE ,OUTPUT-CHANNEL>
	       <SETG OUTPUT-CHANNEL <>>)>
	<COND (,PNCHAN <CLOSE-CHAN ,PNCHAN> <SETG PNCHAN <>>)>
	<COND (,PUCHAN <CLOSE-CHAN ,PUCHAN> <SETG PUCHAN <>>)>
	<COND (,SCRIPT
	       <OUTINFO INFORM 0 "CLOSING SCRIPT">
	       <CLOSE-CHAN ,SCRIPT>
	       <SETG SCRIPT <>>)>
	<INT-LEVEL .IL>>

<DEFINE OUTPUT-FETCH ("AUX" (JD <REST <LOAD-JOB-DATA>>) ANS D C)
	#DECL ((JD) LIST (ANS) <OR ATOM FALSE> (VALUE) ATOM (C) FIX
	       (D) <OR FALSE VECTOR STRING>)
	<REPEAT ()
		<COND (<EMPTY? .JD> <RETURN T>)
		      (<JOB-EXIST? <1 .JD>>
		       <COND (<SET D <JOB-SCRIPT <1 .JD>>>
			      <SETG SCRIPT <GET-CHAN .D T>>
			      <OUTINFO INFORM
				       0
				       "SCRIPT OPEN TO "
				       <COND (<TYPE? .D STRING> .D)
					     (ELSE <UNPARSE .D>)>>)
			     (ELSE <SETG SCRIPT <>>)>
		       <SET ANS <PROG ERRLOC () <GET-OUTPUT <1 .JD>>>>
		       <COND (<NOT .ANS>
			      <SET C <1 .ANS>>
			      <COND (<MEMQ .C '[201 203 204 205 206 207]>
				     <OUTINFO ERROR
					      0
					      "OUTPUT SYNTAX UNPROCESSABLE">
				     <JOB-SUSPEND .SIGN>)
				    (<MEMQ .C '[502 209]>
				     <OUTINFO ERROR
					      0
					      "CAN'T OPEN OUTPUT FROM CCN">
				     <SETG LATER T>)
				    (<==? .C 301>
				     <OUTINFO INFORM 0 "SIGNON FAILED">
				     <SETG LATER T>)
				    (<MEMQ .C '[601 208]>
				     <OUTINFO INFORM
					      0
					      "CANNOT OPEN OUTPUT VIA FTP,"
					      " WILL TRY LATER">
				     <SETG LATER T>)
				    (<==? .C 701>
				     <OUTINFO INFORM
					      0
					      "DATA BASE LOCKED,"
						" WILL TRY LATER">
				     <SETG LATER T>)
				    (ELSE <ERROR RJS-ERROR !.ANS>)>)>)>
		<CLEANUP><SET JD <REST .JD 2>>>>

<DEFINE GET-OUTPUT (SIGN "AUX" JOBS ANS C)
	#DECL ((JOBS) <UVECTOR [REST FIX]> (SIGN) STRING (C) FIX
	       (ANS) <OR ATOM FALSE>)
	<PROG ()
	      <SIGNON .SIGN>
	      <SET JOBS <STATUS-JOBS>>
	      <COND (<OR <N==? <2 .JOBS> 0> <N==? <1 .JOBS> 0>>
		     <OUTINFO INFORM 0 "JOB OUTPUT AVAILABLE">
		     <COND (<SETG OUTPUT-CHANNEL
				  <OPEN "READB"
					<+ 1 <3 <2 ,TELNET-CHANNELS>>>	  ;"U+4"
					<+ 2 <4 <1 ,TELNET-CHANNELS>>>	  ;"S+3"
					"NET"
					65
					8>>
			    <OUTINFO INFORM 0 "OUTPUT CONNECTION OPEN TO CCN">
			    <OUTINFO SUCCESS
				     0
				     "PRINTER TRANSFER COMPLETE, "
				     <GET-DATA ,OUTPUT-CHANNEL>
				     " BYTES TRANSFERRED.">
			    <CLEANUP>
			    <JOB-REMOVE ,JOBNAME .SIGN>
			    <AGAIN>)
			   (ELSE
			    <ERROR RJS-ERROR
				   209
				   "CAN'T OPEN OUTPUT FROM CCN">)>)>
	      <SIGNON .SIGN>
	      <SET JOBS <STATUS-JOBS>>
	      <COND (<G? <+ !.JOBS> 0> <SETG MORE T>)
			(ELSE <JOB-SET-EXIST .SIGN <>>)>
	      <SIGNOFF> T>>

<DEFINE ERROR-TRAP (FRM "TUPLE" ARGS "ACT" ERRACT)
	#DECL ((ERRLOC) ACTIVATION (FRM) FRAME (ARGS) TUPLE
		(LERR\ !-INTERRUPTS) FRAME)
	<COND (<AND <GASSIGNED? DEBUG> ,DEBUG>
	       <PRINC "PASSING ERROR TO HIGHER REP LEVEL.">
	       <TERPRI>
	       T)
	      (<AND <ASSIGNED? ERRLOC> <LEGAL? .ERRLOC>
			<==? <1 .ARGS> RJS-ERROR>>
	       <INT-LEVEL 0>
	       <RETURN <CHTYPE (<2 .ARGS> <3 .ARGS>) FALSE> .ERRLOC>)
	      (ELSE <OUTINFO ERROR 0 "FATAL ERROR, BUG">
		<SETG BUGFATAL T>
		<SET LERR\ !-INTERRUPTS <CHTYPE .ERRACT FRAME>>
	<REPORT-TO "FATAL BUG DETECTED IN ERROR-TRAP">
	<BUFOUT .OUTCHAN>
		<LOGOUT>)>>


<DEFINE REPORT-TO (RPRT "AUX" C)
#DECL ((RPRT) STRING (C) <OR FALSE CHANNEL>)
<COND (<SET C <OPEN "PRINT" !<USE-DATUM "COMSYS-INPUT-FILE">>>
       <PRINC "\"TO\" \"NETRJS-MAINTAINER\"
 \"FROM\" \"NETRJS\"
\"SUBJECT\" \"Daemon Crash\"
\"TEXT\" "
.C>
       <PRINT .RPRT .C>
	<PRINC "\"SCHEDULE\" (\"SENDING\")" .C >
	<CLOSE .C>)>
T>

<ENDPACKAGE>

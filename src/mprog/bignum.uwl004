
;"Addition routine for extended precision numbers.  Takes two uvectors of integers,
and treats them as positional numbers base 1,000,000,000.  The result is also a uvector."
<TITLE ADD!-BIGNUM!->
	<DECLARE ("VALUE" <UVECTOR [REST FIX]>
		<UVECTOR [REST FIX]><UVECTOR [REST FIX]>)>
	<ENTER 2>
	<MOVE	A* (AB)1>
	<MOVE	B* (AB)3>
	<CAML	A* B>
	<MOVE	A* B>
	<HLRE	A* A>
	<MOVMS	A* A>
	<AOS	A>
	<PUSH	TP* $TFIX>
	<PUSH	TP* A>
	<MCALL	1 IUVECTOR>
	<MOVE	O* B>
	<HLRE	C* B>
	<SUBI	B* (C)>
	<MOVSI	C* TFIX>
	<MOVEM	C* (B)>
	<MOVE	C* (AB)1>
	<HLRE	D* C>
	<SUBI	C* (D)>
	<MOVE	D* (AB)3>
	<HLRE	E* D>
	<SUBI	D* (E)>
A1	<SETZI	E*>
A2	<ADDI	B* -1>
	<ADDI	D* -1>
	<ADDI	C* -1>
	<JUMPG	D* A7>
	<SKIPG	C>
A3	<ADD	E* (C)>
	<ADD	E* (D)>
A5	<CAML	E* [1000000000]>
	<JRST	A6>
	<MOVEM	E* (B)>
	<JRST	A1>
A6	<SUB	E* [1000000000]>
	<MOVEM	E* (B)>
	<SETZI	E*>
	<AOJA	E* A2>
A7	<JUMPG	C* A8>
	<ADD	E* (C)>
	<JRST	A5>
A8	<MOVEM	E* (B)>
	<MOVE	B* 0>
A9	<SKIPN	(B)>
	<AOBJN	B* A9>
	<JRST	FINIS>

#FALSE ()

;"Subtraction routine for extended precision numbers.  Takes two uvectors, base
1,000,000,000. , and subtracts the second from the first, returning a uvector."

<TITLE SUB!-BIGNUM!->
	<DECLARE ("VALUE" <UVECTOR [REST FIX]>
		<UVECTOR [REST FIX]><UVECTOR [REST FIX]>)>
	<ENTER 2>
	<MOVE	A* (AB)1>
	<MOVE	B* (AB)3>
	<CAML	A* B>
	<MOVE	A* B>
	<HLRE	A* A>
	<MOVMS	A* A>
	<PUSH	TP* $TFIX>
	<PUSH	TP* A>
	<MCALL	1 IUVECTOR>
	<MOVE	O* B>
	<HLRE	C* B>
	<SUBI	B* (C)>
	<MOVSI	C* TFIX>
	<MOVEM	C* (B)>
	<MOVE	C* (AB)1>
	<HLRE	D* C>
	<SUBI	C* (D)>
	<MOVE	D* (AB)3>
	<HLRE	E* D>
	<SUBI	D* (E)>
S1	<SETZI	E*>
S2	<ADDI	B* -1>
	<ADDI	D* -1>
	<ADDI	C* -1>
	<JUMPG	D* S7>
	<SKIPG	C>
S3	<ADD	E* (C)>
	<SUB	E* (D)>
S5	<JUMPL	E* S6>
	<MOVEM	E* (B)>
	<JRST	S1>
S6	<ADD	E* [1000000000]>
	<MOVEM	E* (B)>
	<SETOI	E*>
	<JRST	S2>
S7	<JUMPG	C* S8>
	<ADD	E* (C)>
	<JRST	S5>
S8	<MOVE	B* 0>
S9	<SKIPN	(B)>
	<AOBJN	B* S9>
	<SKIPL	E>
	<JRST	FINIS>
	<PUSH	TP* $TATOM>
	<PUSH	TP* <MQUOTE RESULT-NEGATIVE>>
	<JRST	CALER1>

#FALSE ()

;"Multiplication routine for multiple precision numbers.  Takes two uvectors, base
1,000,000,000. , and gives there product as a uvector."

<TITLE MULT!-BIGNUM!->
	<DECLARE ("VALUE" <UVECTOR [REST FIX]>
		<UVECTOR [REST FIX]><UVECTOR [REST FIX]>)>
	<ENTER 2>
	<MOVE	A* (AB)1>
	<MOVE	B* (AB)3>
	<ADD	A* B>
	<HLRE	A* A>
	<MOVMS	A* A>
	<PUSH	TP* $TFIX>
	<PUSH	TP* A>
	<MCALL	1 IUVECTOR>
	<PUSH	TP* A>
	<PUSH	TP* B>
	<HLRE	C* B>
	<SUBI	B* (C)>
	<MOVSI	C* TFIX>
	<MOVEM	C* (B)>
	<MOVE	C* (AB)1>
	<HLRE	D* C>
	<SUBI	C* (D)>
	<MOVE	A* (AB)3>
	<HLRE	E* A>
	<SUBI	A* (E)>
	<MOVE	O* B>
M1	<ADDI	A* -1>
	<JUMPG	A* M4>
M2	<ADDI	C* -1>
	<ADDI	B* -1>
	<JUMPG	C* M3>
	<MOVE	D* (A)>
	<MUL	D* (C)>
	<DIV	D* [1000000000]>
	<ADD	E* (B)>
	<CAML	E* [1000000000]>
	<JRST	M5>
M7	<MOVEM	E* (B)>
	<ADD	D* (B)-1>
	<CAML	D* [1000000000]>
	<JRST	M6>
	<MOVEM	D* (B)-1>
	<JRST	M2>
M3	<ADDI	O* -1>
	<MOVE	B* 0>
	<MOVE	C* (AB)1>
	<HLRE	D* C>
	<SUBI	C* (D)>
	<JRST	M1>
M4	<POP	TP* B>
	<POP	TP* A>
M9	<SKIPN	(B)>
	<AOBJN	B* M9>
	<JRST	FINIS>
M5	<SUB	E* [1000000000]>
	<AOJA	D* M7>
M6	<SUB	D* [1000000000]>
	<AOS	(B)-2>
	<MOVEM	D* (B)-1>
	<JRST	M2>

#FALSE ()
;"Little division routine for extended precision numbers.  Takes an extended precision
uvector (base 1,000,000,000.) and a fix number.  It divides the extended number by the
fix, and returns a vector whose first element is the dividend (uvector) and the second
element is the remainder."

<TITLE LDIV!-BIGNUM!->
	<DECLARE ("VALUE" <VECTOR <UVECTOR [REST FIX]> FIX>
		<UVECTOR [REST FIX]> FIX)>
	<ENTER	2>
	<MOVE	A* (AB)1>
	<HLRE	B* A>
	<MOVMS	B* B>
	<PUSH	TP* $TFIX>
	<PUSH	TP* B>
	<MCALL	1 IUVECTOR>
	<PUSH	TP* A>
	<PUSH	TP* B>
	<MOVE	A* (AB)1>
	<MOVE	E* (AB)3>
	<SETZB	C* D>
LP	<ADD	D* (A)>
	<DIV	C* E>
	<MOVEM	C* (B)>
	<AOBJP	A* END>
	<MOVE	C* D>
	<MUL	C* [1000000000]>
	<AOBJN	B* LP>
END	<MOVE	A* (TP)>
X	<SKIPN	(A)>
	<AOBJN	A* X>
	<MOVEM	A* (TP)>
	<PUSH	TP* $TFIX>
	<PUSH	TP* D>
	<MOVSI	A* TFIX>
	<MOVEM	A* (B)1>
	<MCALL	2 VECTOR>
	<JRST	FINIS>

#FALSE ()
;"Less than comparison for two extended precision numbers (uvectors, base 1,000,000,000.).
Returns T if first less than second, else #FALSE ()"

<TITLE LESS!-BIGNUM!->
	<DECLARE ("VALUE" <OR ATOM FALSE>
		<UVECTOR [REST FIX]><UVECTOR [REST FIX]>)>
	<ENTER 2>
	<MOVE	A* (AB)1>
	<MOVE	B* (AB)3>
L1	<HLRE	C* A>
L2	<HLRE	D* B>
	<CAME	C* D>
	<JRST	L6>
L3	<MOVE	C* (A)>
	<CAME	C* (B)>
	<JRST	L8>
	<AOBJP	A* L4>
L4	<AOBJN	B* L3>
L5	<MOVSI	A* TFALSE>
	<SETZI	B*>
	<JRST	FINIS>
L6	<CAMG	C* D>
	<JRST	L9>
	<SKIPN	D* (B)>
	<AOBJN	B* L2>
	<JUMPG	B* L5>
L7	<MOVSI	A* TATOM>
	<MOVE	B* <MQUOTE T>>
	<JRST	FINIS>
L8	<CAML	C* (B)>
	<JRST	L5>
	<JRST	L7>
L9	<SKIPN	C* (A)>
	<AOBJN	A* L1>
	<JRST	L5>

#FALSE ()

;"General comparison between two extended precision numbers (uvectors, base 1,000,000,000.).
Returns -1 if first less than second, 0 if equal, 1 otherwise."

<TITLE COMPARE!-BIGNUM!->
	<DECLARE ("VALUE" FIX
		<UVECTOR [REST FIX]><UVECTOR [REST FIX]>)>
	<ENTER 2>
	<MOVE	A* (AB)1>
	<MOVE	B* (AB)3>
L1	<HLRE	C* A>
L2	<HLRE	D* B>
	<CAME	C* D>
	<JRST	L6>
L3	<MOVE	C* (A)>
	<CAME	C* (B)>
	<JRST	L8>
	<AOBJP	A* L4>
L4	<AOBJN	B* L3>
L5	<MOVSI	A* TFIX>
	<SETZI	B*>
	<JRST	FINIS>
L6	<CAMG	C* D>
	<JRST	L9>
	<SKIPN	D* (B)>
	<AOBJN	B* L2>
	<JUMPG	B* L5>
L7	<MOVSI	A* TFIX>
	<SETOI	B*>
	<JRST	FINIS>
L8	<CAML	C* (B)>
	<JRST	L10>
	<JRST	L7>
L9	<SKIPN	C* (A)>
	<AOBJN	A* L1>
	<JUMPG	A* L5>
L10	<MOVSI	A* TFIX>
	<MOVEI	B* 1>
	<JRST	FINIS>

#FALSE ()

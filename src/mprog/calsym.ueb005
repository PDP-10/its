
<PACKAGE "CALSYM">

<ENTRY MAKEBST
       BSTOPS
       BSTSORT
       BGSTOPS
       BGSTSORT
       MAKEBGST
       MAKESST
       SSTOPS
       MAKEMST
       MSTOPS
       MAKEGST
       GSTOPS
       SYMBOL
       SYMTABLE
       READER-SILENCE
       CURXCHAN
       CALICO-DEV
       CALICO-SNM
       CALICO-NM1
       CALICO-NM2
       PROMPT1
       PROMPT2
       MUDPRM
       DSPLEVEL
       SAVEREP
       COMPS
       SORTCHK
       STRCOMP-NC
       TENEX>

<USE "SORTX">

<NEWTYPE SYMTABLE VECTOR '<VECTOR ATOM [REST ANY]>>

<NEWTYPE SYMBOL VECTOR '<VECTOR STRING ANY>>

<SETG TENEX <>>

<SET CURXCHAN <>>

<SET DSPLEVEL 0>

<SET CALICO-DEV "DSK">

<SET CALICO-SNM ,SNM>

<SET CALICO-NM1 ,SNM>

<SET CALICO-NM2 !">>

<DEFINE SSTOPS (OPCODE
		"TUPLE" ARGS
		"AUX" (OPLIST '[SSTLKP SSTEVAL SSTPOSSYM SSTPRINT SSTEXACT SSTALLPOSS]))
	#DECL ((OPCODE) FIX (ARGS) TUPLE (OPLIST) <VECTOR [REST ATOM]>)
	<COND (<AND <G? .OPCODE 0> <L=? .OPCODE <LENGTH .OPLIST>>>
	       <APPLY ,<NTH .OPLIST .OPCODE> !.ARGS>)>>

<DEFINE SSTLKP (STR COUNT TABLE RETURNS "AUX" (N 1) CSTR TEMP) 
	#DECL ((STR CSTR) STRING (TABLE) <VECTOR [REST STRING ANY]>
	       (COUNT TEMP N) FIX (RETURNS VALUE) <VECTOR FIX ANY STRING FIX>)
	<PUT .RETURNS 1 0>
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <RETURN .RETURNS>)
		      (<=? <COMPS .STR <SET CSTR <1 .TABLE>> .COUNT> .COUNT>
		       <COND (<=? .COUNT <LENGTH .CSTR>>
			      <PUT .RETURNS 1 3>
			      <PUT .RETURNS 2 .N>
			      <PUT .RETURNS 3 .CSTR>
			      <PUT .RETURNS 4 .COUNT>
			      <RETURN .RETURNS>)
			     (<0? <SET TEMP <1 .RETURNS>>>
			      <PUT .RETURNS 1 1>
			      <PUT .RETURNS 2 .N>
			      <PUT .RETURNS 3 .CSTR>
			      <PUT .RETURNS 4 <LENGTH .CSTR>>)
			     (ELSE
			      <PUT .RETURNS 1 2>
			      <COND (<L? <SET TEMP <COMPS .CSTR <3 .RETURNS>>>
					 <4 .RETURNS>>
				     <PUT .RETURNS 4 .TEMP>)>
			      <COND (<G? <LENGTH .CSTR> <LENGTH <3 .RETURNS>>>
				     <PUT .RETURNS 2 .N>
				     <PUT .RETURNS 3 .CSTR>)>)>)>
		<SET N <+ 1 .N>>
		<SET TABLE <REST .TABLE 2>>>>


<DEFINE SSTALLPOSS (STR CNT TBL)
	#DECL ((STR) STRING (CNT N) FIX (TBL) <VECTOR [REST STRING ANY]>)
	     <MAPR ,LIST
		   <FUNCTION (X) 
			   <COND (<0? <MOD <LENGTH .X> 2>>
				  <COND (<=? <COMPS .STR <1 .X> .CNT> .CNT>
					 <CHTYPE [<1 .X> <2 .X>] SYMBOL>)
					(<MAPRET>)>)
				 (<MAPRET>)>>
		   .TBL>>

<DEFINE SSTPOSSYM (STR CNT TBL "OPTIONAL" (S1 "") (S2 "") "AUX" (N 0)) 
	#DECL ((STR S1 S2) STRING (VALUE CNT N) FIX
	       (TBL) <VECTOR [REST STRING ANY]>)
	<REPEAT ()
		<COND (<EMPTY? .TBL> <COND (<0? .N> <PRINC .S2>)> <RETURN .N>)
		      (<=? <COMPS .STR <1 .TBL> .CNT> .CNT>
		       <COND (<0? .N> <PRINC .S1>)>
		       <PRINC <1 .TBL>>
		       <TERPRI>
		       <SET N <+ .N 1>>)>
		<SET TBL <REST .TBL 2>>>>

<DEFINE SSTEVAL (SYMBID SYMBOLS "AUX" (T1 <* 2 .SYMBID>) (T2 <- .T1 1>)) 
	#DECL ((SYMBID T1 T2) FIX (SYMBOLS) <VECTOR [REST STRING ANY]>
	       (VALUE) SYMBOL)
	<CHTYPE [<NTH .SYMBOLS .T2> <NTH .SYMBOLS .T1>] SYMBOL>>

<DEFINE SSTPRINT (TABLE "AUX" TEMP (POS 0) (LINESIZE <13 .OUTCHAN>)) 
	#DECL ((TABLE) <VECTOR [REST STRING ANY]> (TEMP POS LINESIZE) FIX)
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <TERPRI> <RETURN T>)
		      (<AND <G? <+ .POS <SET TEMP <+ 4 <LENGTH <1 .TABLE>>>>>
				.LINESIZE>
			    <G? .POS 0>>
		       <SET POS 0>
		       <TERPRI>)>
		<SET POS <+ .POS .TEMP>>
		<PRINC "    ">
		<PRINC <1 .TABLE>>
		<SET TABLE <REST .TABLE 2>>>>

<DEFINE SSTEXACT (STR TABLE "AUX" (L <LENGTH .STR>)) 
	#DECL ((STR) STRING (TABLE) VECTOR (L) FIX (VALUE) <OR FALSE SYMBOL>)
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <RETURN <>>)
		      (<==? <COMPS <1 .TABLE> .STR> .L>
		       <RETURN <CHTYPE [<1 .TABLE> <2 .TABLE>] SYMBOL>>)
		      (ELSE <SET TABLE <REST .TABLE 2>>)>>>

<DEFINE MAKESST (TITLE CONTENTS "OPTIONAL" (KILLER <>)) 
	#DECL ((TITLE) STRING (CONTENTS) <VECTOR [REST STRING ANY]>
	       (SSTOPS) FUNCTION (VALUE) SYMTABLE)
	<CHTYPE [SSTOPS .CONTENTS .TITLE .KILLER] SYMTABLE>>

<DEFINE MSTOPS (OPCODE
		"TUPLE" ARGS
		"AUX" (OPLIST [MSTLKP MSTEVAL MSTPOSSYM MSTPRINT MSTEXACT MSTALLPOSS]))
	#DECL ((OPCODE) FIX (ARGS) TUPLE (OPLIST) <VECTOR [REST ATOM]>)
	<COND (<AND <G? .OPCODE 0> <L=? .OPCODE <LENGTH .OPLIST>>>
	       <APPLY ,<NTH .OPLIST .OPCODE> !.ARGS>)>>

<DEFINE MSTLKP (STR LEN TABLE INFO "AUX" TEMP (N 1) (TINFO [0 0 "" 0])) 
	#DECL ((STR) STRING (LEN TEMP N) FIX
	       (VALUE TINFO INFO) <VECTOR FIX ANY STRING FIX>
	       (TABLE) <VECTOR [REST SYMTABLE]>)
	<PUT .INFO 1 0>
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <RETURN .INFO>)>
		<APPLY ,<1 <1 .TABLE>> 1 .STR .LEN <2 <1 .TABLE>> .TINFO>
		<SET TEMP <1 .TINFO>>
		<COND (<0? .TEMP>)
		      (<OR <=? .TEMP 3> <0? <1 .INFO>>>
		       <PUT .INFO 2 [.N <2 .TINFO>]>
		       <PUT .INFO 3 <3 .TINFO>>
		       <PUT .INFO 4 <4 .TINFO>>
		       <COND (<=? .TEMP 3> <RETURN <PUT .INFO 1 3>>)
			     (ELSE <PUT .INFO 1 .TEMP>)>)
		      (ELSE
		       <PUT .INFO 1 2>
		       <PUT .INFO
			    4
			    <COMPS <3 .INFO>
				   <3 .TINFO>
				   <MIN <4 .INFO> <4 .TINFO>>>>
		       <COND (<G? <LENGTH <3 .TINFO>> <LENGTH <3 .INFO>>>
			      <PUT .INFO 2 [.N <2 .TINFO>]>
			      <PUT .INFO 3 <3 .TINFO>>)>)>
		<SET N <+ .N 1>>
		<SET TABLE <REST .TABLE>>>>

<DEFINE MSTEVAL (ID TABLE "AUX" (TBLNUM <1 .ID>)) 
	#DECL ((ID) <VECTOR FIX ANY> (TBLNUM) FIX (VALUE) SYMBOL
	       (TABLE) <VECTOR [REST SYMTABLE]>)
	<APPLY ,<1 <NTH .TABLE .TBLNUM>>
	       2
	       <2 .ID>
	       <2 <NTH .TABLE .TBLNUM>>>>

<DEFINE MSTALLPOSS (STR CNT TABLE
		   "AUX" (N 0) TEMP)
	#DECL ((STR) STRING (CNT N TEMP) FIX
	       (TABLE) <VECTOR [REST SYMTABLE]>)
	<MAPF ,LIST
	    <FUNCTION (X)
		 <COND (<SET RES
			    <APPLY ,<1 .X>
				   6
				  .STR
				  .CNT
				  <2 .X>>>
			<MAPRET !.RES>)
		       (<L? .CNT 0> T)
		       (<MAPRET>)
		       >>
	    .TABLE>>

<DEFINE MSTPOSSYM (STR CNT TABLE
		   "OPTIONAL" (S1 "") (S2 "")
		   "AUX" (TS1 .S1) (N 0) TEMP)
	#DECL ((STR S1 S2 TS1) STRING (CNT N TEMP VALUE) FIX
	       (TABLE) <VECTOR [REST SYMTABLE]>)
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <COND (<0? .N> <PRINC .S2>)> <RETURN .N>)
		      (<NOT <0? <SET TEMP
				     <APPLY ,<1 <1 .TABLE>>
					    3
					    .STR
					    .CNT
					    <2 <1 .TABLE>>
					    .TS1>>>>
		       <SET N <+ .N .TEMP>>
		       <SET TS1 "">)>
		<SET TABLE <REST .TABLE>>>>

<DEFINE MSTPRINT (TABLE "OPTIONAL" (N 0) "AUX" (I 0)) 
	#DECL ((N I) FIX (VALUE) ATOM (TABLE) <VECTOR [REST SYMTABLE]>)
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <RETURN T>)
		      (<OR <0? .N> <=? .N .I>>
		       <COND (<G=? <LENGTH <1 .TABLE>> 3>
			      <PRINC <3 <1 .TABLE>>>
			      <TERPRI>)>
		       <APPLY ,<1 <1 .TABLE>> 4 <2 <1 .TABLE>>>)>
		<SET I <+ .I 1>>
		<SET TABLE <REST .TABLE>>>>

<DEFINE MSTEXACT (STR TABLE "AUX" TEMP) 
	#DECL ((STR) STRING (TABLE) <VECTOR [REST SYMTABLE]>
	       (TEMP VALUE) <OR SYMBOL FALSE>)
	<REPEAT ()
		<COND (<EMPTY? .TABLE> <RETURN <>>)
		      (<SET TEMP <APPLY ,<1 <1 .TABLE>> 5 .STR <2 <1 .TABLE>>>>
		       <RETURN .TEMP>)
		      (ELSE <SET TABLE <REST .TABLE>>)>>>

<DEFINE MAKEMST (TITLE CONTENTS "OPTIONAL" (KILLER <>)) 
	#DECL ((TITLE) STRING (CONTENTS) <VECTOR SYMTABLE> (MSTOPS) FUNCTION
	       (VALUE) SYMTABLE)
	<CHTYPE [MSTOPS .CONTENTS .TITLE .KILLER] SYMTABLE>>

<DEFINE GSTOPS (OPCODE "TUPLE" ARGS) 
	#DECL ((OPCODE) FIX (ARGS) TUPLE)
	<COND (<1? .OPCODE> <GSTLKP !.ARGS>)
	      (<==? .OPCODE 2> <GSTEVAL !.ARGS <>>)
	      (<==? .OPCODE 3> <GSTPOSSYM !.ARGS>)
	      (<==? .OPCODE 4> <GSTPRINT !.ARGS>)
	      (<==? .OPCODE 5> <GSTEXACT !.ARGS>)
	      (<==? .OPCODE 6> <GSTALLPOSS !.ARGS>)>>

<DEFINE GSTLKP (STR COUNT TABLE RETURNS
		"AUX" (N 2) CSTR TEMP (SYMSIZ <1 .TABLE>)
		      (SYMNAMS <REST .TABLE 2>))
	#DECL ((STR CSTR) STRING (TABLE) <VECTOR FIX ANY> (SYMNAMS) VECTOR
	       (COUNT TEMP N SYMSIZ) FIX
	       (RETURNS VALUE) <VECTOR FIX ANY STRING FIX>)
	<PUT .RETURNS 1 0>
	<REPEAT ()
		<COND (<EMPTY? .SYMNAMS> <RETURN .RETURNS>)
		      (<=? <COMPS .STR <SET CSTR <1 .SYMNAMS>> .COUNT> .COUNT>
		       <COND (<=? .COUNT <LENGTH .CSTR>>
			      <PUT .RETURNS 1 3>
			      <PUT .RETURNS 2 .N>
			      <PUT .RETURNS 3 .CSTR>
			      <PUT .RETURNS 4 .COUNT>
			      <RETURN .RETURNS>)
			     (<0? <SET TEMP <1 .RETURNS>>>
			      <PUT .RETURNS 1 1>
			      <PUT .RETURNS 2 .N>
			      <PUT .RETURNS 3 .CSTR>
			      <PUT .RETURNS 4 <LENGTH .CSTR>>)
			     (ELSE
			      <PUT .RETURNS 1 2>
			      <COND (<L? <SET TEMP <COMPS .CSTR <3 .RETURNS>>>
					 <4 .RETURNS>>
				     <PUT .RETURNS 4 .TEMP>)>
			      <COND (<G? <LENGTH .CSTR> <LENGTH <3 .RETURNS>>>
				     <PUT .RETURNS 2 .N>
				     <PUT .RETURNS 3 .CSTR>)>)>)>
		<SET N <+ .SYMSIZ .N>>
		<SET SYMNAMS <REST .SYMNAMS .SYMSIZ>>>>

<DEFINE GSTPOSSYM (STR CNT TBL
		   "OPTIONAL" (S1 "") (S2 "")
		   "AUX" (N 0) (NAMES <REST .TBL 2>))
	#DECL ((STR S1 S2) STRING (VALUE CNT N) FIX (TBL) <VECTOR FIX ANY>
	       (NAMES) VECTOR)
	<REPEAT ()
		<COND (<EMPTY? .NAMES> <COND (<0? .N> <PRINC .S2>)> <RETURN .N>)
		      (<=? <COMPS .STR <1 .NAMES> .CNT> .CNT>
		       <COND (<0? .N> <PRINC .S1>)>
		       <PRINC <1 .NAMES>>
		       <TERPRI>
		       <SET N <+ .N 1>>)>
		<SET NAMES <REST .NAMES <1 .TBL>>>>>

<DEFINE GSTALLPOSS (STR CNT TBL "AUX" (N 2) (NAMES <REST .TBL 2>)) 
	#DECL ((STR) STRING (CNT N) FIX (TBL) <VECTOR FIX ANY> (NAMES) VECTOR)
	<REPEAT ((LST ()))
		<COND (<EMPTY? .NAMES> <RETURN .LST>)
		      (<=? <COMPS .STR <1 .NAMES> .CNT> .CNT>
		       <SET LST <CONS <GSTEVAL .N .TBL <>> .LST>>)>
		<SET N <+ .N <1 .TBL>>>
		<SET NAMES <REST .NAMES <1 .TBL>>>>>

<DEFINE GSTEVAL (SYMBID SYMBOLS SORTED
		 "AUX" (EVALER <2 .SYMBOLS>)
		       (FRONT
			<REST .SYMBOLS
			      <COND (.SORTED <+ .SYMBID 1>) (.SYMBID)>>))
	#DECL ((SYMBID) FIX (SORTED) <OR 'T FALSE> (SYMBOLS) <VECTOR FIX ANY>
	       (EVALER) ANY (FRONT) VECTOR (VALUE) SYMBOL)
	<CHTYPE [<1 .FRONT>
		 <COND (<APPLICABLE? .EVALER> <APPLY .EVALER .FRONT>)
		       (ELSE .EVALER)>]
		SYMBOL>>

<DEFINE GSTPRINT (TABLE
		  "AUX" TEMP (POS 0) (NAMES <REST .TABLE 2>)
			(LINESIZE <13 .OUTCHAN>))
	#DECL ((TABLE) VECTOR (NAMES) VECTOR (TEMP POS LINESIZE) FIX)
	<REPEAT ()
		<COND (<EMPTY? .NAMES> <TERPRI> <RETURN T>)
		      (<AND <G? <+ .POS <SET TEMP <+ 4 <LENGTH <1 .NAMES>>>>>
				.LINESIZE>
			    <G? .POS 0>>
		       <SET POS 0>
		       <TERPRI>)>
		<SET POS <+ .POS .TEMP>>
		<PRINC "    ">
		<PRINC <1 .NAMES>>
		<SET NAMES <REST .NAMES <1 .TABLE>>>>>

<DEFINE GSTEXACT (STR TABLE
		  "AUX" (N 2) (SZ <1 .TABLE>) (NAMES <REST .TABLE 2>)
			(L <LENGTH .STR>))
	#DECL ((STR) STRING (TABLE) VECTOR (N SZ L) FIX (NAMES) VECTOR
	       (VALUE) <OR FALSE SYMBOL>)
	<REPEAT ()
		<COND (<EMPTY? .NAMES> <RETURN <>>)
		      (<==? <COMPS <1 .NAMES> .STR> .L>
		       <RETURN <GSTEVAL .N .TABLE <>>>)
		      (ELSE <SET NAMES <REST .NAMES .SZ>>)>
		<SET N <+ .N 1>>>>

<DEFINE MAKEGST (TITLE CONTENTS "OPTIONAL" (KILLER <>)) 
	#DECL ((TITLE) STRING (SYMSIZE) FIX (EVALER) ANY
	       (CONTENTS) <VECTOR FIX ANY> (GSTOPS) FUNCTION (VALUE) SYMTABLE)
	<CHTYPE [GSTOPS .CONTENTS .TITLE .KILLER] SYMTABLE>>

<DEFINE BSTSORT (TABLE "OPTIONAL" (LEN 2) (KEYOFF 0)) 
	#DECL ((LEN KEYOFF) FIX)
	<SORT ,SORTCHK .TABLE .LEN .KEYOFF>>

<DEFINE SORTCHK (S1 S2) 
	#DECL ((S1 S2) STRING (VALUE) <OR FALSE ATOM>)
	<COND (<G=? <STRCOMP-NC .S1 .S2> 0>)>>

<DEFINE MAKEBST (NM TAB "OPTIONAL" (KILLING <>)) 
	#DECL ((NM) STRING (KILLING) <OR FALSE FORM>
	       (TAB) <VECTOR [REST STRING ANY]> (VALUE) SYMTABLE)
	<CHTYPE [BSTOPS .TAB .NM .KILLING] SYMTABLE>>

<DEFINE BSTOPS (NUM "TUPLE" TUP) 
	#DECL ((NUM) FIX)
	<COND (<1? .NUM> <BSTLOOKUP !.TUP>)
	      (<==? .NUM 2> <BSTEVAL !.TUP>)
	      (<==? .NUM 3> <BSTPOSSYM !.TUP>)
	      (<==? .NUM 4> <BSTPRINT !.TUP>)
	      (<==? .NUM 5> <BSTEXACT !.TUP>)
	      (<==? .NUM 6> <BSTALLPOSS !.TUP>)>>

<DEFINE BSTLOOKUP (STR FX DATA SCRATCH "AUX" SS TEM LONGEST TT (OFFSET 2)) 
	#DECL ((VALUE SCRATCH) <VECTOR FIX ANY STRING FIX> (STR SS) STRING
	       (FX TEM LONGEST OFFSET TT) FIX (DATA) VECTOR)
	<PUT .SCRATCH 1 0>
	<PUT .SCRATCH 4 0>
	<COND (<EMPTY? .DATA> <SET TEM 3>)
	      (<TYPE? <1 .DATA> FIX>
	       <AND <==? <LENGTH .DATA> 2> <SET TEM 3>>
	       <SET OFFSET <1 .DATA>>
	       <SET DATA <REST .DATA 2>>)>
	<OR <ASSIGNED? TEM>
	    <SET TEM <GETINDEX .DATA .STR .FX .OFFSET>>>
	<REPEAT ()
		<COND (<G? .TEM <LENGTH .DATA>> <RETURN .SCRATCH>)>
		<SET TT <COMPS <SET SS <NTH .DATA .TEM>> .STR .FX>>
		<COND (<L? .TT .FX> <RETURN .SCRATCH>)	    ;"not prefix of any"
		      (<=? .TT <LENGTH .SS>>
		       <PUT .SCRATCH 1 3>			        ;"exact"
		       <PUT .SCRATCH 2 .TEM>
		       <PUT .SCRATCH 3 .SS>
		       <PUT .SCRATCH 4 .TT>
		       <RETURN .SCRATCH>)
		      (<0? <1 .SCRATCH>>
		       <PUT .SCRATCH 1 1>
		       <PUT .SCRATCH 2 .TEM>
		       <PUT .SCRATCH 3 .SS>
		       <PUT .SCRATCH 4 <SET LONGEST <LENGTH .SS>>>)
		      (<OR <1? <1 .SCRATCH>> <==? <1 .SCRATCH> 2>>
		       <PUT .SCRATCH 1 2>
		       <PUT .SCRATCH 4 <COMPS <3 .SCRATCH> .SS <4 .SCRATCH>>>
							       ;"longest prefix"
		       <COND (<G? <LENGTH .SS> .LONGEST>
			      <PUT .SCRATCH 3 .SS>
			      <PUT .SCRATCH 2 .TEM>
			      <SET LONGEST <LENGTH .SS>>)>)>
		<SET TEM <+ .TEM .OFFSET>>>>

<DEFINE BSTEVAL (FX DATA) 
	#DECL ((VALUE) SYMBOL (FX) FIX (DATA) <VECTOR [REST STRING ANY]>)
	<CHTYPE [<NTH .DATA .FX> <NTH .DATA <+ .FX 1>>] SYMBOL>>

<DEFINE BSTPOSSYM (STR FX DATA
		   "OPTIONAL" (STRFIRST "") (STRLAST "")
		   "AUX" (FIRSTFLAG 0) TEM (OFFSET 2))
	#DECL ((STR STRFIRST STRLAST) STRING (FX FIRSTFLAG TEM OFFSET) FIX
	       (DATA) VECTOR)
	<COND (<EMPTY? .DATA> <SET TEM 3>)
	      (<TYPE? <1 .DATA> FIX>
	       <AND <==? <LENGTH .DATA> 2> <SET TEM 3>>
	       <SET OFFSET <1 .DATA>>
	       <SET DATA <REST .DATA 2>>)>
	<OR <ASSIGNED? TEM>
	    <SET TEM <GETINDEX .DATA .STR .FX .OFFSET>>>        ;"find position"
	<REPEAT ()
		<COND (<G? .TEM <LENGTH .DATA>>
		       <COND (<0? .FIRSTFLAG> <PRINC .STRLAST>)>
		       <RETURN .FIRSTFLAG>)
		      (<==? <COMPS .STR <NTH .DATA .TEM> .FX> .FX>
		       <COND (<0? .FIRSTFLAG> <PRINC .STRFIRST>)>
		       <SET FIRSTFLAG <+ .FIRSTFLAG 1>>
		       <PRINC <NTH .DATA .TEM>>
		       <SET TEM <+ .TEM .OFFSET>>
		       <TERPRI>)
		      (ELSE <SET TEM <+ <LENGTH .DATA> 1>>)>>>

<DEFINE BSTALLPOSS (STR FX DATA "AUX" TEM (OFFSET 2) (BGST <>)) 
	#DECL ((STR) STRING (FX FIRSTFLAG TEM OFFSET) FIX (BGST) <OR FALSE 'T>
	       (DATA) VECTOR)
	<COND (<EMPTY? .DATA> <SET TEM 3>)
	      (<TYPE? <1 .DATA> FIX>
	       <SET BGST T>
	       <AND <==? <LENGTH .DATA> 2> <SET TEM 3>>
	       <SET OFFSET <1 .DATA>>
	       <SET DATA <REST .DATA 2>>)>
	<OR <ASSIGNED? TEM>
	    <SET TEM <GETINDEX .DATA .STR .FX .OFFSET>>>        ;"find position"
	<REPEAT ((L ()) ML (FIRSTSW <>) TEMP)
		#DECL ((L ML) <LIST [REST SYMBOL]> (FIRSTSW) <OR 'T FALSE>
		       (TEMP) SYMBOL)
		<COND (<G? .TEM <LENGTH .DATA>> <RETURN .L>)
		      (<==? <COMPS .STR <NTH .DATA .TEM> .FX> .FX>
		       <SET TEMP
			    <COND (.BGST <GSTEVAL .TEM <BACK .DATA 2> T>)
				  (<CHTYPE <SUBSTRUC .DATA <- .TEM 1> 2>
					   SYMBOL>)>>
		       <COND (.FIRSTSW <SET ML <REST <PUTREST .ML (.TEMP)>>>)
			     (<SET FIRSTSW T> <SET L <SET ML (.TEMP)>>)>
		       <SET TEM <+ .TEM .OFFSET>>)
		      (ELSE <SET TEM <+ <LENGTH .DATA> 1>>)>>>

<DEFINE BSTEXACT (STR DATA "AUX" TEM) 
	#DECL ((STR) STRING (DATA) VECTOR (TEM) FIX)
	<AND <TYPE? <1 .DATA> FIX> <SET DATA <REST .DATA 2>>>
	<SET TEM <GETINDEX .DATA .STR>>
	<COND (<G? .TEM <LENGTH .DATA>> <>)		        ;"out of bounds"
	      (<==? <COMPS <NTH .DATA .TEM> .STR>
		    <LENGTH <NTH .DATA .TEM>>>
	       <CHTYPE [.STR <NTH .DATA <+ .TEM 1>>] SYMBOL>)>>

<DEFINE UPPERCHAR (C "AUX" (N <ASCII .C>)) 
	#DECL ((C) CHARACTER (N VALUE) FIX)
	<COND (<AND <G=? .N 97> <L=? .N 122>> <- .N 32>) (.N)>>

<DEFINE GETINDEX (DATA STR
		  "OPTIONAL" (FX <LENGTH .STR>) (OFFSET 2)
		  "AUX" (L </ <LENGTH .DATA> .OFFSET>) (POS 1) TCHAR FCHAR TEM
			TT HL RHFLAG)
	#DECL ((L VALUE TT FCHAR POS FX OFFSET HL TCHAR RHFLAG) FIX
	       (STR TEM) STRING (DATA) VECTOR)
	<COND (<0? .FX> 1)
	      (ELSE
	       <SET FCHAR <UPPERCHAR <1 .STR>>>
	       <REPEAT ()
		       <SET HL </ .L 2>>
		       <SET TEM <NTH .DATA <+ .POS <* .HL .OFFSET>>>>
						      ;"<* .HL .OFFSET> N.E. .L"
		       <SET TCHAR <UPPERCHAR <1 .TEM>>>
		       <SET RHFLAG 0>		       ;"indicates lh initially"
		       <COND (<=? .FCHAR .TCHAR>      ;"changes to COMPS search"
			      <COND (<G? <SET TT <STRCOMP-NC .STR .TEM .FX>> 0>
						   ;"el should be in right half"
				     <SET RHFLAG 1>)
				    (<0? .TT>
				     <RETURN <+ .POS <* .HL .OFFSET>>>)>)
			     (<G? .FCHAR .TCHAR> <SET RHFLAG 1>)>
		       <COND (<1? .RHFLAG>
			      <SET POS <+ .POS <* .HL .OFFSET>>>
			      <AND <1? <CHTYPE <ANDB .L 1> FIX>>
				   <SET POS <+ .POS .OFFSET>>>)>
		       <COND (<1? .L> <RETURN .POS>)>
		       <SET L .HL>>)>>

<DEFINE STRCOMP-NC (S1 S2 "OPTIONAL" (CNT <LENGTH .S1>) "AUX" CH1 CH2) 
	#DECL ((CH1 CH2) FIX (CNT VALUE) FIX (S1 S2) STRING)
	<COND (<EMPTY? .S2> <COND (<EMPTY? .S1> 0) (ELSE 1)>)
	      (<EMPTY? .S1> -1)
	      (<L=? .CNT 0> 0)
	      (ELSE
	       <REPEAT ()
		       <SET CH1 <UPPERCHAR <1 .S1>>>
		       <SET CH2 <UPPERCHAR <1 .S2>>>
		       <COND (<L? .CH1 .CH2> <RETURN -1>)
			     (<G? .CH1 .CH2> <RETURN 1>)
			     (<0? <SET CNT <- .CNT 1>>>
			      <COND (<EMPTY? .S2> <RETURN 0>)
				    (ELSE <RETURN -1>)>)>	        ;"all ="
		       <SET S1 <REST .S1>>
		       <COND (<EMPTY? <SET S2 <REST .S2>>> <RETURN 1>)>
							  ;"S2 prefix of S1">)>>

<DEFINE BGSTOPS (NUM "TUPLE" T) 
	#DECL ((NUM) FIX)
	<COND (<1? .NUM> <BSTLOOKUP !.T>)
	      (<==? .NUM 2> <GSTEVAL !.T T>)
	      (<==? .NUM 3> <BSTPOSSYM !.T>)
	      (<==? .NUM 4> <GSTPRINT !.T>)
	      (<==? .NUM 5> <BSTEXACT !.T>)
	      (<==? .NUM 6> <BSTALLPOSS !.T>)>>

<DEFINE MAKEBGST (NAME TABLE "OPTIONAL" (KILLING <>)) 
	#DECL ((NAME) STRING (TABLE) VECTOR (KILLING) ANY)
	<CHTYPE [BGSTOPS .TABLE .NAME .KILLING] SYMTABLE>>

<DEFINE BGSTSORT (TABLE "EXTRA" SORTED) 
	#DECL ((TABLE SORTED) VECTOR)
	<BACK <BSTSORT <REST .TABLE 2> <1 .TABLE>> 2>>

<DEFINE BSTPRINT (DATA) 
	#DECL ((DATA) <VECTOR [REST STRING ANY]> (VALUE) ATOM)
	<REPEAT ()
		<COND (<EMPTY? .DATA> <TERPRI> <RETURN T>)
		      (<G? <+ 5 <LENGTH <1 .DATA>>>
			   <- <13 .OUTCHAN> <14 .OUTCHAN>>>
		       <TERPRI>)>
		<PRINC <1 .DATA>>
		<PRINC "     ">
		<SET DATA <REST .DATA 2>>>
	T>

<SETG COMPS
      %<FIXUP!-RSUBRS '[
#CODE ![23851171840 23851171841 23851171842 23851171843 -19864223735 26038501372
23088857097 23751557133 23085678503 23851171844 23851171845 23751557137 
23085678503 25614352384 23849037825 23852220461 29527900160 25614352384 
17199529984 -20397948931 26441416704 17196646400 -20397948933 26441416704 
17196646400 28205908009 18656264194 -24142413822 17191403516 17208180734 
12381585409 12389974019 27682406405 23088857128 27011317765 22582132741 
26618101792 26206011482 23088857129 25937576001 22971416606 17859346433 
-20384317438 25328615470 23085695322 32767 1572870 5691682056 0 2!]
			COMPS
			#DECL ("VALUE" FIX STRING STRING "OPTIONAL" FIX)]
		      '(50
			FINIS!-MUDDLE
			229287
			(13 9)
			$TLOSE!-MUDDLE
			225280
			(15)
			MPOPJ!-MUDDLE
			246106
			(45))>>

<AND <ASSIGNED? GLUE>
     .GLUE
     <PUT ,COMPS
	  GLUE
	  '![5246992 1048592 1141899264 786449 524301!]>>

<ENDPACKAGE>
		
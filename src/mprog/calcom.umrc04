<PACKAGE "CALCOM">
<USE "STR" "CALRDR" "CALSYM" "CALUTL" "LEX">

<ENTRY
 ACT-SUBSYSTEM
 SUBSYS-SYMTAB
 SUBSYS-EVAL
 FILEPRINT 
 LISTF 
 FILETPL 
 XFILE 
 TABLEPRINT 
 TABLETHERE
 COPY-FILE
 ADDTABLE 
 ADDCOMMAND 
 KILL-TABLE 
 CALICO-QUIT 
 TTY-SCRIPT
 END-TTY-SCRIPT
 END-ALL-TTY-SCRIPT
 TTY-SILENCE-DEPTH
 TTY-SILENCE
 TTY-UNSILENCE
GLUETABLES
FIXGLUETABLE
FLUSHGLUETABLE
GLUECOMTABLE
COMTABLE
SYSTAT	;"for TENEX"
COMTITLES>

<DEFINE SUBSYS-EVAL (VEC)
	#DECL ((VEC) <VECTOR STRING> (VALUE) STRING)
	<2 .VEC>>	;"data-set points at string to be executed"

<DEFINE ACT-SUBSYSTEM ("AUX" TEM)
	#DECL ((VALUE) ATOM (TEM) ANY)
<COND (<OR <GASSIGNED? SUBSYS-SYMTAB>
		<AND <SET TEM <USE-DATUM "MUDCAL-SUBSYS-VECTOR">>
		<SETG SUBSYS-SYMTAB <MAKEBGST "Subsystems" [4 ,SUBSYS-EVAL !.TEM]>>>>
	<COND (<SET TEM <READER ,SUBSYS-SYMTAB "named"
		'["type the name of the subsystem to be activated"
		"ARC:CALSUB;ACTSUB HELPM"] '["SYM"]>>
		<COND (<AND <TYPE? <2 .TEM> STRING>
			<SET TEM <USE-DATUM <2 .TEM>>>
			<TYPE? .TEM STRING>>
			<XFPUSH .TEM T>)>
		)>)>
	T>

<DEFINE COPY-FILE (FROMNAME TONAME "AUX" IC OC)
    #DECL ((FROMNAME TONAME) STRING (IC OC) <OR CHANNEL FALSE>
	(VALUE) ATOM)
    <COND (<SET IC <OPENTELL "READ" .FROMNAME>>
		<COND (<SET OC <OPENTELL "PRINT" .TONAME>>
			<FILECOPY .IC .OC> <CLOSE .OC>)>
		<CLOSE .IC>)>
T>

<DEFINE FILEPRINT (FILENAME "OPTIONAL" (TOCHAN .OUTCHAN) "AUX" CHAN (OC ,OUTCHAN))
    #DECL ((FILENAME) STRING (OUTCHAN TOCHAN OC) CHANNEL (VALUE) ATOM
	(CHAN) <OR CHANNEL FALSE>)
    <COND (<SET CHAN <OPENTELL "READ" .FILENAME>>
		<COND (<==? .TOCHAN .OUTCHAN> <TERPRI>)>
		<FILECOPY .CHAN .TOCHAN>
		<COND (<==? .TOCHAN .OUTCHAN> <TERPRI>)>
		<CLOSE .CHAN>)>
    T>

<DEFINE LISTF (DEVICE "AUX" CHAN N (BFR <ISTRING 100>)
	PDEV (STPR %<STRING <ASCII *14*>>)(OS ,TENEX))
    #DECL ((DEVICE STPR BFR) STRING (N) FIX (OUTCHAN) CHANNEL (VALUE) ATOM
	(CHAN) <OR CHANNEL FALSE> (PDEV) VECTOR)
    <SET PDEV <FSP-PARSE .DEVICE>>
    <SET DEVICE <STRING <COND (<TYPE? <1 .PDEV> STRING> <1 .PDEV>)
			      (ELSE .CALICO-DEV)>
			<COND (.OS ":<")(!":)>
			<COND (<TYPE? <2 .PDEV> STRING> <2 .PDEV>)
			      (ELSE .CALICO-SNM)>
			<COND (.OS ">")(!";)>
			<COND (<NOT .OS> ".FILE.")
				(<TYPE? <3 .PDEV> STRING> <3 .PDEV>)
				(ELSE "*")>
			<COND (.OS !".)(ELSE !" )>
			<COND (<NOT .OS> "(DIR)")
				(<TYPE? <4 .PDEV> STRING> <4 .PDEV>)
				(ELSE "*;*")>
			>>
<COND (.OS
    <COND (<SET JFN <GTJFN .DEVICE>>
		<TERPRI>
		<JFNS .JFN *110000000001*>	;"print dev:<dir> first"
		<TERPRI>
		<REPEAT ((CHANGES 4))
		#DECL ((CHANGES) <OR FALSE FIX>)
		<COND (<0? .CHANGES>	;"version only"
				<PRINC !",>
				<JFNS .JFN *000010000000*>	;"version, no punct")
			(<1? .CHANGES>	;"ext changed"
			<TERPRI>
			<PRINC "     ">
			<JFNS .JFN *000110000001*>	;"ext;version")
			(ELSE
			<TERPRI>
			<JFNS .JFN *001110000001*>)>
	    <COND (<NOT <SET CHANGES  <GNJFN .JFN>>>
			<RETURN <RLJFN .JFN>>)>
		>
	<TERPRI>)>)
(ELSE
    <COND (<SET CHAN <OPENTELL "READ" .DEVICE>>
		<TERPRI>
		<REPEAT ()
		    <COND (<0? <SET N <READSTRING .BFR .CHAN .STPR '<RETURN>>>>
				<RETURN>)>
		    <PRINTSTRING .BFR .OUTCHAN .N>
		> <TERPRI> <CLOSE .CHAN>)>)>
    T>

<DEFINE FILETPL (FILENAME "AUX" TPLCHN)
    #DECL ((FILENAME) STRING (TPLCHN) <OR FALSE CHANNEL> (VALUE) ATOM)
    <COND (<SET TPLCHN <OPENTELL "PRINT" "TPL:">> <FILEPRINT .FILENAME .TPLCHN>
		<CLOSE .TPLCHN>)>
    T>

<DEFINE XFILE (FILENAME "AUX" CHAN)
    #DECL ((FILENAME) STRING (CHAN) <OR FALSE CHANNEL> (VALUE) ATOM)
    <COND (<SET CHAN <OPENTELL "READ" .FILENAME>> <XFPUSH .CHAN>)>
    T>

<DEFINE TABLEPRINT (TABLE)
    #DECL ((TABLE) SYMTABLE (VALUE) ATOM)
    <TERPRI> <TERPRI>
    <COND (<G? <LENGTH .TABLE> 2> <PRINC <3 .TABLE>> <TERPRI>)>
    <APPLY ,<1 .TABLE> 4 <2 .TABLE>>
    T>

<SETG GLUEABLE '[SSTOPS BSTOPS]>

<DEFINE GETTABLES (MST "EXTRA" FOO (GLUETYPES ,GLUEABLE))
    #DECL ((MST) SYMTABLE (FOO) <OR <VECTOR [REST STRING ANY]> FALSE>
	   (GLUETYPES) <VECTOR [REST ATOM]>)
    <MAPF ,VECTOR
	  <FUNCTION (X)
	      #DECL ((X) SYMTABLE)
	      <COND (<MEMQ <1 .X> .GLUETYPES>
		     <MAPRET !<2 .X>>)
		    (<==? <1 .X> MSTOPS>
		     <COND (<SET FOO <GETTABLES .X>>
			    <MAPRET !.FOO>)
			   (<MAPLEAVE <>>)>)
		    (<MAPLEAVE <>>)>
	      0>
	  <2 .MST>>>

<DEFINE GLUETABLES ("OPTIONAL" TBL (OPR 1) "EXTRA" (GLUETYPES ,GLUEABLE) VECT)
#DECL ((VECT) <VECTOR [REST STRING ANY]>
	(OPR) FIX
	(TBL) SYMTABLE
	(GLUETYPES) <VECTOR [REST ATOM]>)
<COND	(<COND (<ASSIGNED? TBL>)
		(<GASSIGNED? COMTABLE> <SET TBL ,COMTABLE>)>
	<COND	(<MEMQ <1 .TBL> .GLUETYPES>
		<SET VECT <2 .TBL>>
		<COND	(<AND	<GASSIGNED? GLUECOMTABLE>
				<TYPE? ,GLUECOMTABLE SYMTABLE>>
			<REPEAT ((GTBL ,GLUECOMTABLE))
			<COND	(<EMPTY? .VECT> <RETURN>)>
			<AND <==? 1 .OPR> <LSTINSERT .GTBL <1 .VECT> <2 .VECT>>>
			<AND <==? 2 .OPR> <LSTDELETE .GTBL <1 .VECT>>>
			<SET VECT <REST .VECT 2>>>)
			(<SETG GLUECOMTABLE <MAKELST "Glued Command Table" .VECT>>)>
		T)
		(<==? <1 .TBL> MSTOPS>
		<MAPF <> <FUNCTION (TBL "AUX" VAL)
			<OR <SET VAL <GLUETABLES .TBL>>
				<SETG GLUECOMTABLE <>>
				<MAPLEAVE .VAL>>> <2 .TBL>>)
		(<==? <1 .TBL> LSTOPS>
		<COND	(<AND	<GASSIGNED? GLUECOMTABLE>
				<TYPE? ,GLUECOMTABLE SYMTABLE>>)
			(<SETG GLUECOMTABLE <MAKELST "Glued Command Table" <>>>)>
		<COND	(<==? 1 .OPR>
			<REPEAT ((IDV <1 <1 <2 .TBL>>>) (VALV <2 <2 .TBL>>)
					(GTBL ,GLUECOMTABLE))
			#DECL ((IDV) <UVECTOR [REST LEXID]> (VALV) <OR VECTOR UVECTOR>
				(GTBL) SYMTABLE)
			<COND	(<OR <EMPTY? .IDV> <EMPTY? .VALV>> <RETURN>)>
			<LSTINSERT .GTBL
				<LEX-GET <1 <2 .TBL>> <1 .IDV> ,LEX-SCRATCH-STRING>
				<1 .VALV>>
			<SET IDV <REST .IDV 1>>
			<SET VALV <REST .VALV 1>>>)
			(<==? 2 .OPR>
			<REPEAT ((IDV <1 <1 <2 .TBL>>>) (GTBL ,GLUECOMTABLE))
			#DECL ((IDV) <UVECTOR [REST LEXID]> (GTBL) SYMTABLE)
			<COND	(<EMPTY? .IDV> <RETURN>)>
			<LSTDELETE .GTBL
				<LEX-GET <1 <2 .TBL>> <1 .IDV> ,LEX-SCRATCH-STRING>>
			<SET IDV <REST .IDV>>>)>
		T)
		(#FALSE ("Illegal symbol table type present"))>)
	  (#FALSE ("No top level symbol table"))>>


<DEFINE FIXGLUETABLE ()
#DECL ((VALUE) 'T (LXTBL) LEXTABLE)
<COND	(<AND	<GASSIGNED? GLUECOMTABLE>
		<TYPE? ,GLUECOMTABLE SYMTABLE>>
	<SET LXTBL <1 <2 ,GLUECOMTABLE>>>
	<LEX-FIX-STRING-TBL .LXTBL>
	<LEX-FIX-MASTER-TBL .LXTBL>)>
T>


<DEFINE FLUSHGLUETABLE ("AUX" LXTBL VALTBL)
#DECL ((LXTBL) LEXTABLE (VALTBL) <OR VECTOR UVECTOR FALSE>)
<COND	(<TYPE? <1 <SET LXTBL <1 <2 ,GLUECOMTABLE>>>> UVECTOR>
	<PUT .LXTBL 1 <REST <1 .LXTBL> <LENGTH <1 .LXTBL>>>>)>
<COND	(<TYPE? <4 .LXTBL> UVECTOR>)
	(ELSE
	<COND	(<TYPE? <2 .LXTBL> UVECTOR>
		<PUT .LXTBL 2 <REST <2 .LXTBL> <LENGTH <2 ,LXTBL>>>>)>
	<COND	(<TYPE? <3 .LXTBL> UVECTOR>
		<PUT .LXTBL 3 <REST <3 .LXTBL> <LENGTH <3 .LXTBL>>>>)>)>
<COND	(<TYPE? <SET VALTBL <2 <2 ,GLUECOMTABLE>>> VECTOR UVECTOR>
	<PUT <2 ,GLUECOMTABLE> 2 <REST .VALTBL <LENGTH .VALTBL>>>)>>


<DEFINE ADDTABLE (TABLE)
    #DECL ((TABLE) SYMTABLE (VALUE) ATOM)
    <COND (<GASSIGNED? COMTABLE>
	   <COND (<NOT <TABLETHERE <3 .TABLE> <2 ,COMTABLE>>>
		  <PUT ,COMTABLE 2 [.TABLE !<2 ,COMTABLE>]>
		  <PUT ,COMTITLES 2 [ <1 <2 ,COMTITLES>> <2 <2 ,COMTITLES>>
					<3 .TABLE> .TABLE
					!<REST <2 ,COMTITLES> 2>]>
		<GLUETABLES .TABLE>)>)

	  (ELSE 
	   <SETG COMTABLE <MAKEMST "Current CALICO commands" [.TABLE]>>
	   <SETG COMTITLES <MAKEGST "Command table titles" [2
			<FUNCTION (A) <2 .A>> <3 .TABLE> .TABLE] >>
		<SETG GLUECOMTABLE <>>
		<GLUETABLES>)>
    T>

<SETG GLUECOMTABLE <>>

<DEFINE TABLETHERE (TITLE TABLES)
    #DECL ((TITLE) STRING
	(VALUE) <OR FALSE SYMTABLE>
	(TABLES) <VECTOR [REST SYMTABLE]>)
    <REPEAT () <COND (<EMPTY? .TABLES> <RETURN <>>)
	(<=? .TITLE <3 <1 .TABLES>>> <RETURN <1 .TABLES>>)>
	<SET TABLES <REST .TABLES>>>>

<DEFINE ADDCOMMAND (NAME VAL "AUX" TEMP)
    #DECL ((NAME) STRING
	(PERSONALS) SYMTABLE
	(VAL) ANY
	(TEMP) <OR FALSE VECTOR>
	(VALUE) ATOM)
    <COND (<TYPE? .VAL SYMBOL> <SET VAL <2 .VAL>>)>
    <COND (<GASSIGNED? PERSONALS>
	<COND (<SET TEMP <MEMBER .NAME <2 ,PERSONALS>>>
		<PUT .TEMP 2 .VAL>
		<FLUSHGLUETABLE>
		<GLUETABLES>)
	    (<PUT ,PERSONALS 2 [.NAME .VAL !<2 ,PERSONALS>]>
		<GLUETABLES ,PERSONALS>)>)
	(ELSE <SETG PERSONALS <MAKESST "Personal commands" [.NAME .VAL]>>
	    <ADDTABLE ,PERSONALS>)>
    T>

<DEFINE KILL-TABLE (TABLE "AUX" (VT <2 ,COMTABLE>) (VN <2 ,COMTITLES>) TEM)
    #DECL ((TABLE) SYMTABLE (VT) <VECTOR [REST SYMTABLE]>
	(VN) <PRIMTYPE VECTOR>
	(TEM) <OR FALSE <PRIMTYPE VECTOR>>
	(VALUE) ATOM)
 <COND (<SET TEM <MEMBER .TABLE .VT>>
	<AND <==? <LENGTH .TABLE> 4>	;"do killer for table"
	     <EVAL <4 .TABLE>>>
	<PUT .TEM 1 <1 .VT>>	;"write over killed one"
	<PUT ,COMTABLE 2 <REST .VT>>	;"and rest the table"
	;"now for titles -- note the 2 first elements of GST have to stay in place"
	<SET TEM <REST .VN <+ 2 <* 2 <- <LENGTH .VT> <LENGTH .TEM>>>>>>
	<PUT .TEM 1 <3 .VN>>	;"first real entry"
	<PUT .TEM 2 <4 .VN>>
	<PUT .VN 3 <1 .VN>>	;"GST info retains index"
	<PUT .VN 4 <2 .VN>>
	<PUT ,COMTITLES 2 <REST .VN 2>>	;"flush excess"
	<GLUETABLES .TABLE 2>)>

    T>

<DEFINE CALICO-QUIT ()
    #DECL ((VALUE) ATOM)
    <REPEAT () <COND (<EMPTY? <2 ,COMTABLE>> <RETURN T>)
		     (ELSE <KILL-TABLE <1 <2 ,COMTABLE>>>)>>
    <LOGOUT>
    <QUIT>
T>

<DEFINE TTY-SCRIPT (FNAME "AUX" (TOP-CHAN <TOP .OUTCHAN>) C)
    #DECL ((FNAME) STRING (C) <OR FALSE CHANNEL>
		(TOP-CHAN) <VECTOR LIST> (VALUE) ATOM)
	;"SCRIPT-CHANNEL LIST HAS SPECIAL BITS IN RHW! OF TYPE WORD
	DECLED TOP-CHAN KEEPS COMPILER FROM MUNGING THEM"
    <COND (<SET C <OPENTELL "PRINT" .FNAME>>
		<PUT .TOP-CHAN 1 (.C !<1 .TOP-CHAN>)>)>
T>

<DEFINE END-TTY-SCRIPT ("AUX" (FC <TOP .OUTCHAN>))
    #DECL ((VALUE) ATOM (FC) <VECTOR LIST>)
    <COND (<NOT <EMPTY? <1 .FC>>>
		<CLOSE <1 <1 .FC>>>
		<PUT .FC 1 <REST <1 .FC>>>)
	  (ELSE <PRINC "No console script file open now.">)>
T>

<DEFINE END-ALL-TTY-SCRIPT ("AUX" (TOP-CHAN <TOP .OUTCHAN>) (CHNS <1 .TOP-CHAN>))
    #DECL ((VALUE) ATOM
		(TOP-CHAN) <VECTOR LIST>
		(CHNS) <LIST [REST CHANNEL]>)
    <PUT .TOP-CHAN 1 ()>
    <MAPF <> ,CLOSE .CHNS>
T>

<SET TTY-SILENCE-DEPTH 0>

<DEFINE TTY-SILENCE ("AUX" (JFCL *255000000000*))
    #DECL ((JFCL) FIX (VALUE) ATOM)
    <COND (<NOT <ASSIGNED? TTY-OUTPUT-WORD>>
		<SET TTY-OUTPUT-WORD <12 .OUTCHAN>>)>
    <SET TTY-SILENCE-DEPTH <+ .TTY-SILENCE-DEPTH 1>>
    <PUT .OUTCHAN 12 .JFCL>
T>

<DEFINE TTY-UNSILENCE ()
    #DECL ((VALUE) ATOM)
    <COND (<AND <ASSIGNED? TTY-OUTPUT-WORD> <1? .TTY-SILENCE-DEPTH>>
		<PUT .OUTCHAN 12 .TTY-OUTPUT-WORD>
		<SET TTY-SILENCE-DEPTH <- .TTY-SILENCE-DEPTH 1>>)>
T>

<DEFINE SYSTAT ("AUX" JOBTTY JOBDIR JOBNAM SNAMES SYSTAT)
	#DECL ((JOBTTY JOBDIR JOBNM SNAMES SYSTAT ENT)
		<OR FALSE <PRIMTYPE WORD>>
		(VALUE) ATOM)
	<COND (<SET SYSTAT <SYSGT "SYSTAT">>
		<TERPRI>
		<PRINC "Load avg: ">
		<PRINC <CHTYPE <GETAB *14* .SYSTAT> FLOAT>>
		<PRINC ", ">
		<PRINC <CHTYPE <GETAB *15* .SYSTAT> FLOAT>>
		<PRINC ", ">
		<PRINC <CHTYPE <GETAB *16* .SYSTAT> FLOAT>>
		<PRINC !".><TERPRI>)>
	<COND (<AND <SET JOBTTY <SYSGT "JOBTTY">>
		<SET JOBDIR <SYSGT "JOBDIR">>
		<SET SNAMES <SYSGT "SNAMES">>
		<SET JOBNAM <SYSGT "JOBNAM">>
		>
		<SET LEN <CHTYPE
			<GETBITS .JOBTTY <BITS 18 18>> FIX>>	;"length of table"
		<OR <0? .LEN>
		<SET LEN <- <PUTBITS -1 <BITS 18> .LEN>>>>
		<TERPRI>
		<PRINC "JOB   TTY   SUBSYS   LOG">
		<TERPRI>
		<REPEAT ()
		<COND (<L? <SET LEN <- .LEN 1>> 0> <RETURN T>)>
		<SET ENT
		<CHTYPE <GETBITS <GETAB .LEN .JOBTTY>
						<BITS 18 18>> FIX>>
		<COND (<0? .ENT><AGAIN>)>	;"don't print anything for job"
		<PRINCJ .LEN>	;"job #"
		<PRINC "   ">
		<COND (<==? .ENT *777777*>
			<PRINC "DET">)
			(ELSE <PRINCJ .ENT>)>	;"tty #"
		<PRINC "   ">
		<SET ENT <GETBITS <GETAB .LEN .JOBNAM> <BITS 18>>>
			;"index into snames"
		<PRINC <SIXTOS <GETAB .ENT .SNAMES>>>	;"print subsys name"
		<PRINC "   ">
		<SET ENT <GETAB .LEN .JOBDIR>>
		<OR <DIRST <GETBITS .ENT <BITS 18>>><PRINC "?">>
		<TERPRI>
>)>
T>

<DEFINE PRINCJ (FX)
	#DECL ((VALUE FX) FIX)
	<COND (<L? .FX 100><PRINC " ">)>
	<COND (<L? .FX 10><PRINC " ">)>
	<PRINC .FX>>

<ENDPACKAGE>

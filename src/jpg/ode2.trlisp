;;; -*- Mode: Lisp; Package: Macsyma -*-
;;; Translated code for DSK:JPG;ODE2 69

;;; TRANSL-AUTOLOAD version by GJC on FRIDAY, October 2, 1981, at 2:55:39
;;; TRHOOK version 5 TRMODE version NIL DCL version 7/28/81 17:25:57
;;; MCOMPI version NIL TRDATA version 66 ACALL version NIL
;;; FCALL version NIL TRANSQ version NIL MDEFUN version NIL
;;; MTAGS version NIL TRPRED version 2 TROPER version 13
;;; TRANSF version 11 TRANS5 version 25 TRANS4 version NIL
;;; TRANS3 version 46 TRANS2 version 39 TRANS1 version 106
;;; TRUTIL version 22 TRANSL version 1154 TRANSS version 79
(includef (cond ((status feature ITS) '|DSK:LIBMAX;TPRELU >|)
                ((status feature Multics) '|translate|)
                ((status feature Unix) '|libmax/tprelu.l|)
                (t (error '|Unknown system, see GJC@MIT-MC|))))

(eval-when (compile eval)
  (or (status feature lispm)
      (setq *infile-name-key*
               ((lambda (file-name)
                           ;; temp crock for multics.
                          (cond ((eq (typep file-name) 'list)
                                 (namestring file-name))
                                (t file-name)))
                  (truename infile)))))

(eval-when (compile)
   (setq $tr_semicompile 'NIL)
   (setq forms-to-compile-queue ()))

(comment |DSK:JPG;ODE2 68|)

(DECLARE (SPECIAL $INTFACTOR $ODEINDEX))
(DEF-MTRVAR $YNEW (QUOTE $YNEW) 1.)
(DEFMTRFUN-EXTERNAL ($ODE2 $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $MSG1 (QUOTE $MSG1) 1.)
(DEFMTRFUN-EXTERNAL ($ODE2A $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $MSG2 (QUOTE $MSG2) 1.)
(DEFMTRFUN-EXTERNAL ($ODE1A $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($DESIMP $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $Y (QUOTE $Y) 1.)
(DEF-MTRVAR $X (QUOTE $X) 1.)
(DEFMTRFUN-EXTERNAL ($PR2 $BOOLEAN MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($FTEST $BOOLEAN MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($SOLVE1 $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $F (QUOTE $F) 1.)
(DEF-MTRVAR $G (QUOTE $G) 1.)
(DEFMTRFUN-EXTERNAL ($LINEAR2 $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $%C (QUOTE $%C) 1.)
(DEFMTRFUN-EXTERNAL ($SOLVELNR $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($SEPARABLE $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($INTEGFACTOR $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $YOLD (QUOTE $YOLD) 1.)
(DEF-MTRVAR $Q (QUOTE $Q) 1.)
(DEFMTRFUN-EXTERNAL ($EXACT $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($SOLVEHOM $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($SOLVEBERNOULLI $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($GENHOM $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($HOM2 $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $ALL (QUOTE $ALL) 1.)
(DEF-MTRVAR $PNZ (QUOTE $PNZ) 1.)
(DEF-MTRVAR $%K1 (QUOTE $%K1) 1.)
(DEF-MTRVAR $%K2 (QUOTE $%K2) 1.)
(DEF-MTRVAR $ZERO (QUOTE $ZERO) 1.)
(DEF-MTRVAR $POS (QUOTE $POS) 1.)
(DEF-MTRVAR $EXPONENTIALIZE NIL 1.)
(DEFMTRFUN-EXTERNAL ($CC2 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($EXACT2 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($XCC2 $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $METHOD (QUOTE $METHOD) 1.)
(DEF-MTRVAR $CONSTCOEFF (QUOTE $CONSTCOEFF) 1.)
(DEF-MTRVAR $YP (QUOTE $YP) 1.)
(DEFMTRFUN-EXTERNAL ($VARP $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($REDUCE2 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($NLX $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($NLY $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($NLXY $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($PTTEST $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $PT (QUOTE $PT) 1.)
(DEFMTRFUN-EXTERNAL ($EULER2 $ANY MDEFINE NIL NIL))
(DEF-MTRVAR $INTEGER (QUOTE $INTEGER) 1.)
(DEF-MTRVAR $%J (QUOTE $%J) 1.)
(DEF-MTRVAR $%Y (QUOTE $%Y) 1.)
(DEFMTRFUN-EXTERNAL ($BESSEL2 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($IC1 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($BC2 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($IC2 $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($NOTEQN $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($BOUNDTEST $ANY MDEFINE NIL NIL))
(DEFMTRFUN-EXTERNAL ($FAILURE $BOOLEAN MDEFINE NIL NIL))

(DEFPROP $ODE2 T TRANSLATED)
(ADD2LNC (QUOTE $ODE2) $PROPS)
(DEFMTRFUN ($ODE2 $ANY MDEFINE NIL NIL) ($EQ $YOLD $X) NIL ((LAMBDA ($DERIVSUBST) NIL (SIMPLIFY ($SUBSTITUTE $YOLD (TRD-MSYMEVAL $YNEW (QUOTE $YNEW)) (SIMPLIFY (MFUNCTION-CALL $ODE2A (SIMPLIFY ($SUBSTITUTE (TRD-MSYMEVAL $YNEW (QUOTE $YNEW)) $YOLD $EQ)) (TRD-MSYMEVAL $YNEW (QUOTE $YNEW)) $X))))) NIL))

(DEFPROP $ODE2A T TRANSLATED)
(ADD2LNC (QUOTE $ODE2A) $PROPS)
(DEFMTRFUN ($ODE2A $ANY MDEFINE NIL NIL) ($EQ $Y $X) NIL ((LAMBDA ($DE $A1 $A2 $A3 $A4 $Q) NIL (PROG NIL (SETQ $INTFACTOR NIL) (SETQ $METHOD (QUOTE $NONE)) (COND (($FREEOF (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X 2.)) $EQ) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $ODE1A $EQ $Y $X))))) (RETURN $Q)) (T (RETURN NIL))))) (COND ((NOT (LIKE (SIMPLIFY ($DERIVDEGREE (SETQ $DE (SIMPLIFY (MFUNCTION-CALL $DESIMP (ADD* ($LHS $EQ) (SIMPLIFY (LIST (QUOTE (MMINUS)) ($RHS $EQ))))))) $Y $X)) 2.)) (RETURN (SIMPLIFY (MFUNCTION-CALL $FAILURE (TRD-MSYMEVAL $MSG1 (QUOTE $MSG1)) $EQ))))) (SETQ $A1 (SIMPLIFY ($COEFF $DE (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X 2.))))) (SETQ $A2 (SIMPLIFY ($COEFF $DE (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X))))) (SETQ $A3 (SIMPLIFY ($COEFF $DE $Y))) (SETQ $A4 (SIMPLIFY ($EXPAND (ADD* $DE (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* $A1 (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X 2.))))) (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* $A2 (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X))))) (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* $A3 $Y))))))) (COND ((AND (IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $PR2 $A1))) (IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $PR2 $A2))) (IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $PR2 $A3))) (IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $PR2 $A4))) (IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $HOM2 $A1 $A2 $A3)))))) (COND ((LIKE $A4 0.) (RETURN $Q)) (T (RETURN (SIMPLIFY (MFUNCTION-CALL $VARP $Q (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV $A4 $A1)))))))))) (RETURN (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $REDUCE2 $DE))))) (RETURN $Q)) (T (RETURN NIL)))))) (QUOTE $DE) (QUOTE $A1) (QUOTE $A2) (QUOTE $A3) (QUOTE $A4) (QUOTE $Q)))

(DEFPROP $ODE1A T TRANSLATED)
(ADD2LNC (QUOTE $ODE1A) $PROPS)
(DEFMTRFUN ($ODE1A $ANY MDEFINE NIL NIL) ($EQ $Y $X) NIL ((LAMBDA ($DE $DES $F $G $Q) NIL (PROG NIL (COND ((NOT (LIKE (SIMPLIFY ($DERIVDEGREE (SETQ $DE (SIMPLIFY ($EXPAND (ADD* ($LHS $EQ) (SIMPLIFY (LIST (QUOTE (MMINUS)) ($RHS $EQ))))))) $Y $X)) 1.)) (RETURN (SIMPLIFY (MFUNCTION-CALL $FAILURE (TRD-MSYMEVAL $MSG1 (QUOTE $MSG1)) $EQ))))) (COND ((LIKE (SIMPLIFY (MFUNCTION-CALL $LINEAR2 $DE (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X)))) NIL) (RETURN (SIMPLIFY (MFUNCTION-CALL $FAILURE (TRD-MSYMEVAL $MSG2 (QUOTE $MSG2)) $EQ))))) (SETQ $DES (SIMPLIFY (MFUNCTION-CALL $DESIMP $DE))) (SETQ $DE (SIMPLIFY (MFUNCTION-CALL $SOLVE1 $DES (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X))))) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $SOLVELNR $DE))))) (RETURN $Q))) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $SEPARABLE $DE))))) (RETURN $Q))) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $INTEGFACTOR $G $F))))) (RETURN (SIMPLIFY (MFUNCTION-CALL $EXACT (MUL* $Q $G) (MUL* $Q $F)))))) (COND ((LIKE (SIMPLIFY (MFUNCTION-CALL $LINEAR2 $DES (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $Y $X)))) NIL) (RETURN (SIMPLIFY (MFUNCTION-CALL $FAILURE (TRD-MSYMEVAL $MSG2 (QUOTE $MSG2)) $EQ))))) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $INTEGFACTOR $G $F))))) (RETURN (SIMPLIFY (MFUNCTION-CALL $EXACT (MUL* $Q $G) (MUL* $Q $F)))))) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $SOLVEHOM $DE))))) (RETURN $Q))) (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $SOLVEBERNOULLI $DE))))) (RETURN $Q))) (RETURN (COND ((IS-BOOLE-CHECK (SIMPLIFY (MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $GENHOM $DE))))) (RETURN $Q)) (T (RETURN NIL)))))) (QUOTE $DE) (QUOTE $DES) (QUOTE $F) (QUOTE $G) (QUOTE $Q)))

(DEFPROP $DESIMP T TRANSLATED)
(ADD2LNC (QUOTE $DESIMP) $PROPS)
(DEFMTRFUN ($DESIMP $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($INFLAG) NIL (PROG NIL (SETQ $EQ (SIMPLIFY ($FACTOR $EQ))) (COND ((OR ($ATOM $EQ) (NOT (LIKE (SIMPLIFY ($INPART $EQ 0.)) (QUOTE &*)))) (RETURN (SIMPLIFY ($EXPAND $EQ))))) (SETQ $EQ (SIMPLIFY (MAP1 (GETOPR (M-TLAMBDA ($U) NIL (COND (($FREEOF (SIMPLIFY ($NOUNIFY (QUOTE $DIFF))) $U) 1.) (T $U)))) $EQ))) (RETURN (SIMPLIFY ($EXPAND $EQ))))) T))

(DEFPROP $PR2 T TRANSLATED)
(ADD2LNC (QUOTE $PR2) $PROPS)
(DEFMTRFUN ($PR2 $BOOLEAN MDEFINE NIL NIL) ($F) NIL ($FREEOF (TRD-MSYMEVAL $Y (QUOTE $Y)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)))) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)) 2.)) $F))

(DEFPROP $FTEST T TRANSLATED)
(ADD2LNC (QUOTE $FTEST) $PROPS)
(DEFMTRFUN ($FTEST $BOOLEAN MDEFINE NIL NIL) ($CALL) NIL (NOT (LIKE (SETQ $Q $CALL) NIL)))

(DEFPROP $SOLVE1 T TRANSLATED)
(ADD2LNC (QUOTE $SOLVE1) $PROPS)
(DEFMTRFUN ($SOLVE1 $ANY MDEFINE NIL NIL) ($EQ $Y) NIL ((LAMBDA ($PROGRAMMODE) NIL (SIMPLIFY ($FIRST (SIMPLIFY ($SOLVE $EQ $Y))))) T))

(DEFPROP $LINEAR2 T TRANSLATED)
(ADD2LNC (QUOTE $LINEAR2) $PROPS)
(DEFMTRFUN ($LINEAR2 $ANY MDEFINE NIL NIL) ($EXPR $X) NIL ((LAMBDA NIL NIL (PROG NIL (SETQ $F (SIMPLIFY ($RATCOEF $EXPR $X))) (COND ((NOT ($FREEOF $X (TRD-MSYMEVAL $F (QUOTE $F)))) (RETURN NIL))) (SETQ $G (SIMPLIFY ($RATSIMP (ADD* $EXPR (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* (TRD-MSYMEVAL $F (QUOTE $F)) $X))))))) (RETURN ($FREEOF $X (TRD-MSYMEVAL $G (QUOTE $G))))))))

(DEFPROP $SOLVELNR T TRANSLATED)
(ADD2LNC (QUOTE $SOLVELNR) $PROPS)
(DEFMTRFUN ($SOLVELNR $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($F $G $W) NIL (PROG NIL (COND ((LIKE (SIMPLIFY (MFUNCTION-CALL $LINEAR2 ($RHS $EQ) (TRD-MSYMEVAL $Y (QUOTE $Y)))) NIL) (RETURN NIL))) (SETQ $W (SIMPLIFY ($EXP (SIMPLIFY ($INTEGRATE $F (TRD-MSYMEVAL $X (QUOTE $X))))))) (SETQ $METHOD (QUOTE $LINEAR)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (MUL* $W (ADD* (SIMPLIFY ($INTEGRATE (DIV $G $W) (TRD-MSYMEVAL $X (QUOTE $X)))) (TRD-MSYMEVAL $%C (QUOTE $%C))))))))) (QUOTE $F) (QUOTE $G) (QUOTE $W)))

(DEFPROP $SEPARABLE T TRANSLATED)
(ADD2LNC (QUOTE $SEPARABLE) $PROPS)
(DEFMTRFUN ($SEPARABLE $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($XPART $YPART $FLAG $INFLAG) NIL (PROG NIL (SETQ $EQ (SIMPLIFY ($FACTOR ($RHS $EQ)))) (COND ((OR ($ATOM $EQ) (NOT (LIKE (SIMPLIFY ($INPART $EQ 0.)) (QUOTE &*)))) (SETQ $EQ (LIST (QUOTE (MLIST)) $EQ)))) (DO (($U) (MDO (CDR $EQ) (CDR MDO))) ((NULL MDO) (QUOTE $DONE)) (SETQ $U (CAR MDO)) (COND (($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) $U) (SETQ $YPART ($CONS $U $YPART))) (($FREEOF (TRD-MSYMEVAL $Y (QUOTE $Y)) $U) (SETQ $XPART ($CONS $U $XPART))) (T (RETURN (SETQ $FLAG T))))) (COND ((LIKE $FLAG T) (RETURN NIL))) (COND ((LIKE $XPART (QUOTE ((MLIST)))) (SETQ $XPART 1.)) (T (SETQ $XPART (SIMPLIFY (MAPPLY-TR (QUOTE &*) $XPART))))) (COND ((LIKE $YPART (QUOTE ((MLIST)))) (SETQ $YPART 1.)) (T (SETQ $YPART (SIMPLIFY (MAPPLY-TR (QUOTE &*) $YPART))))) (SETQ $METHOD (QUOTE $SEPARABLE)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY ($RATSIMP (SIMPLIFY ($INTEGRATE (DIV 1. $YPART) (TRD-MSYMEVAL $Y (QUOTE $Y)))))) (ADD* (SIMPLIFY ($RATSIMP (SIMPLIFY ($INTEGRATE $XPART (TRD-MSYMEVAL $X (QUOTE $X)))))) (TRD-MSYMEVAL $%C (QUOTE $%C)))))))) (QUOTE ((MLIST))) (QUOTE ((MLIST))) NIL T))

(DEFPROP $INTEGFACTOR T TRANSLATED)
(ADD2LNC (QUOTE $INTEGFACTOR) $PROPS)
(DEFMTRFUN ($INTEGFACTOR $ANY MDEFINE NIL NIL) ($M $N) NIL ((LAMBDA ($B1 $B2 $DMDX $DMDY $DNDX $DNDY $DD $%E_TO_NUMLOG) NIL (PROG NIL (SETQ $DMDY (SIMPLIFY ($RATSIMP (SIMPLIFY ($DIFF $M (TRD-MSYMEVAL $Y (QUOTE $Y))))))) (SETQ $DNDX (SIMPLIFY ($RATSIMP (SIMPLIFY ($DIFF $N (TRD-MSYMEVAL $X (QUOTE $X))))))) (COND ((LIKE (SETQ $DD (ADD* $DMDY (SIMPLIFY (LIST (QUOTE (MMINUS)) $DNDX)))) 0.) (RETURN 1.))) (SETQ $DMDX (SIMPLIFY ($RATSIMP (SIMPLIFY ($DIFF $M (TRD-MSYMEVAL $X (QUOTE $X))))))) (SETQ $DNDY (SIMPLIFY ($RATSIMP (SIMPLIFY ($DIFF $N (TRD-MSYMEVAL $Y (QUOTE $Y))))))) (COND ((AND (LIKE (ADD* $DMDX (SIMPLIFY (LIST (QUOTE (MMINUS)) $DNDY))) 0.) (LIKE (ADD* $DMDY $DNDX) 0.)) (RETURN (DIV 1. (ADD* (POWER $M 2.) (POWER $N 2.)))))) (COND (($FREEOF (TRD-MSYMEVAL $Y (QUOTE $Y)) (SETQ $B1 (SIMPLIFY ($RATSIMP (DIV $DD $N))))) (RETURN (SIMPLIFY ($EXP (SIMPLIFY ($INTEGRATE $B1 (TRD-MSYMEVAL $X (QUOTE $X))))))))) (RETURN (COND (($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) (SETQ $B2 (SIMPLIFY ($RATSIMP (DIV $DD $M))))) (RETURN (SIMPLIFY ($EXP (SIMPLIFY ($INTEGRATE (SIMPLIFY (LIST (QUOTE (MMINUS)) $B2)) (TRD-MSYMEVAL $Y (QUOTE $Y)))))))) (T (RETURN NIL)))))) (QUOTE $B1) (QUOTE $B2) (QUOTE $DMDX) (QUOTE $DMDY) (QUOTE $DNDX) (QUOTE $DNDY) (QUOTE $DD) T))

(DEFPROP $EXACT T TRANSLATED)
(ADD2LNC (QUOTE $EXACT) $PROPS)
(DEFMTRFUN ($EXACT $ANY MDEFINE NIL NIL) ($M $N) NIL ((LAMBDA ($A) NIL (PROG NIL (SETQ $INTFACTOR (SIMPLIFY ($SUBSTITUTE (TRD-MSYMEVAL $YOLD (QUOTE $YOLD)) (TRD-MSYMEVAL $YNEW (QUOTE $YNEW)) (TRD-MSYMEVAL $Q (QUOTE $Q))))) (SETQ $A (SIMPLIFY ($INTEGRATE (SIMPLIFY ($RATSIMP $M)) (TRD-MSYMEVAL $X (QUOTE $X))))) (SETQ $METHOD (QUOTE $EXACT)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY ($RATSIMP (ADD* $A (SIMPLIFY ($INTEGRATE (SIMPLIFY ($RATSIMP (ADD* $N (SIMPLIFY (LIST (QUOTE (MMINUS)) (SIMPLIFY ($DIFF $A (TRD-MSYMEVAL $Y (QUOTE $Y))))))))) (TRD-MSYMEVAL $Y (QUOTE $Y))))))) (TRD-MSYMEVAL $%C (QUOTE $%C))))))) (QUOTE $A)))

(DEFPROP $SOLVEHOM T TRANSLATED)
(ADD2LNC (QUOTE $SOLVEHOM) $PROPS)
(DEFMTRFUN ($SOLVEHOM $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($QQ $A1 $A2) NIL (PROG NIL (SETQ $A1 (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (MUL* (TRD-MSYMEVAL $X (QUOTE $X)) $QQ) (TRD-MSYMEVAL $Y (QUOTE $Y)) ($RHS $EQ)))))) (COND ((NOT ($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) $A1)) (RETURN NIL))) (SETQ $A2 (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (DIV (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X))) $QQ (SIMPLIFY ($INTEGRATE (DIV 1. (ADD* $A1 (SIMPLIFY (LIST (QUOTE (MMINUS)) $QQ)))) $QQ))))))) (SETQ $METHOD (QUOTE $HOMOGENEOUS)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (MUL* (TRD-MSYMEVAL $%C (QUOTE $%C)) (TRD-MSYMEVAL $X (QUOTE $X))) (SIMPLIFY ($EXP $A2))))))) (QUOTE $QQ) (QUOTE $A1) (QUOTE $A2)))

(DEFPROP $SOLVEBERNOULLI T TRANSLATED)
(ADD2LNC (QUOTE $SOLVEBERNOULLI) $PROPS)
(DEFMTRFUN ($SOLVEBERNOULLI $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($A1 $A2 $N) NIL (PROG NIL (SETQ $A1 (SIMPLIFY ($COEFF (SETQ $EQ (SIMPLIFY ($EXPAND ($RHS $EQ)))) (TRD-MSYMEVAL $Y (QUOTE $Y)) 1.))) (COND ((NOT ($FREEOF (TRD-MSYMEVAL $Y (QUOTE $Y)) $A1)) (RETURN NIL))) (SETQ $N (SIMPLIFY ($HIPOW (SIMPLIFY ($RATSIMP (ADD* $EQ (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* $A1 (TRD-MSYMEVAL $Y (QUOTE $Y)))))))) (TRD-MSYMEVAL $Y (QUOTE $Y))))) (SETQ $A2 (SIMPLIFY ($COEFF $EQ (TRD-MSYMEVAL $Y (QUOTE $Y)) $N))) (COND ((OR (NOT ($FREEOF (TRD-MSYMEVAL $Y (QUOTE $Y)) $A2)) (NOT ($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) (TRD-MSYMEVAL $Y (QUOTE $Y)) $N)) (LIKE $N 0.) (NOT (LIKE $EQ (SIMPLIFY ($EXPAND (ADD* (MUL* $A1 (TRD-MSYMEVAL $Y (QUOTE $Y))) (MUL* $A2 (POWER (TRD-MSYMEVAL $Y (QUOTE $Y)) $N)))))))) (RETURN NIL))) (SETQ $A1 (SIMPLIFY ($INTEGRATE $A1 (TRD-MSYMEVAL $X (QUOTE $X))))) (SETQ $METHOD (QUOTE $BERNOULLI)) (SETQ $ODEINDEX $N) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (MUL* (SIMPLIFY ($EXP $A1)) (POWER (ADD* (MUL* (ADD* 1. (SIMPLIFY (LIST (QUOTE (MMINUS)) $N))) (SIMPLIFY ($INTEGRATE (MUL* $A2 (SIMPLIFY ($EXP (MUL* (ADD* $N -1.) $A1)))) (TRD-MSYMEVAL $X (QUOTE $X))))) (TRD-MSYMEVAL $%C (QUOTE $%C))) (DIV 1. (ADD* 1. (SIMPLIFY (LIST (QUOTE (MMINUS)) $N))))))))))) (QUOTE $A1) (QUOTE $A2) (QUOTE $N)))

(DEFPROP $GENHOM T TRANSLATED)
(ADD2LNC (QUOTE $GENHOM) $PROPS)
(DEFMTRFUN ($GENHOM $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($G $U $N $A1 $A2 $A3) NIL (PROG NIL (SETQ $G (DIV (MUL* ($RHS $EQ) (TRD-MSYMEVAL $X (QUOTE $X))) (TRD-MSYMEVAL $Y (QUOTE $Y)))) (SETQ $N (SIMPLIFY ($RATSIMP (DIV (MUL* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY ($DIFF $G (TRD-MSYMEVAL $X (QUOTE $X))))) (MUL* (TRD-MSYMEVAL $Y (QUOTE $Y)) (SIMPLIFY ($DIFF $G (TRD-MSYMEVAL $Y (QUOTE $Y))))))))) (COND ((NOT ($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) (TRD-MSYMEVAL $Y (QUOTE $Y)) $N)) (RETURN NIL))) (SETQ $A1 (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (DIV $U (POWER (TRD-MSYMEVAL $X (QUOTE $X)) $N)) (TRD-MSYMEVAL $Y (QUOTE $Y)) $G))))) (SETQ $A2 (SIMPLIFY ($INTEGRATE (DIV 1. (MUL* $U (ADD* $N $A1))) $U))) (COND ((NOT ($FREEOF (SIMPLIFY ($NOUNIFY (QUOTE $INTEGRATE))) $A2)) (RETURN NIL))) (SETQ $A3 (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (MUL* (TRD-MSYMEVAL $Y (QUOTE $Y)) (POWER (TRD-MSYMEVAL $X (QUOTE $X)) $N)) $U $A2))))) (SETQ $METHOD (QUOTE $GENHOM)) (SETQ $ODEINDEX $N) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $X (QUOTE $X)) (MUL* (TRD-MSYMEVAL $%C (QUOTE $%C)) (SIMPLIFY ($EXP $A3)))))))) (QUOTE $G) (QUOTE $U) (QUOTE $N) (QUOTE $A1) (QUOTE $A2) (QUOTE $A3)))

(DEFPROP $HOM2 T TRANSLATED)
(ADD2LNC (QUOTE $HOM2) $PROPS)
(DEFMTRFUN ($HOM2 $ANY MDEFINE NIL NIL) ($A1 $A2 $A3) NIL ((LAMBDA ($AP $AQ $PT) NIL (PROG NIL (SETQ $AP (DIV $A2 $A1)) (SETQ $AQ (DIV $A3 $A1)) (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $CC2 $AP $AQ (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X))))) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q))))) (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $EXACT2 $A1 $A2 $A3))) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q))))) (COND ((LIKE (SETQ $PT (SIMPLIFY (MFUNCTION-CALL $PTTEST $AP))) NIL) (GO $END))) (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $EULER2 $AP $AQ))) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q))))) (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $BESSEL2 $AP $AQ))) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q))))) $END (RETURN (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $XCC2 $AP $AQ))) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q)))) (T (RETURN NIL)))))) (QUOTE $AP) (QUOTE $AQ) (QUOTE $PT)))

(DEFPROP $CC2 T TRANSLATED)
(ADD2LNC (QUOTE $CC2) $PROPS)
(DEFMTRFUN ($CC2 $ANY MDEFINE NIL NIL) ($F $G $Y $X) NIL ((LAMBDA ($A $SIGN $RADEXPAND $ALPHA) NIL (PROG NIL (COND ((NOT (AND ($FREEOF $X $Y $F) ($FREEOF $X $Y $G))) (RETURN NIL))) (SETQ $METHOD (QUOTE $CONSTCOEFF)) (SETQ $A (ADD* (POWER $F 2.) (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* 4. $G))))) (COND (($FREEOF (QUOTE $%I) $A) (SETQ $SIGN (SIMPLIFY ($ASKSIGN $A)))) (T (SETQ $RADEXPAND T) (SETQ $SIGN (TRD-MSYMEVAL $PNZ (QUOTE $PNZ))))) (COND ((LIKE $SIGN (TRD-MSYMEVAL $ZERO (QUOTE $ZERO))) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) $Y (MUL* (SIMPLIFY ($EXP (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV (MUL* $F $X) 2.))))) (ADD* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) $X)))))))) (COND ((LIKE $SIGN (TRD-MSYMEVAL $POS (QUOTE $POS))) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) $Y (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY ($EXP (DIV (MUL* (ADD* (SIMPLIFY (LIST (QUOTE (MMINUS)) $F)) (SIMPLIFY (LIST (QUOTE (%SQRT)) $A))) $X) 2.)))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY ($EXP (DIV (MUL* (ADD* (SIMPLIFY (LIST (QUOTE (MMINUS)) $F)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (SIMPLIFY (LIST (QUOTE (%SQRT)) $A))))) $X) 2.)))))))))) (SETQ $A (SIMPLIFY (LIST (QUOTE (MMINUS)) $A))) (SETQ $ALPHA (DIV (MUL* $X (SIMPLIFY (LIST (QUOTE (%SQRT)) $A))) 2.)) (COND ((LIKE (TRD-MSYMEVAL $EXPONENTIALIZE NIL) NIL) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) $Y (MUL* (SIMPLIFY ($EXP (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV (MUL* $F $X) 2.))))) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY (LIST (QUOTE (%SIN)) $ALPHA))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY (LIST (QUOTE (%COS)) $ALPHA)))))))))) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) $Y (MUL* (SIMPLIFY ($EXP (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV (MUL* $F $X) 2.))))) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY ($EXP (MUL* (QUOTE $%I) $ALPHA)))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY ($EXP (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* (QUOTE $%I) $ALPHA))))))))))))) (QUOTE $A) (QUOTE $SIGN) (TRD-MSYMEVAL $ALL (QUOTE $ALL)) (QUOTE $ALPHA)))

(DEFPROP $EXACT2 T TRANSLATED)
(ADD2LNC (QUOTE $EXACT2) $PROPS)
(DEFMTRFUN ($EXACT2 $ANY MDEFINE NIL NIL) ($A1 $A2 $A3) NIL ((LAMBDA ($B1) NIL (PROG NIL (COND ((LIKE (SIMPLIFY ($RATSIMP (ADD* (SIMPLIFY ($DIFF $A1 (TRD-MSYMEVAL $X (QUOTE $X)) 2.)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (SIMPLIFY ($DIFF $A2 (TRD-MSYMEVAL $X (QUOTE $X)))))) $A3))) 0.) (SETQ $B1 (SIMPLIFY ($EXP (SIMPLIFY (LIST (QUOTE (MMINUS)) (SIMPLIFY ($INTEGRATE (SIMPLIFY ($RATSIMP (DIV (ADD* $A2 (SIMPLIFY (LIST (QUOTE (MMINUS)) (SIMPLIFY ($DIFF $A1 (TRD-MSYMEVAL $X (QUOTE $X))))))) $A1))) (TRD-MSYMEVAL $X (QUOTE $X)))))))))) (T (RETURN NIL))) (SETQ $METHOD (QUOTE $EXACT)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) $B1 (SIMPLIFY ($INTEGRATE (DIV 1. (MUL* $A1 $B1)) (TRD-MSYMEVAL $X (QUOTE $X))))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) $B1))))))) (QUOTE $B1)))

(DEFPROP $XCC2 T TRANSLATED)
(ADD2LNC (QUOTE $XCC2) $PROPS)
(DEFMTRFUN ($XCC2 $ANY MDEFINE NIL NIL) ($AP $AQ) NIL ((LAMBDA ($D $B1 $Z $RADEXPAND) NIL (PROG NIL (COND ((LIKE $AQ 0.) (RETURN NIL))) (SETQ $D (SIMPLIFY ($RATSIMP (DIV (ADD* (SIMPLIFY ($DIFF $AQ (TRD-MSYMEVAL $X (QUOTE $X)))) (MUL* 2. $AP $AQ)) (MUL* 2. (POWER $AQ (RREMAINDER 3. 2.))))))) (COND (($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) (TRD-MSYMEVAL $Y (QUOTE $Y)) $D) (SETQ $B1 (SIMPLIFY (MFUNCTION-CALL $CC2 $D 1. (TRD-MSYMEVAL $Y (QUOTE $Y)) $Z)))) (T (RETURN NIL))) (SETQ $METHOD (QUOTE $XFORMTOCONSTCOEFF)) (RETURN (SIMPLIFY ($SUBSTITUTE (SIMPLIFY ($INTEGRATE (SIMPLIFY (LIST (QUOTE (%SQRT)) $AQ)) (TRD-MSYMEVAL $X (QUOTE $X)))) $Z $B1))))) (QUOTE $D) (QUOTE $B1) (QUOTE $Z) (TRD-MSYMEVAL $ALL (QUOTE $ALL))))

(DEFPROP $VARP T TRANSLATED)
(ADD2LNC (QUOTE $VARP) $PROPS)
(DEFMTRFUN ($VARP $ANY MDEFINE NIL NIL) ($SOLN $G) NIL ((LAMBDA ($Y1 $Y2 $Y3 $Y4 $WR $HEURISTIC) NIL (PROG NIL (SETQ $Y1 (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) 1.)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) 0.))) ($RHS $SOLN)))))) (SETQ $Y2 (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) 0.)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) 1.))) ($RHS $SOLN)))))) (SETQ $WR (ADD* (MUL* $Y1 (SIMPLIFY ($DIFF $Y2 (TRD-MSYMEVAL $X (QUOTE $X))))) (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* $Y2 (SIMPLIFY ($DIFF $Y1 (TRD-MSYMEVAL $X (QUOTE $X))))))))) (COND ((LIKE $WR 0.) (RETURN NIL))) (COND ((AND (LIKE (TRD-MSYMEVAL $METHOD (QUOTE $METHOD)) (TRD-MSYMEVAL $CONSTCOEFF (QUOTE $CONSTCOEFF))) (NOT ($FREEOF (QUOTE %SIN) $WR)) (NOT ($FREEOF (QUOTE %COS) $WR))) (SETQ $HEURISTIC T) (SETQ $WR (SIMPLIFY ($RATSIMP (SIMPLIFY ($TRIGREDUCE $WR))))))) (SETQ $Y3 (SIMPLIFY ($RATSIMP (DIV (MUL* $Y1 $G) $WR)))) (SETQ $Y4 (SIMPLIFY ($RATSIMP (DIV (MUL* $Y2 $G) $WR)))) (SETQ $YP (SIMPLIFY ($RATSIMP (ADD* (MUL* $Y2 (SIMPLIFY ($INTEGRATE $Y3 (TRD-MSYMEVAL $X (QUOTE $X))))) (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* $Y1 (SIMPLIFY ($INTEGRATE $Y4 (TRD-MSYMEVAL $X (QUOTE $X))))))))))) (COND ((LIKE $HEURISTIC T) (SETQ $YP (SIMPLIFY ($RATSIMP (SIMPLIFY ($TRIGREDUCE (TRD-MSYMEVAL $YP (QUOTE $YP))))))))) (SETQ $METHOD (QUOTE $VARIATIONOFPARAMETERS)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (ADD* ($RHS $SOLN) (TRD-MSYMEVAL $YP (QUOTE $YP)))))))) (QUOTE $Y1) (QUOTE $Y2) (QUOTE $Y3) (QUOTE $Y4) (QUOTE $WR) NIL))

(DEFPROP $REDUCE2 T TRANSLATED)
(ADD2LNC (QUOTE $REDUCE2) $PROPS)
(DEFMTRFUN ($REDUCE2 $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($B1 $QQ) NIL (PROG NIL (SETQ $B1 (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)) 2.)) $QQ)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)))) $QQ))) $EQ))) (COND (($FREEOF (TRD-MSYMEVAL $Y (QUOTE $Y)) $B1) (RETURN (SIMPLIFY (MFUNCTION-CALL $NLX $EQ))))) (RETURN (COND (($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) $B1) (RETURN (SIMPLIFY (MFUNCTION-CALL $NLY $EQ)))) (T (RETURN NIL)))))) (QUOTE $B1) (QUOTE $QQ)))

(DEFPROP $NLX T TRANSLATED)
(ADD2LNC (QUOTE $NLX) $PROPS)
(DEFMTRFUN ($NLX $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($DE $B $A1 $V) NIL (PROG NIL (SETQ $DE (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)) 2.)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $V (TRD-MSYMEVAL $X (QUOTE $X)))))) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)))) $V))) $EQ))) (COND ((LIKE (SETQ $B (SIMPLIFY (MFUNCTION-CALL $ODE1A $DE $V (TRD-MSYMEVAL $X (QUOTE $X))))) NIL) (RETURN NIL))) (SETQ $A1 (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) $V (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)))))) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $%C (QUOTE $%C)) (TRD-MSYMEVAL $%K1 (QUOTE $%K1))))) $B))) (RETURN (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $NLXY $A1 (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X))))))) (SETQ $METHOD (QUOTE $FREEOFY)) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q)))) (T (RETURN NIL)))))) (QUOTE $DE) (QUOTE $B) (QUOTE $A1) (QUOTE $V)))

(DEFPROP $NLY T TRANSLATED)
(ADD2LNC (QUOTE $NLY) $PROPS)
(DEFMTRFUN ($NLY $ANY MDEFINE NIL NIL) ($EQ) NIL ((LAMBDA ($DE $B $A1 $YZ $V) NIL (PROG NIL (SETQ $DE (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)) 2.)) (MUL* $V (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) $V $YZ))))) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)))) $V)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) $YZ))) $EQ))) (COND ((LIKE (SETQ $B (SIMPLIFY (MFUNCTION-CALL $ODE1A $DE $V $YZ))) NIL) (RETURN NIL))) (SETQ $A1 (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) $V (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X)))))) (SIMPLIFY (LIST (QUOTE (MEQUAL)) $YZ (TRD-MSYMEVAL $Y (QUOTE $Y)))) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $%C (QUOTE $%C)) (TRD-MSYMEVAL $%K1 (QUOTE $%K1))))) $B))) (RETURN (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $NLXY $A1 (SIMPLIFY (LIST (QUOTE (%DERIVATIVE)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X))))))) (SETQ $METHOD (QUOTE $FREEOFX)) (RETURN (TRD-MSYMEVAL $Q (QUOTE $Q)))) (T (RETURN NIL)))))) (QUOTE $DE) (QUOTE $B) (QUOTE $A1) (QUOTE $YZ) (QUOTE $V)))

(DEFPROP $NLXY T TRANSLATED)
(ADD2LNC (QUOTE $NLXY) $PROPS)
(DEFMTRFUN ($NLXY $ANY MDEFINE NIL NIL) ($EQ $DE) NIL ((LAMBDA ($PROGRAMMODE $EQ1) NIL (PROG NIL (SETQ $EQ1 (SIMPLIFY ($SOLVE $EQ $DE))) (SETQ $EQ1 (SIMPLIFY ((LAMBDA (MAPLP RES) (SETQ RES (MAP1 (GETOPR (M-TLAMBDA ($ZZ) NIL (COND ((MFUNCTION-CALL $FTEST (SIMPLIFY (MFUNCTION-CALL $ODE1A $ZZ (TRD-MSYMEVAL $Y (QUOTE $Y)) (TRD-MSYMEVAL $X (QUOTE $X))))) (SIMPLIFY ($SUBSTITUTE (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (TRD-MSYMEVAL $%C (QUOTE $%C)) (TRD-MSYMEVAL $Q (QUOTE $Q)))))))) $EQ1)) (COND ((ATOM RES) (LIST (QUOTE (MLIST)) RES)) ((EQ (CAAR RES) (QUOTE MLIST)) RES) (T (CONS (QUOTE (MLIST)) (CDR RES))))) T NIL))) (RETURN (COND ((= ($LENGTH $EQ1) 1.) (RETURN (SIMPLIFY ($FIRST $EQ1)))) (T (RETURN $EQ1)))))) T (QUOTE $EQ1)))

(DEFPROP $PTTEST T TRANSLATED)
(ADD2LNC (QUOTE $PTTEST) $PROPS)
(DEFMTRFUN ($PTTEST $ANY MDEFINE NIL NIL) ($A) NIL ((LAMBDA ($A1 $A2 $A3) NIL (PROG NIL (COND ((LIKE (SETQ $A1 (SIMPLIFY ($RATSIMP $A))) 0.) (RETURN NIL))) (SETQ $A1 (SIMPLIFY ($EXPAND (DIV 1. $A1)))) (COND ((LIKE (SETQ $A2 (SIMPLIFY ($COEFF $A1 (TRD-MSYMEVAL $X (QUOTE $X)) 1.))) 0.) (RETURN NIL))) (COND ((NOT ($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) $A2)) (RETURN NIL))) (SETQ $A3 (SIMPLIFY ($COEFF $A1 (TRD-MSYMEVAL $X (QUOTE $X)) 0.))) (RETURN (COND ((NOT (LIKE $A1 (ADD* (MUL* $A2 (TRD-MSYMEVAL $X (QUOTE $X))) $A3))) (RETURN NIL)) (T (RETURN (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV $A3 $A2))))))))) (QUOTE $A1) (QUOTE $A2) (QUOTE $A3)))

(DEFPROP $EULER2 T TRANSLATED)
(ADD2LNC (QUOTE $EULER2) $PROPS)
(DEFMTRFUN ($EULER2 $ANY MDEFINE NIL NIL) ($A $B) NIL ((LAMBDA ($DC $RP $IP $ALPHA $BETA $SIGN $RADEXPAND) NIL (PROG NIL (COND ((NOT ($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (SETQ $BETA (SIMPLIFY ($RATSIMP (MUL* $B (POWER (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))) 2.))))))) (RETURN NIL))) (SETQ $METHOD (QUOTE $EULER)) (SETQ $ALPHA (MUL* $A (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))))) (SETQ $DC (SIMPLIFY ($RATSIMP (ADD* (POWER (ADD* $ALPHA -1.) 2.) (SIMPLIFY (LIST (QUOTE (MMINUS)) (MUL* 4. $BETA))))))) (SETQ $RP (SIMPLIFY ($RATSIMP (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV (ADD* $ALPHA -1.) 2.)))))) (SETQ $SIGN (SIMPLIFY ($ASKSIGN $DC))) (COND ((LIKE $SIGN (TRD-MSYMEVAL $ZERO (QUOTE $ZERO))) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (MUL* (POWER (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))) $RP) (ADD* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY (LIST (QUOTE (%LOG)) (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))))))))))))) (COND ((LIKE $SIGN (TRD-MSYMEVAL $POS (QUOTE $POS))) (SETQ $IP (DIV (SIMPLIFY (LIST (QUOTE (%SQRT)) $DC)) 2.)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (POWER (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))) (ADD* $RP $IP))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (POWER (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))) (ADD* $RP (SIMPLIFY (LIST (QUOTE (MMINUS)) $IP))))))))))) (SETQ $DC (SIMPLIFY (LIST (QUOTE (MMINUS)) $DC))) (SETQ $IP (DIV (SIMPLIFY (LIST (QUOTE (%SQRT)) $DC)) 2.)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (MUL* (POWER (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))) $RP) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY (LIST (QUOTE (%SIN)) (MUL* $IP (SIMPLIFY (LIST (QUOTE (%LOG)) (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))))))))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY (LIST (QUOTE (%COS)) (MUL* $IP (SIMPLIFY (LIST (QUOTE (%LOG)) (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))))))))))))))) (QUOTE $DC) (QUOTE $RP) (QUOTE $IP) (QUOTE $ALPHA) (QUOTE $BETA) (QUOTE $SIGN) NIL))

(DEFPROP $BESSEL2 T TRANSLATED)
(ADD2LNC (QUOTE $BESSEL2) $PROPS)
(DEFMTRFUN ($BESSEL2 $ANY MDEFINE NIL NIL) ($A $B) NIL ((LAMBDA ($NU $B1 $INTP $RADEXPAND) NIL (PROG NIL (COND ((NOT ($FREEOF (TRD-MSYMEVAL $X (QUOTE $X)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (SETQ $B1 (SIMPLIFY ($RATSIMP (MUL* (ADD* 1. (SIMPLIFY (LIST (QUOTE (MMINUS)) $B))) (POWER (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))) 2.))))))) (RETURN NIL))) (COND ((NOT (LIKE (SIMPLIFY ($RATSIMP (MUL* $A (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))))) 1.)) (RETURN NIL))) (SETQ $NU (SIMPLIFY (LIST (QUOTE (%SQRT)) $B1))) (SETQ $METHOD (QUOTE $BESSEL)) (COND ((LIKE $NU (RREMAINDER 1. 2.)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (DIV (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY (LIST (QUOTE (%SIN)) (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY (LIST (QUOTE (%COS)) (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))))))) (SIMPLIFY (LIST (QUOTE (%SQRT)) (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT))))))))))))) (COND ((IS-BOOLE-CHECK (SIMPLIFY ($FEATUREP $NU (TRD-MSYMEVAL $INTEGER (QUOTE $INTEGER))))) (SETQ $INTP (QUOTE $Y))) (($NUMBERP $NU) (SETQ $INTP (QUOTE $N)))) $LOOP (COND ((NOT (OR (LIKE $INTP (QUOTE $Y)) (LIKE $INTP (QUOTE $N)))) (SETQ $INTP (SIMPLIFY ($READONLY (QUOTE &I/s) $NU (QUOTE |&an integer?  Type Y or N.|)))) (GO $LOOP))) (COND ((LIKE $INTP (QUOTE $Y)) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY (MAPPLY (MARRAYREF (TRD-MSYMEVAL $%J (QUOTE $%J)) $NU) (LIST (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))) (QUOTE (($%J ARRAY) $NU))))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY (MAPPLY (MARRAYREF (TRD-MSYMEVAL $%Y (QUOTE $%Y)) $NU) (LIST (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))) (QUOTE (($%Y ARRAY) $NU))))))))))) (RETURN (SIMPLIFY (LIST (QUOTE (MEQUAL)) (TRD-MSYMEVAL $Y (QUOTE $Y)) (ADD* (MUL* (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (SIMPLIFY (MAPPLY (MARRAYREF (TRD-MSYMEVAL $%J (QUOTE $%J)) $NU) (LIST (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))) (QUOTE (($%J ARRAY) $NU))))) (MUL* (TRD-MSYMEVAL $%K2 (QUOTE $%K2)) (SIMPLIFY (MAPPLY (MARRAYREF (TRD-MSYMEVAL $%J (QUOTE $%J)) (SIMPLIFY (LIST (QUOTE (MMINUS)) $NU))) (LIST (ADD* (TRD-MSYMEVAL $X (QUOTE $X)) (SIMPLIFY (LIST (QUOTE (MMINUS)) (TRD-MSYMEVAL $PT (QUOTE $PT)))))) (QUOTE (($%J ARRAY) ((MMINUS) $NU)))))))))))) (QUOTE $NU) (QUOTE $B1) (QUOTE $INTP) (TRD-MSYMEVAL $ALL (QUOTE $ALL))))

(DEFPROP $IC1 T TRANSLATED)
(ADD2LNC (QUOTE $IC1) $PROPS)
(DEFMTRFUN ($IC1 $ANY MDEFINE NIL NIL) ($SOLN $XC $YC) NIL (PROGN (SIMPLIFY (MFUNCTION-CALL $NOTEQN $XC)) (SIMPLIFY (MFUNCTION-CALL $NOTEQN $YC)) (SIMPLIFY (MFUNCTION-CALL $BOUNDTEST (QUOTE $%C) (TRD-MSYMEVAL $%C (QUOTE $%C)))) (SIMPLIFY ($RATSIMP (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) (SIMPLIFY (LIST (QUOTE (MEQUAL)) (QUOTE $%C) ($RHS (SIMPLIFY (MFUNCTION-CALL $SOLVE1 (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) $XC $YC) $SOLN)) (TRD-MSYMEVAL $%C (QUOTE $%C)))))))) $SOLN))))))

(DEFPROP $BC2 T TRANSLATED)
(ADD2LNC (QUOTE $BC2) $PROPS)
(DEFMTRFUN ($BC2 $ANY MDEFINE NIL NIL) ($SOLN $XA $YA $XB $YB) NIL ((LAMBDA ($PROGRAMMODE $BACKSUBST $SINGSOLVE $TEMP) NIL (PROG NIL (SIMPLIFY (MFUNCTION-CALL $NOTEQN $XA)) (SIMPLIFY (MFUNCTION-CALL $NOTEQN $YA)) (SIMPLIFY (MFUNCTION-CALL $NOTEQN $XB)) (SIMPLIFY (MFUNCTION-CALL $NOTEQN $YB)) (SIMPLIFY (MFUNCTION-CALL $BOUNDTEST (QUOTE $%K1) (TRD-MSYMEVAL $%K1 (QUOTE $%K1)))) (SIMPLIFY (MFUNCTION-CALL $BOUNDTEST (QUOTE $%K2) (TRD-MSYMEVAL $%K2 (QUOTE $%K2)))) (SETQ $TEMP (SIMPLIFY ((LAMBDA (MAPLP RES) (SETQ RES (MAP1 (GETOPR (M-TLAMBDA&ENV (($ZZ) ($SOLN)) NIL (SIMPLIFY ($SUBSTITUTE $ZZ $SOLN)))) (SIMPLIFY ($SOLVE (LIST (QUOTE (MLIST)) (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) $XA $YA) $SOLN)) (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) $XB $YB) $SOLN))) (LIST (QUOTE (MLIST)) (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (TRD-MSYMEVAL $%K2 (QUOTE $%K2))))))) (COND ((ATOM RES) (LIST (QUOTE (MLIST)) RES)) ((EQ (CAAR RES) (QUOTE MLIST)) RES) (T (CONS (QUOTE (MLIST)) (CDR RES))))) T NIL))) (RETURN (COND ((= ($LENGTH $TEMP) 1.) (RETURN (SIMPLIFY ($FIRST $TEMP)))) (T (RETURN $TEMP)))))) T T T (QUOTE $TEMP)))

(DEFPROP $IC2 T TRANSLATED)
(ADD2LNC (QUOTE $IC2) $PROPS)
(DEFMTRFUN ($IC2 $ANY MDEFINE NIL NIL) ($SOLN $XA $YA $DYA) NIL ((LAMBDA ($PROGRAMMODE $BACKSUBST $SINGSOLVE $TEMP) NIL (PROG NIL (SIMPLIFY (MFUNCTION-CALL $NOTEQN $XA)) (SIMPLIFY (MFUNCTION-CALL $NOTEQN $YA)) (SIMPLIFY (MFUNCTION-CALL $NOTEQN $DYA)) (SIMPLIFY (MFUNCTION-CALL $BOUNDTEST (QUOTE $%K1) (TRD-MSYMEVAL $%K1 (QUOTE $%K1)))) (SIMPLIFY (MFUNCTION-CALL $BOUNDTEST (QUOTE $%K2) (TRD-MSYMEVAL $%K2 (QUOTE $%K2)))) (SETQ $TEMP (ADD* ($LHS $SOLN) (SIMPLIFY (LIST (QUOTE (MMINUS)) ($RHS $SOLN))))) (SETQ $TEMP (SIMPLIFY ((LAMBDA (MAPLP RES) (SETQ RES (MAP1 (GETOPR (M-TLAMBDA&ENV (($ZZ) ($SOLN)) NIL (SIMPLIFY ($SUBSTITUTE $ZZ $SOLN)))) (SIMPLIFY ($SOLVE (LIST (QUOTE (MLIST)) (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) $XA $YA) $SOLN)) (SIMPLIFY ($SUBSTITUTE (LIST (QUOTE (MLIST)) $DYA $XA) (SIMPLIFY (LIST (QUOTE (MEQUAL)) ($LHS $DYA) (SIMPLIFY (LIST (QUOTE (MMINUS)) (DIV (SIMPLIFY ($SUBSTITUTE 0. ($LHS $DYA) (SIMPLIFY ($DIFF $TEMP ($LHS $XA))))) (SIMPLIFY ($DIFF $TEMP ($LHS $YA))))))))))) (LIST (QUOTE (MLIST)) (TRD-MSYMEVAL $%K1 (QUOTE $%K1)) (TRD-MSYMEVAL $%K2 (QUOTE $%K2))))))) (COND ((ATOM RES) (LIST (QUOTE (MLIST)) RES)) ((EQ (CAAR RES) (QUOTE MLIST)) RES) (T (CONS (QUOTE (MLIST)) (CDR RES))))) T NIL))) (RETURN (COND ((= ($LENGTH $TEMP) 1.) (RETURN (SIMPLIFY ($FIRST $TEMP)))) (T (RETURN $TEMP)))))) T T T (QUOTE $TEMP)))

(DEFPROP $NOTEQN T TRANSLATED)
(ADD2LNC (QUOTE $NOTEQN) $PROPS)
(DEFMTRFUN ($NOTEQN $ANY MDEFINE NIL NIL) ($X) NIL (COND ((OR ($ATOM $X) (NOT (LIKE (SIMPLIFY ($INPART $X 0.)) (QUOTE &=)))) (DISPLAY-FOR-TR NIL NIL $X) (DISPLAY-FOR-TR NIL NIL (QUOTE |&Not an equation|)) (SIMPLIFY ($ERROR)))))

(DEFPROP $BOUNDTEST T TRANSLATED)
(ADD2LNC (QUOTE $BOUNDTEST) $PROPS)
(DEFMTRFUN ($BOUNDTEST $ANY MDEFINE NIL NIL) ($X $Y) NIL (COND ((NOT (LIKE $X $Y)) (DISPLAY-FOR-TR NIL NIL $X) (DISPLAY-FOR-TR NIL NIL (QUOTE |&Must not be bound|)) (SIMPLIFY ($ERROR)))))

(DEFPROP $FAILURE T TRANSLATED)
(ADD2LNC (QUOTE $FAILURE) $PROPS)
(DEFMTRFUN ($FAILURE $BOOLEAN MDEFINE NIL NIL) ($MSG $EQ) NIL (PROGN (COND ((NOT ($STATUS $FEATURE &ODE)) (DISPLAY-FOR-TR T NIL (SIMPLIFY ($SUBSTITUTE (TRD-MSYMEVAL $YOLD (QUOTE $YOLD)) (TRD-MSYMEVAL $YNEW (QUOTE $YNEW)) $EQ))) (DISPLAY-FOR-TR NIL NIL $MSG))) NIL))

(SETQ $MSG1 (QUOTE |&Not a proper differential equation|))

(SETQ $MSG2 (QUOTE |&First order equation not linear in y'|))


(compile-forms-to-compile-queue)


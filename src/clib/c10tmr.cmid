;
;	TIMER - Version of runtime to time procedure calls
;
;	This file is ITS dependent.
;	(Dependency is system-call to get runtime.)
;

TITLE TIMER
.INSRT NC
.INSRT NM

TIMSIZ==1000.
IF1,[
KLFLAG==0
PRINTX \KL10 (YES/NO)? \
.TTYMAC TIMEQ
IFSE TIMEQ,YES,KLFLAG==1
TERMIN
]

TP"=16			; TIME STACK POINTER

;	TIME TABLE ENTRY WORDS

%TPROC==0		; THE PROCEDURE POINTER
%TNAME==1		; THE PROCEDURE NAME (SNARFED FROM PROCEDURE)
%TNCAL==2		; THE NUMBER OF CALLS
%TTIME==3		; THE TOTAL AMOUNT OF ACCUMULATED TIME
%TSIZE==4		; SIZE OF TIME TABLE ENTRY

;	TIME STACK FRAME WORDS

%FTABL==0		; POINTER TO TIME TABLE ENTRY
%FTIME==1		; ACCUMULATED OR START TIME
%FRTNA==2		; ACTUAL RETURN ADDRESS
%FSIZE==3		; SIZE OF STACK FRAME

;	TIMING CONSTANTS (IN NANOSECONDS)
;	COMPUTED BY PROGRAM 'TTIMM'

IFE KLFLAG,[
SUSTIM==387909.			;TIME FOR .SUSET
UUOTIM==27929.			;TIME FOR UUO DISPATCH
EPITIM==30891.			;TIME FOR EPILOG
]

IFN KLFLAG,[
SUSTIM==71630.
UUOTIM==3373.
EPITIM==4663.
]

;
;	.CCALL HANDLER (TIMING VERSION)
;

IENTRY	UTCALL

	.SUSET	[24,,C]		; JOB ACCUMULATED TIME TO C
	SKIPN	TIMING"		; IS TIMING ON ?
	 GO	UT$1		; NO, RESUME NORMAL OPERATION
	SUBI	C,<UUOTIM+SUSTIM>/4069.
				; FUDGE FOR SUSET AND TIME IT TOOK
				; TO GET HERE
	SUBM	C,%FTIME(TP)	; DETERMINE CALLER'S ACCUMULATED TIME
	ADDI	TP,%FSIZE	; ALLOCATE NEW TIME FRAME

	HRRZ	B,40		; CALLED ROUTINE
	HRRZ	D,-1(B)		; TIMTAB POINTER OR PROC NAME
	CAIGE	D,TIMTAB	; IS IT A TIMTAB POINTER?
	 GO	UT$3		; NO
	CAMGE	D,TIMEP		; IS IT A TIMTAB POINTER?
	 GO	UT$2		; YES

UT$3:	MOVE	A,D		; PROC NAME
	MOVE	D,TIMEP		; FIRST TIMED CALL OF ROUTINE
	CAML	D,ETIMEP	; IS TIME TABLE FULL?
	 GO	UT$1		; YES, IGNORE THIS CALL
	MOVEM	B,%TPROC(D)	; NO - INITIALIZE NEW TIMTAB ENTRY
	MOVEM	A,%TNAME(D)
	SETZM	%TTIME(D)
	SETZM	%TNCAL(D)
	HRRM	D,-1(B)		; PUT PTR TO TIMTAB ENTRY IN NAME WORD
	MOVEI	C,%TSIZE
	ADDM	C,TIMEP		; ADVANCE POINTER TO NEXT FREE ENTRY

UT$2:				; HERE WITH PTR TO TIMTAB ENTRY IN D
	MOVEM	D,%FTABL(TP)	; STORE POINTER IN TIME STACK
	AOS	%TNCAL(D)	; INCREMENT USE COUNT

UT$1:				; CONTINUE WITH CALL PROCESSING
	HRRZ	C,40		; THE CALLED PROCEDURE
	JUMPE	C,UCBAD"	; NO SUCH PROCEDURE
	HLRZ	0,-1(C)		; THE NUMBER OF FORMAL ARGS
	CAIL	0,20		; REASONABLE NUMBER?
	 GO	UCBAD		; NO, NOT A PROCEDURE
	LDB	B,[270400,,40]	; THE NUMBER OF ACTUAL ARGS
	SUB	0,B		; NUMBER OF ARGS NOT GIVEN
	JUMPL	0,CODE [	; TOO MANY ARGS GIVEN
		ADD P,0		; POP OFF EXTRA ARGS
		GO UTDOIT	; MAKE THE CALL
		]
UTLOOP:	SOJL	0,UTDOIT	; FOR EACH ARG NEEDED
	PUSH	P,[0]		; PUSH ZERO ARG
	GO	UTLOOP		; LOOP
UTDOIT:	SKIPN	TIMING
	 GO	UT$4
	MOVE	B,UUOH		; RETURN ADDRESS
	MOVEM	B,%FRTNA(TP)	; SAVE IT
	MOVEI	B,%FTIME(TP)	; CONSTRUCT .SUSET
	HRLI	B,24		; GET START TIME FOR CALLED PROC
	.SUSET	B		; AND STORE IN TIME STACK FRAME
	PUSHJ	P,(C)		; CALL PROCEDURE
	.SUSET	[24,,C]		; JOB ACCUMULATED TIME
	MOVE	0,C
	SUBI	C,SUSTIM/4069.		; FUDGE FOR .SUSET TIME
	SUB	C,%FTIME(TP)		; SUBTRACT START TIME
	MOVE	B,%FTABL(TP)		; TIMTAB ENTRY POINTER
	ADDM	C,%TTIME(B)		; ADD TO ACCUMULATED TIME FOR CALLEE
	SUBI	TP,%FSIZE		; POP TIME STACK FRAME
	ADDI	0,<EPITIM>/4069.	; FUDGE
	SUBM	0,%FTIME(TP)		; ADJUST START TIME OF CALLER
	GO	@%FRTNA+%FSIZE(TP)	; RETURN TO CALLER

UT$4:	PUSH	P,UUOH"
	GO	(C)

IENTRY	TINIT

	SETOM	TIMING"
	MOVEI	A,UTCALL
	MOVEM	A,UUOTAB"+1
	MOVEI	TP,TIMSTK
	MOVEM	TP,TPINIT"
	MOVEI	A,TPRT"
	MOVEM	A,EXITER"
	GO	LINIT"

.IDATA
MDATA	TIMEP
	TIMTAB
MDATA	ETIMEP
	TIMTAB+<TIMSIZ*%TSIZE>
.UDATA
MDATA	TIMTAB
	BLOCK	TIMSIZ*%TSIZE
MDATA	TIMSTK
	BLOCK	TIMSIZ
END

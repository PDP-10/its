;<DRAW>LAY.FAI.21, 15-NOV-75 18:06:11, EDIT BY HELLIWELL
VERSION(LAY,3)
;CHECK FOR PASSED WIRE
LAY,<
BLCHK:	SKIPN DPCPNT
	JRST CKLTNM
	HLRZ A,DPCPNT
	HRRZ C,DPCPNT
	CAMG A,C	;ANYTHING IN LIST?
	JRST [	SKIPE B,BLPNTR	;MAKE SURE FLASHING STOPS WHEN
		PUSHJ P,PUTFS	;HE EXPLICITLY PASSES NOTHING
		SETZM BLPNTR
	MPC,<	SETZM UPINS	>
		JRST CKLTNM]
	PUSHJ P,LINKST
	HRRZ TT,DPCPNT
PASLOP:	MOVE T,(TT)
	MOVEM T,LETTER
	MOVE T,1(TT)
	MOVEM T,NUMBER
	PUSHJ P,LOOK	;FIND IT
	JRST PASLP1
	MOVE A,T
	PUSHJ P,LINKIT
PASLP1:	HRRZ TT,DPCPNT
	ADDI TT,2
	HRRM TT,DPCPNT
	HLRZ T,DPCPNT
	CAMG TT,T
	JRST PASLOP
	PUSHJ P,LINKMK
NILWIR:	SETZM DPCPNT		;DON'T TRACE AGAIN!
	TLNE M,LCENTER
	PUSHJ P,LCENMAK
CKLTNM:	SKIPN LAYLET
	POPJ P,
	MOVE T,LAYLET
	MOVEM T,LETTER
	SETZM LAYLET
	MOVE T,LAYNUM
	MOVEM T,NUMBER
	PUSHJ P,LOOK
	JRST [	OUTSTR[ASCIZ/SORRY, COULDN'T FIND THE POINT THE OTHER PROG PASSED ME!
/]
		POPJ P,]
ISLTNM:	MOVE A,T
MPC,<	FETCHL(T,A,PBIT)
	TLNN T,CPIN		;IF CONNECTOR PIN,
	 JRST ISLTPN
	EQV T,SID
	JUMPL T,ISLTPN		;AND NOT ON THAT SIDE
	SWITCH			;CHANGE SIDES
	TRO MCHG
>;MPC
ISLTPN:	FETCH(T,A,PXY)
	JRST CHKON
>;LAY

;ALLOCL - ASSIGN NUMBERS TO POINTS ON BLINK LIST
ALLOCL:	SKIPN T,BLPNTR
	 POPJ P,
	SETZM BLINKN
ALLOC1:	HRRZ TT,1(T)
	FETCHL(TT,TT,PBIT)
MPC,<	TLNN TT,CPIN
	TLNE TT,FRONT
>;MPC
	TLNN TT,CPIN!ISPIN
	 JRST ALLOC2
	AOS TT,BLINKN
	DPB TT,[POINT 17,(T),17]
ALLOC2:	HRRZ T,(T)
	JUMPN T,ALLOC1
ALLOC3:	EXCH T,BLINKN
	CAILE T,"Z"-100
	SETOM BLINKN
	POPJ P,

IFN LAYSW!UMLSW,<
LINKMK:	SKIPN T,BLPNTR
	JRST ALLOCL
PASST2:	SKIPGE (T)		;MARKED ALREADY?
	JRST PASST4		;YES
	HRRZ TT,1(T)
	FETCHL(TTT,TT,PBIT)
MD,<	TLNN TTT,CPIN		;IF IT'S AN UNMARKED CPIN, MAYBE IT'S THE SAME AS A MARKED
	 JRST PASST6		;CPIN SOMEWHERE ELSE IN THE LIST
	FETCH(TT,TT,PLOC)
	MOVE TT,(TT)		;LOC OF CPIN WE ARE LOOKING FOR
	SKIPE CRDLOC
	 HLL TT,CRDLOC
	MOVEM TT,LETTER
	MOVE TT,BLPNTR
PASST8:	SKIPL (TT)		;SKIP IF THIS ONE IS MARKED
	 JRST PASST7
	HRRZ TTT,1(TT)		;POINTER TO POINT
	FETCHL(TTT,TT,PBIT)
	TLNN TTT,CPIN
	 JRST PASST7
	HRRZ TTT,1(TT)
	FETCH(TTT,TTT,PLOC)
	MOVE TTT,(TTT)
	SKIPE CRDLOC
	 HLL TTT,CRDLOC
	CAMN TTT,LETTER		;IF THIS ONE MATCHES, THEN THE ORIGINAL CPIN IS OK
	 JRST PASST4		;MAKE BELIEVE ITS BIT WAS SET
PASST7:	HRRZ TT,(TT)
	JUMPN TT,PASST8
	HRRZ TT,1(T)		;IT'S REALLY A LOSER
	FETCHL(TT,TT,PBIT)
PASST6:
>;MD
MPC,<	TLNN TT,CPIN
	TLNE TT,FRONT
>;MPC
	TLNN TT,CPIN!ISPIN
	 JRST PASST3
	AOS TTT,BLINKN		;ASSIGN ERRORS A LETTER TOO
	TRO TTT,400000		;MARK AS ERROR
	HRLM TTT,(T)
	CAIA
PASST3:	HRRZS (T)
PASST5:	HRRZ T,(T)
	JUMPN T,PASST2
	JRST ALLOC3

PASST4:	AOS TTT,BLINKN
	HRLM TTT,(T)		;STORE # AND CLEAR FLAG
	JRST PASST5

LINKST:	SKIPE B,BLPNTR	;RETURN LIST
	PUSHJ P,PUTFS
	SETZM BLPNTR
MPC,<	SETZM UPINS	>
	SETZM BLINKN
LAY,<	SETZM DOPASS	;DON'T PASS PINS BACK>
	MOVSI C,1
MPC,<	SKIPE A,PONPN2
	PUSHJ P,CLRBTS
>;MPC
	SKIPE A,PONPNT
	JRST CLRBTS
	POPJ P,

LINKIT:	PUSH P,A	;WILL NEED THIS IN A MINUTE
	PUSHJ P,WIRLNK	;TRACE PIN AND FRIENDS!
	POP P,A
	SKIPN T,BLPNTR	;NOW MARK PIN IN LIST
	 POPJ P,
PASST1:	CAMN A,1(T)
	 JRST PASCK1
	HRRZ T,(T)
	JUMPN T,PASST1
	POPJ P,

PASCK1:	MOVSI TT,400000
	IORM TT,(T)
MPC,<	POPJ P,		>
MD,<	FETCHL(T,A,PBIT)
	TLNN T,ISPIN		;PIN?
	 POPJ P,		;NO, DONE
	FETCH(T,A,PLOC)
	FETCH(T,T,TPNAM)
	FETCH(TT,A,BBODY)
	MOVE A,BLPNTR
PASCK2:	SKIPGE (A)
	 JRST PASCK3
	HRRZ TTT,1(A)
	FETCH(TTT,TTT,BBODY)
	CAME TTT,TT		;SAME?
	 JRST PASCK3		;NO
	HRRZ TTT,1(A)
	FETCHL(TTT,TTT,BPBIT)
	TLNN TTT,ISPIN
	 JRST PASCK3
	HRRZ TTT,1(A)
	FETCH(TTT,TTT,BPLOC)
	FETCH(TTT,TTT,TPNAM)
	CAME TTT,T		;SAME LOW ID?
	 JRST PASCK3
	MOVSI TTT,400000
	IORM TTT,(A)
PASCK3:	HRRZ A,(A)
	JUMPN A,PASCK2
	POPJ P,
>;MD
>;LAYSW!UMLSW
;DISPLAY BLINKING STUFF
IFN LAYSW!UMLSW,<
CLRERR:	TRON M,ERRORD
	TRO MCHG
	POPJ P,

SETERR:	TRZE M,ERRORD
	TRO MCHG
	POPJ P,
>;UMLSW!LAYSW

BLDISP:
	MOVEI T,BLPG
SHORT,<	SKIPN SERR1	;ANY SHORT ERRORS TO SHOW?
	SKIPE SERR2
	JRST ISSHRT
>;SHORT
	SKIPN E,BLPNTR
	JRST HYDPOG	;NOTHING ANYWAY
SHORT,<ISSHRT:>
	MOVEM T,PGLASS
	PUSHJ P,DPYSET
SHORT,<	SKIPN E,BLPNTR	;ANY REGULAR BLINKING STUFF?
	JRST NDOBL
>;SHORT
MD,<	MOVE T,DEFBRT
	ADD T,BLBRT
	PUSHJ P,DPYBRT
	SETZM OFFCLC	;NO CON OFF SCREEN YET
>;MD
IFN UMLSW!LAYSW,<
	SETZM OFFERR
MPC,<	SKIPE UPINS
	PUSHJ P,DUPIN
>;MPC
>;IFN UMLSW!LAYSW
	PUSH P,M
	TRZ M,MD,<NBTEXT!>NPTEXT!NLINES	;DON'T SUPPRESS THESE
	TLO M,CLOCS!PLOCS	;SHOW PINS
GOTBL1:	PUSH P,E
	HRRZ E,1(E)
	JUMPE E,NOBLXX
MPC,<	FETCHL(T,E,PBIT)
	EQV T,SID
	JUMPL T,THSSID
	TRNN BTHSDS
	 JRST [	TLNE T,ISPIN	;DIP PIN? (EQV COMPLEMENTED IT)
		 JRST NOBLXX	;NO, SKIP THE REST
		LDB T,[POINT 17,@(P),17]
		SKIPE T		;CHECK FOR LETTER
		PUSHJ P,BLNKLL
IFE LAYSW!UMLSW,<JRST NOBLXX>	;THAT'S ALL IF NO ERRORS
IFN LAYSW!UMLSW,<SKIPL @(P)	;YES, ERROR PIN?
		JRST NOBLXX	;NO
		MOVE T,DEFBRT
		ADD T,BLBRT
		PUSHJ P,DPYBRT
		JRST LQQ
>;LAYSW!UMLSW
				]	;YES, CHECK FOR _??
	SKIPA T,DEFBRT
THSSID:	MOVE T,BTHBRT
	ADD T,BLBRT
	PUSHJ P,DPYBRT
>;MPC
MD,<	FETCH(T,E,PXY)
	PUSHJ P,ONSCR
	PUSHJ P,OFFCCK		;CHECK FOR CON HERE
>;MD
	PUSHJ P,DLOP3
	LDB T,[POINT 17,@(P),17]
	SKIPE T
	PUSHJ P,BLNKLL
IFN LAYSW!UMLSW,<
	SKIPL @(P)		;ILL PIN MARK HERE?
	JRST NOBLXX		;NO
LQQ:	TRNE M,ERRORD
	JRST NOBLXX
	FETCH(T,E,PXY)
	PUSHJ P,ONSCR
	AOS OFFERR
	PUSHJ P,BIGAIV
	MOVE T,[ASCID/O_??/]
	PUSHJ P,TXTDPB
>;LAYSW!UMLSW
NOBLXX:	POP P,E
	HRRZ E,(E)
	JUMPN E,GOTBL1
	POP P,T
	AND T,[CLOCS!PLOCS,,MD,<NBTEXT!>NPTEXT!NLINES]
	ANDCM M,[CLOCS!PLOCS,,MD,<NBTEXT!>NPTEXT!NLINES]
	IOR M,T
MD,<	SKIPE E,OFFCLC
	PUSHJ P,OFFCLD
>;MD
IFN UMLSW!LAYSW,<
	SKIPE E,OFFERR
	PUSHJ P,OFFERD
>;UMLSW!LAYSW
SHORT,<
NDOBL:	SKIPN SERR1
	SKIPE SERR2
	PUSHJ P,SHRTDP		;DISPLAY SHORTS ALSO
>;SHORT
	JRST BLINKO

MD,<
OFFCCK:	FETCHL(T,E,PBIT)
	TLNE T,CPIN
	 MOVEM E,OFFCLC		;SAVE AS LAST CON SEEN OFF SCREEN
	POPJ P,
>;MD
BLNKLL:	PUSH P,T
	MOVE T,STDBIG		;SMALL CHARS
	PUSHJ P,DPYBIG
	FETCH(T,E,PXY)
	PUSHJ P,AIVECT
	POP P,T
	SKIPE BLINKN
	JRST BLNKL1
BLNKL2:	LSH T,1
	ADDI T,201		;ASCID LETTER
	JRST TXTDPB

BLNKL1:	SUBI T,1
	IDIVI T,=26
	LSH T,1
	ADDI T,203
	PUSHJ P,TXTDPB
	MOVE T,TT
	LSH T,1
	ADDI T,203
	JRST TXTDPB
;LCENTER
LCENMAK:SKIPN A,BLPNTR
	POPJ P,
	PUSHJ P,MMSET
LCEN1:	HRRZ T,1(A)
	FETCH(T,T,PXY)
	PUSHJ P,MINMAX
	HRRZ A,(A)
	JUMPN A,LCEN1
	PUSHJ P,DOCENT		;DO THE CENTER THING
	MOVE T,MODE
	CAIE T,PNTM		;CAN WE MAKE A POINT CLOSEST?
	POPJ P,			;NO
	SETZ T,
	PUSHJ P,LCENJC		;TRY TO FIND A CONNECTOR PIN
	CAIA
	JRST PJMPLC		;JUMP THE GUN (I MEAN POINT)
	MOVEI T,1		;OH WELL TRY TO A PIN
	PUSHJ P,RTFND2
	POPJ P,			;CAN'T WIN THEM ALL
	JRST PJMPLC		;GO GET'EM SCOUT

DOCENT:	TRZ TFLG		;INDICATE NO CHANGE YET!
	MOVE T,MAXX
	ADD T,MINX
	ASH T,-=19		;PUT IN RIGHT HALF AND DIVIDE BY 2
	CAME T,XOFF		;CHANGING?
	TRO TFLG
	MOVEM T,XOFF
	MOVE T,MAXY
	ADD T,MINY
	ASH T,-1
	CAME T,YOFF
	TRO TFLG
	MOVEM T,YOFF
	MOVE T,MAXX
	SUB T,MINX
	HLRES T
	MOVE TT,MAXY
	SUB TT,MINY
	CAMG T,TT
	MOVE T,TT
MPC,<	MOVEI TT,30000	>
MD,<	MOVEI TT,6000	>
	IDIV TT,T
	JUMPN TT,.+2
	MOVEI TT,1
NODEC,<	CAILE TT,=16		;DON'T LET IT BE TOO BIG!
	MOVEI TT,=16
>;NODEC
DEC,<
MD,<	CAILE TT,8
	MOVEI TT,8
>;MD
MPC,<	CAILE TT,=16
	MOVEI TT,=16
>;MPC
>;DEC
	CAME TT,NSCALE
	TRO TFLG
	MOVEM TT,NSCALE
	TRZN TFLG
	POPJ P,
	MOVE T,YOFF
	HRL T,XOFF
	JRST CHANGE		;ALWAYS CENTER CURSOR SO WE CAN FIND IT

MINMAX:	CAML T,MAXX
	MOVEM T,MAXX
	CAMG T,MINX
	MOVEM T,MINX
	HRRES T
	CAML T,MAXY
	MOVEM T,MAXY
	CAMG T,MINY
	MOVEM T,MINY
	POPJ P,

MMSET:	MOVSI T,400000
	MOVEM T,MAXX
	MOVEM T,MAXY
	HRLOI T,377777
	MOVEM T,MINX
	MOVEM T,MINY
	POPJ P,
;BLINE

LAY,<
ROUTE,<
MD,<
CTMT.:	PUSHJ P,DODOT
	JRST PERRET
	MOVEI T,600+"."		;DO DOUBLE BUCKY . IN PC PROG
	MOVEM T,ODISP		;SET CHARACTER DISPATCH
	JRST GETPC
>;MD
>;ROUTE
>;LAY

META.:
LAY,<
	PUSHJ P,DODOT
	JRST PERRET
MD,<	JRST GETPC	>
MPC,<	JRST GETD	>
>;LAY				;IF NOT LAYOUT VERSION, META. FALLS INTO CTRL.

CTRL.:	PUSHJ P,DODOT
	JRST PERRET
	POPJ P,

DODOT:
LAY,<	SETOM DOPASS	>
	PUSHJ P,GETCLS
	POPJ P,
	PUSH P,A
	SKIPE B,BLPNTR
	 PUSHJ P,PUTFS
	SETZM BLPNTR		;OUR LIST
IFN UMLSW!LAYSW,<
MPC,<	SETZM UPINS	>
>;IFN UMLSW!LAYSW
	MOVSI C,1		;CLEAR THIS BIT
	SKIPE A,PONPNT
	 PUSHJ P,CLRBTS
MPC,<	SKIPE A,PONPN2
	 PUSHJ P,CLRBTS
>;MPC
LAY,<
;INITIALIZE PASSING LIST
MPC,<	SETZM LAYLOC	>
TWO,<	MOVE T,.JBFF	>	;GOOD PLACE TO START LIST
ONE,<	MOVEI T,BLDATA	>
LIB,<	MOVEI T,BLDATA	>
	HRLI T,-1(T)
	MOVEM T,DPCPNT		;LEFT HALF 0 MEANS NO POINTS YET!
>;LAY
	POP P,A
	PUSHJ P,WIRLNK		;TRACE OUT WIRE
	PUSHJ P,ALLOCL		;ALLOC LETTERS
	TLNE M,LCENTER		;CENTERING?
	PUSHJ P,LCENMAK		;YES!
	TRO MCHG		;UPDATE THIS DRAWING!
	JRST CPOPJ1

LAY,<
PLAIN.:	PUSHJ P,GETCLS
	JRST PERRET
	FETCHL(T,A,PBIT)
	TLNE T,ISPIN
	 JRST PISPIN
	TLNN T,CPIN
	 JRST [	OUTSTR[ASCIZ/SORRY, MUST BE PIN!
/]
		POPJ P,]
	SETZM LAYNUM
	FETCH(T,A,PLOC)
	MOVE T,(T)
MPC,<	HLL T,CRDLOC	>
	MOVEM T,LAYLET
MD,<	JRST GETPC	>
MPC,<	JRST GETD	>

PISPIN:	FETCH(B,A,BBODY)
MD,<	FETCH(TT,B,BLOC)  >
MPC,<	FETCH(TT,B,BLN)  >
	JUMPE TT,[OUTSTR[ASCIZ/SORRY, MUST HAVE LOCATION!
/]
		POPJ P,]
MD,<	FETCH(TT,B,BRSLOC)
	MOVEM TT,LAYLET
	FETCH(T,A,BPPN)
	JUMPN A,GOTLPN
	FETCH(T,A,BPLOC)
	FETCH(T,T,TPNAM)
GOTLPN:
>;MD
MPC,<	HLL TT,CRDLOC
	MOVEM TT,LAYLET
	FETCH(T,A,BPLOC)
	FETCH(T,T,TPID)
>;MPC
	HRRZM T,LAYNUM
MD,<	JRST GETPC	>
MPC,<	JRST GETD	>
>;LAY
;TRACE A WIRE
;A = POINT

WIRLNK:	FETCH(D,A,PBIT)
	TROE D,1
	 POPJ P,
	STORE(D,A,PBIT)
LAY,<	SKIPE DOPASS		;PASSING?
	 PUSHJ P,PASS		;CALL ROUTINE TO PASS (MAYBE) AND PUT IN DISPLAY LIST
>;LAY
BUSLNK:	GETFS(C)		;ENTER HERE FOR BUSSED THROUGH PINS (DON'T PASS)
	HRRZM A,1(C)
	EXCH C,BLPNTR
	HRRZM C,@BLPNTR
	MOVE C,BLPNTR
	PUSH P,A
MD,<
;Also link all 4 neighbors
	FOR @' I IN (D,U,L,R)
<	HRRZ A,(P)
	FETCH(A,A,PN'I)
	SKIPE A
	 PUSHJ P,WIRLNK
>
;Also link any signals with same name
	HRRZ A,(P)
	FETCH(B,A,PTXT)
	JUMPE B,WTLOP6		;NO TEXT, THIS IS EASY
	FETCH(B,B,TCSTR)
	SKIPN C,PONPNT		;NOW ON SCREEN POINTS!
	 JRST WTLOP6		;THAT'S ALL
	MOVE A,B
	ADD A,[POINT 7,1]
	PUSHJ P,SIGMAA		;PREPARE COMPARE STRING
WTLOP4:	FETCH(A,C,PTXT)
	JUMPE A,WTLOP5		;NO TEXT, SKIP CHECK
	FETCH(A,A,TCSTR)
	ADD A,[POINT 7,1]
	MOVEI B,SIGTAB
	PUSHJ P,SIGMAT		;SAME SIGNAL?
	 JRST WTLOP5		;NO MATCH
	 JFCL			;EQUIVALENT IS CLOSE ENOUGH
	PUSH P,C
	MOVE A,C		;PUT INTO A
	PUSHJ P,WIRLNK		;AND LINK INTO THIS LINE
	POP P,C
WTLOP5:	HRRZ C,(C)
	JUMPN C,WTLOP4
;Also link any bussed thru pins that are versions of this pin
WTLOP6:	HRRZ B,(P)
	FETCHL(TT,B,PBIT)
	TLNN TT,ISPIN		;PIN?
	 JRST POPAJ
	FETCH(T,B,BPLOC)
	FETCH(T,T,TPNAM)
	PUSH P,T		;SAVE ID ON STACK
	FETCH(A,B,BBODY)
	FETCH(A,A,BLNK)
	JUMPE A,WTLOPX
WTLOP9:	FETCH(B,A,BPLOC)
	FETCH(T,B,TPNAM)
	CAME T,(P)		;SAME DEFAULT NAME?
	 JRST WTLOP8		;NO
	FETCH(D,A,BPBIT)
	TROE D,1		;DONE IT YET?
	 JRST WTLOP8
	STORE(D,A,BPBIT)
	PUSH P,A
	PUSHJ P,BUSLNK		;FOLLOW IT
	POP P,A
WTLOP8:	FETCH(A,A,BPLNK)
	JUMPN A,WTLOP9
WTLOPX:	SUB P,[1,,1]		;FLUSH ID
	POP P,A
	POPJ P,			;THAT'S ALL
>;MD

MPC,<
;Link the neighboring points
	FETCH(B,A,PNEB)
	JUMPE B,WTLOPN
	PUSH P,B
WTLOP0:	MOVEI C,2
WTLOP1:	XCT(C)[	HLRZ A,(B)
		HLRZ A,1(B)
		HRRZ A,1(B)]
	JUMPE A,WTLOP2
	PUSH P,C
	PUSHJ P,WIRLNK
	POP P,C
	MOVE B,(P)
WTLOP2:	SOJGE C,WTLOP1
	HRRZ B,(B)
	HRRM B,(P)
	JUMPN B,WTLOP0
	SUB P,[1,,1]
WTLOPN:	POP P,B
	FETCHL(T,B,PBIT)
	TLNN T,ISPIN
	 JRST [	TLNN T,FEEDTH
		 POPJ P,
		FETCH(A,B,PFEED)
		JRST WTLOP5]
;Also link pin on other side of board
	PUSHJ P,FNDOSP		;Find twin on other side of board 
	 POPJ P,
WTLOP5:	FETCH(D,A,PBIT)
	TROE D,1
	 POPJ P,
	STORE(D,A,PBIT)
	JRST BUSLNK

;;Find pin on other side that is twin of this one
;B = pin
;returns skips
;A = other pin

FNDOSP:	FETCHL(TT,B,PBIT)
	TLNN TT,ISPIN
	 PUSHJ P,FUCKUP		;Only sensible for body pins
	FETCH(TT,B,BPLOC)
	FETCH(TT,TT,TPID)
	FETCH(A,B,BBODY)
	FETCH(A,A,BLNK)		;Body has pins on both sides
	JUMPE A,WTLOPE
WTLOP4:	CAMN A,B		;SKIP THE SAME POINT
	 JRST WTLOP3
	FETCH(TTT,A,BPLOC)
	FETCH(TTT,TTT,TPID)
	CAMN TTT,TT
	 JRST CPOPJ1
WTLOP3:	FETCH(A,A,BPLNK)
	JUMPN A,WTLOP4
WTLOPE:	OUTSTR[ASCIZ/Can't find pin on other side, OOPS!
/]
	POPJ P,

>;MPC
;PASS INFO TO OTHER PROG
LAY,<
PASS:	FETCHL(TT,A,PBIT)
	TLNN TT,ISPIN		;DOES IT HAVE A LOCATION?
	 JRST CHKCPN		;NOT REG. PIN
	FETCH(TT,A,BBODY)
MD,<	FETCH(D,TT,BLOC)
	JUMPE D,CPOPJ		;ANY LOC?
	FETCH(D,TT,BRSLOC)
	SKIPE CRDLOC		;GLOBAL LOC?
	 HLL D,CRDLOC		;YES, USE IT
	MOVEM D,LETTER
	FETCH(D,A,BPPN)
	JUMPN D,ISPNUM		;ANY PIN #?
	FETCH(D,A,BPLOC)
	FETCH(D,D,TPNAM)
ISPNUM:
STONUM:	MOVEM D,NUMBER		;YES, STO IT
>;MD
MPC,<	FETCH(D,TT,BLN)
	HLL D,CRDLOC		;USE CRDLOC ALSO
	MOVEM D,LETTER
	FETCH(T,A,BPLOC)
	FETCH(T,T,TPID)
	MOVEM T,NUMBER		;PASS PIN# HERE
>;MPC
	JRST PASSM1		;AND PASS IT

CHKCPN:	TLNN TT,CPIN		;CONNECTOR PIN?
	 POPJ P,		;NO, NO PASS
	FETCH(TT,A,PLOC)
	MOVE T,(TT)
	MOVEM T,LETTER
MPC,<	EXCH T,LAYLOC
	SKIPE T
	 HRROS LAYLOC		;FLAG TOO MANY FOUND
>;MPC
	SETZM NUMBER
PASSM1:	HLRZ T,DPCPNT
	ADDI T,2
TWO,<
	CAMG T,.JBREL
	JRST COREOK
	MOVE TT,T
	CORE TT,
	JRST [	OUTSTR[ASCIZ/CAN'T GET LOWER CORE TO PASS LOCATION!
CONTINUE TO INGNORE THIS POINT!
/]
		HALT CPOPJ]
>;TWO
IFN LIBSW!ONESW,<
	CAIGE T,BLDATA+BLLEN
	 JRST COREOK
	OUTSTR[ASCIZ/TOO MANY LOCATIONS, WILL IGNORE SOME!
/]
	POPJ P,
>;IFN LIBSW!ONESW
COREOK:	HRLM T,DPCPNT
	MOVE TT,LETTER
	MOVEM TT,-1(T)
	MOVE TT,NUMBER
	MOVEM TT,(T)
	POPJ P,
>;LAY
;LOOK
IFN LAYSW!UMLSW,<
;CALL WITH LETTER & NUMBER SET TO LOC TO FIND
;RETURNS POINT IN T

LOOK:	SKIPN NUMBER		;PIN OR CPIN?
	JRST LOOKC0
	SKIPN T,DBODPN
	POPJ P,			;NONE AT ALL!!!
	HRRZS (P)		;CLEAR SAVED BODY POINTER
LOOKB1:
MPC,<	FETCH(TTT,T,BLN)  >
MD,<	FETCH(TTT,T,BLOC)
	JUMPE TTT,NOTB1		;NO BLOCK, NO MATCH
	FETCH(TTT,T,BRSLOC)
	SKIPE CRDLOC
>;MD
	 HLL TTT,CRDLOC
	XOR TTT,LETTER		;MATCH IF EITHER HIGH PART 0
	TRNE TTT,-1		;LOW PART MATCH?
	JRST NOTB1		;NO
	JUMPE TTT,ISB		;ALL MATCH?
	XOR TTT,LETTER		;CONVERT BACK
	TLNE TTT,-1		;ARE WE 0 CARD
	MOVE TTT,LETTER		;NO CHECK HIM
	TLNN TTT,-1		;HIM OR ME 0?
	JRST ISB		;YES, GO GET'M
NOTB1:	HRRZ T,(T)
	JUMPN T,LOOKB1
	POPJ P,			;NONE FOUND

ISB:	
MPC,<	HLRZ TTT,(P)
	SKIPE TTT
	OUTSTR[ASCIZ/MORE THAN ONE DIP FOUND AT ISB!
/]
>;MPC
	HRLM T,(P)
MD,<	MOVE TTT,NUMBER
	MOVEM TTT,DX1
>;MD
	FETCH(T,T,BLNK)
	JUMPE T,NOTP3
LOOKP1:
MPC,<	FETCHL(TTT,T,BPBIT)
	TLNN TTT,FRONT		;FIND ON FRONT
	 JRST NOTP1
	FETCH(TT,T,BPLOC)
	FETCH(TTT,TT,TPID)
>;MPC
MD,<	FETCH(TTT,T,BPPN)
	JUMPE TTT,NOTP1		;ANY PIN #?
	FETCH(TT,T,BPLOC)
	FETCH(TT,TT,TPBIT)
	TRNE TT,BUSSED		;DON'T FIND THE BUSSED THROUGH ONES
	 JRST NOTP1
>;MD
	CAMN TTT,NUMBER
	 JRST CPOPJ1
NOTP1:	HLRZ TT,(T)
NOTP2:	HRRZ T,(TT)
	JUMPN T,LOOKP1
NOTP3:	HLRZ T,(P)		;GET SAVED BODY POINTER
	JRST NOTB1

;LOOKUP CONNECTOR PIN
LOOKC0:
MPC,<	PUSH P,A
	MOVE A,LETTER
	PUSHJ P,QUPIN
	CAIA
	JRST [	POP P,A
		AOS UPINS
		POPJ P,]
	POP P,A
	MOVE T,SID
	HRR T,LETTER
	TRNN T,1
	TLC T,FRONT
	TLNN T,FRONT
	SKIPA T,PONPN2
>;MPC
	MOVE T,PONPNT
	JUMPE T,CPOPJ
LOOKC1:	FETCHL(TTT,T,PBIT)
	TLNN TTT,CPIN
	 JRST NOTC1
	FETCH(TTT,T,PLOC)
	MOVE TTT,(TTT)
MD,<	SKIPE CRDLOC	>
	 HLL TTT,CRDLOC
	XOR TTT,LETTER
	JUMPE TTT,CPOPJ1
	TRNE TTT,-1
	 JRST NOTC1
	XOR TTT,LETTER
	TLNE TTT,-1
	 MOVE TTT,LETTER
	TLNN TTT,-1
	 JRST CPOPJ1
NOTC1:	HRRZ T,(T)
	JUMPN T,LOOKC1
	POPJ P,
;CALL ROUTING SUBRS FOR BLINKING PINS!
MPC,<
ROUTE,<
CTMT.:
RTBL:	SKIPN A,BLPNTR		;CAN WE DO ANYTHING?
	JRST PERRET		;NO, LOSE
	SETZM RCL1
	SETZM RCL2		;FLAG AS EMPTY FOR NOW
RCL12:	HRRZ T,1(A)		;GET PC POINT
	JUMPE T,RCL121
	HLRZ TT,(A)		;CHECK LETTER
	TRNN TT,377777		;ANY LETTER ASSIGNED?
	JRST RCL121		;NO, DON'T COUNT THIS ONE
	SKIPN RCL1
	JRST [	MOVEM T,RCL1
		JRST RCL121]
	SKIPE RCL2
	JRST RTLOP
	MOVEM T,RCL2
RCL121:	HRRZ A,(A)
	JUMPN A,RCL12
	SKIPE RCL2		;DID WE GET EXACTLY 2?
	JRST GOTLET		;YES
		OUTSTR[ASCIZ/NOT ENOUGH PINS BLINKING!!!
/]
	POPJ P,

RTLOP:	OUTSTR[ASCIZ/TYPE ROUTING PAIR
/]
	PUSHJ P,RTFND
	JRST RTLOS1
	MOVEM T,RCL1
	PUSHJ P,RTFND
	JRST RTLOS2
	MOVEM T,RCL2
GOTLET:	PUSHJ P,DOROUTE		;NOW DO ROUTING
	SETZM RCL1
	SETZM RCL2		;KEEP ARROWS AWAY
	SKIPN A,BLPNTR		;LEAVE NOW IF 2 OR LESS
	POPJ P,
	MOVEI T,2		;IF THIS GOES NEG, MUST ASK AGAIN
RCLQ1:	HRRZ TT,1(A)
	JUMPE TT,RCLQ2
	HLRZ TT,(A)
	TRNE TT,377777
	SOJL T,RTLOP		;COUNT DOWN AND BLAST OFF
RCLQ2:	HRRZ A,(A)
	JUMPN A,RCLQ1
	POPJ P,			;NOT ENOUGH MORE, LEAVE

RTLOS1:	CAIN C,ALTMOD
	POPJ P,			;LET HIM OUT
	OUTSTR[ASCIZ/CAN'T FIND FIRST POINT!
/]
	JRST RTLOP

RTLOS2:	CAIE C,ALTMOD
	OUTSTR[ASCIZ/CAN'T FIND SECOND POINT!
/]
	JRST RTLOP
>;ROUTE
>;MPC
>;LAYSW!UMLSW
;PJUMP
PJUMP:
SHORT,<	SKIPN SERR1
	SKIPE SERR2
	JRST PJUMP0
>;SHORT
	SKIPN BLPNTR
	JRST PERRET
PJUMP0:	PUSHJ P,RTFND		;FIND IT
	 JRST PJUMPN		;NOT FOUND
PJMPLC:	MOVE A,T
MPC,<	FETCHL(TT,A,PBIT)
	EQV TT,SID
	JUMPL TT,PJUMP1		;ON RIGHT SIDE?
	FETCHL(TT,A,PBIT)
	TLNE TT,ISPIN
	 JRST [	MOVE B,A
		PUSHJ P,FNDOSP	;Try to find twin pin on this side
		 JRST .+1	;lose
		JRST PJUMP1]
	TRNE INLIN		;Drawing lines?
	 JRST PERRET		;yes, can't switch sides without feedthru
	SWITCH
	TRO MCHG		;MUST NOW UPDATE DISPLAY
PJUMP1:
>;MPC
	TRZ INMOV
	MOVE T,A
	JRST SCLOSP

PJUMPX:
SHORT,<	CAIL C,"1"
	CAILE C,"4"
	JRST PJUMPS
	XCT (C)0-"1"+[
		HRRZ T,SERR1
		HRRZ T,SERR2
		HLRZ T,SERR2
		HLRZ T,SERR1]
	JUMPN T,CPOPJ1
	POPJ P,
PJUMPS:
>;SHORT
	JRST INNERR

PJUMPN:	OUTSTR[ASCIZ/POINT NOT FOUND!!
/]
	POPJ P,

RTFND:	TLNE M,DSKACT!MACACT
	JRST RTFND1
SHORT,<	SKIPN BLPNTR
	JRST [	OUTSTR[ASCIZ/TYPE NUMBER (1-4)/]
		JRST RTFND1]
>;SHORT
	SKIPN BLINKN
	JRST [	OUTSTR[ASCIZ/TYPE LETTER/]
		JRST RTFND0]
	OUTSTR[ASCIZ/LARGE LIST, TYPE 2 LETTERS/]
RTFND0:
SHORT,<	SKIPN SERR1
	SKIPE SERR2
	OUTSTR[ASCIZ/ OR NUMBER (1-4)/]
>;SHORT
RTFND1:	PUSHJ P,GETCHR		;GET LETTER OF POINT HE WANTS!
	CAIN C,"_"
	JRST RTFNDC		;FIND CONNECTOR
	CAIL C,"A"
	CAILE C,"Z"
	JRST PJUMPX
	MOVEI T,-100(C)
	SKIPN BLINKN
	JRST RTFND2
	PUSHJ P,GETCHR
	CAIL C,"A"
	CAILE C,"Z"
	JRST PJUMPX
	SUBI T,1
	IMULI T,=26
	ADDI T,-100(C)
;ENTER HERE WITH 1 IN T TO FIND FIRST BLINKING POINT
;IF YOU COULDN'T FIND A CONNECTOR PIN TO JUMP TO
RTFND2:	SKIPN TTT,BLPNTR	;GET POINTER
	POPJ P,			;NONE
RTFND3:	HLRZ TT,(TTT)		;GET PC POINT FROM THIS BLOCK
	ANDI TT,377777
	CAMN TT,T
	JRST [	HRRZ T,1(TTT)
		JRST CPOPJ1]
	HRRZ TTT,(TTT)		;NO, TRY NEXT BLOCK
	JUMPN TTT,RTFND3
	POPJ P,			;NOT FOUND

;TRY TO FIND nTH CONNECTOR PIN ON RUN
RTFNDC:	PUSHJ P,READNC		;READ NUMBER (WILL POP POPJ ON ERROR)
;ENTER HERE WITH 0 IN T TO ATTEMPT TO JUMP TO CONNECTOR PIN
;WHEN CENTERING
LCENJC:	SKIPN TTT,BLPNTR
	POPJ P,			;LOSE
RTFNDD:	HRRZ TT,1(TTT)		;GET POINTER
	FETCHL(TT,TT,PBIT)
	TLNE TT,CPIN		;CONNECTOR PIN?
	 SOJLE T,[HRRZ T,1(TTT)	;THIS IS IT
		JRST CPOPJ1]
	HRRZ TTT,(TTT)		;KEEP GOING DOWN LIST
	JUMPN TTT,RTFNDD
	POPJ P,			;NOT FOUND

<PACKAGE "HISTORY">

<ENTRY HISTORY LONG-TERM-HISTORY SCRIPT-HISTORY ;SETUP MAKE-SAVE>

<USE "TIMFCN" "HOSTS" ;"CALSYM" ;"CALRDR" ;"CALCOM" ;"COMMAND" "STR" "JCL">

<SETG 1WORD <IUVECTOR 1 #WORD *000000000000*>>

<SETG 96FIX <IUVECTOR 96 '0>>

<SETG 384FIX <IUVECTOR 384 '0>>

<SETG CSDATA-HEADER <IUVECTOR 6 '0>>

<SETG CSMSTR-HEADER <IUVECTOR 6 '0>>

<SETG LONG-HSTY-ENTRY <IUVECTOR 6 '0>>

<SETG SOCK-HEADER <IUVECTOR 3 '0>>

<SETG DATIME-VECTOR1 <IUVECTOR 4 '0>>

<SETG DATIME-VECTOR2 <IUVECTOR 4 '0>>

<SETG ALL-STATES '["undetermined	"  "host not available"	  "ncp not responding"
  "logger not responding"  "logger rejecting"  "logger available"  "not surveyed"]>

<SETG DITTO-STATES '["     \" \"" " \"    \"      \"" " \"   \"      \""
 "  \"     \"       \"" "  \"         \"" "  \"         \"" " \"      \""]>

<SETG DETECT-GAP 60>

<SETG OLD-HOST-NAM <HOST <SETG OLD-HOST-NUM 70>>>

<SETG OLD-SOCKET 1>

<SETG OLD-SPAN 10>

<SETG OLD-OUTCH .OUTCHAN>

<SETG LAST-HISTORY <>>

<SETG ICB <>>

<SETG CR-LF "
">

<SETG TAB "	">

<SETG 3SP "   ">

<SETG MONTHS '[" JAN " " FEB " " MAR " " APR " " MAY " " JUN " " JUL " " AUG " " SEP " " OCT " " NOV " " DEC "]>

<SETG NUMBERS '["00" "01" "02" "03" "04" "05" "06" "07" "08" "09" "10" "11" "12" "13"
 "14" "15" "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
 "31" "32" "33" "34" "35" "36" "37" "38" "39" "40" "41" "42" "43" "44" "45" "46" "47"
 "48" "49" "50" "51" "52" "53" "54" "55" "56" "57" "58" "59"]>

<GDECL	(1WORD) <UVECTOR [1 WORD]>
	(96FIX 384FIX CSDATA-HEADER CSMSTR-HEADER LONG-HSTY-ENTRY SOCK-HEADER
	DATIME-VECTOR1 DATIME-VECTOR2)
	<UVECTOR [REST FIX]>
	(ALL-STATES DITTO-STATES MONTHS NUMBERS) <VECTOR [REST STRING]>
	(DETECT-GAP OLD-HOST-NUM OLD-SOCKET OLD-SPAN) FIX
	(OLD-HOST-NAM CR-LF TAB 3SP) STRING
	(OLD-OUTCH ICB) <OR FALSE CHANNEL>
	(LAST-HISTORY) <OR FALSE ATOM>>

<DEFINE PUT-IN-WORD (WD POS "AUX" (N 12))
	#DECL ((WD) WORD (POS N) FIX (VALUE) ATOM)
	<SET POS <* 12 <- .POS 1>>>
	<REPEAT ()
		<PUT	,96FIX
			<SET POS <+ .POS 1>>
			<CHTYPE <GETBITS .WD <NTH '[#BITS *000300000000*
						#BITS *030300000000*
						#BITS *060300000000*
						#BITS *110300000000*
						#BITS *140300000000*
						#BITS *170300000000*
						#BITS *220300000000*
						#BITS *250300000000*
						#BITS *300300000000*
						#BITS *330300000000*
						#BITS *360300000000*
						#BITS *410300000000*] .N>>
				FIX>>
		<AND <0? <SET N <- .N 1>>> <RETURN>>>
	T>

<DEFINE HSTY-HEADER ("OPTIONAL" (LONG-HSTY? <>)
	"AUX" (HEADER <COND (.LONG-HSTY? ,CSMSTR-HEADER)(,CSDATA-HEADER)>))
	#DECL ((VALUE) ATOM (LONG-HSTY?) <OR FALSE ATOM>(HEADER) <UVECTOR [REST FIX]>)
	<READB ,1WORD ,ICB>
	<COND	(.LONG-HSTY? <PUT ,CSMSTR-HEADER 1 <CHTYPE <1 ,1WORD> FIX>>)
		(OW <PUT ,CSDATA-HEADER 1
			<CHTYPE <GETBITS <1 ,1WORD> #BITS *222200000000*> FIX>>
		 <PUT ,CSDATA-HEADER 2
			<CHTYPE <GETBITS <1 ,1WORD> #BITS *002200000000*> FIX>>)>
	<READB ,1WORD ,ICB>
	<PUT .HEADER 3 <PARSE <SIXTOS <1 ,1WORD>>>>
	<READB ,1WORD ,ICB>
	<PUT .HEADER 4 <PARSE <SIXTOS <1 ,1WORD>>>>
	<READB ,1WORD ,ICB>
	<PUT .HEADER 5 <PARSE <SIXTOS <1 ,1WORD>>>>
	<READB ,1WORD ,ICB>
	<PUT .HEADER 6 <PARSE <SIXTOS <1 ,1WORD>>>>
	T>

<DEFINE HISTORY HACT ("OPTIONAL" (HOST <>)(SOCK <>)(SPAN <>)(OUTCH ,OLD-OUTCH))
	#DECL	((HOST)<SPECIAL <OR FALSE FIX>>
		(SOCK SPAN)<SPECIAL <OR FALSE FIX>>
		(OUTCH)<SPECIAL CHANNEL> (HACT) <SPECIAL ACTIVATION>
		(VALUE) <OR ATOM FALSE>)
	<CHECK-HSTY-ARGS>
	<SEARCH-HSTY-DATA>
	<DISPLAY-HSTY-DATA>
	<RESET-HSTY-DEFAULTS>>


<DEFINE CHECK-HSTY-ARGS ("OPTIONAL" (LONG-HSTY? <>))
	#DECL ((VALUE) ATOM (LONG-HSTY?) <OR FALSE ATOM>)
	<COND	(<NOT .HOST><SET HOST ,OLD-HOST-NUM>)
		(<TYPE? .HOST FIX>
		 <CHECK-HOST-NUM .HOST>)>
	<OR .SOCK <SET SOCK ,OLD-SOCKET>>
	<OR .LONG-HSTY? .SPAN <SET SPAN ,OLD-SPAN>>
	<OR .OUTCH <SET OUTCH ,OLD-OUTCH>>
	T>

<DEFINE RESET-HSTY-DEFAULTS ("OPTIONAL" (LONG-HSTY? <>))
	#DECL ((VALUE) ATOM (LONG-HSTY?) <OR FALSE ATOM>)
	<SETG OLD-HOST-NUM .HOST>
	<SETG OLD-HOST-NAM <HOST .HOST>>
	<SETG OLD-SOCKET .SOCK>
	<OR .LONG-HSTY? <SETG OLD-SPAN .SPAN>>
	<SETG OLD-OUTCH .OUTCH>
	T>

<DEFINE CHECK-HOST-NUM (N)
	#DECL ((N) FIX (VALUE) ATOM)
	<COND (<AND <0? .N>
		    <NOT <HOST ,OLD-HOST-NAM>>
		    <RETURN #FALSE ("BAD-OLD-HOST") .HACT>>)
	      (<AND <0? .N> <NOT ,LAST-HISTORY>>
		<RETURN #FALSE ("NO PREVIOUS HISTORY?") .HACT>)
		(<0? .N>)
	      (<0? <LENGTH <HOST .N>>>
	       <RETURN #FALSE ("BAD-HOST-NUMBER") .HACT>)>
	T>

<DEFINE SEARCH-HSTY-DATA SACT ("OPTIONAL" (LONG-HSTY? <>))
	#DECL ((VALUE LONG-HSTY?) <OR ATOM FALSE>)
	<SETG LAST-HISTORY <>>
	<SETG ICB <OPEN "READB" <COND	(.LONG-HSTY? "SURVEY;CSMSTR NOW")
					("SURVEY;CSDATA NOW")>>>
	<OR ,ICB <RETURN ,ICB .HACT>>
	<AND <0? .HOST> <SET HOST ,OLD-HOST-NUM> <RETURN T .SACT>>
	<HSTY-HEADER .LONG-HSTY?>	;"FLAG SAYS LONG OR SHORT"
	<REPEAT ((N <COND (.LONG-HSTY? 7)(9)>))
		<READB ,1WORD ,ICB>
		<PUT ,SOCK-HEADER 1
			<CHTYPE <GETBITS <1 ,1WORD> #BITS *222200000000*> FIX>>
		<PUT ,SOCK-HEADER 2
			<CHTYPE <GETBITS <1 ,1WORD> #BITS *002200000000*> FIX>>
		<COND	(<AND <==? .SOCK <1 ,SOCK-HEADER>><==? .HOST <2 ,SOCK-HEADER>>>
			 <READB ,1WORD ,ICB>
			 <PUT ,SOCK-HEADER 3 <CHTYPE <1 ,1WORD> FIX>>
			 <RETURN>)
			(<AND <==? 262143 <1 ,SOCK-HEADER>>
			      <==? 262143 <2 ,SOCK-HEADER>>>
			 <RETURN #FALSE("HOST-SOCKET COMBINATION NOT AVAILABLE") .HACT>)
			(OW <ACCESS ,ICB <+ <17 ,ICB> .N>>)>>
	<REPEAT ((N 0))
		<AND <==? <COND (.LONG-HSTY? 7) (9)>
			  <SET N <+ .N 1>>>
		     <RETURN>>
		<READB ,1WORD ,ICB>
		<COND (.LONG-HSTY?
		       <PUT ,LONG-HSTY-ENTRY .N <CHTYPE <1 ,1WORD> FIX>>)
		      (<PUT-IN-WORD <1 ,1WORD> .N>)>>>


<DEFINE PUT-IN-384FIX ("AUX" (384FIX ,384FIX))
	#DECL ((VALUE) ATOM
	       (384FIX) <UVECTOR [REST FIX]>)
	<ACCESS ,ICB <- <FILE-LENGTH ,ICB> 384>>
	<READB .384FIX ,ICB>
	<REPEAT ((N 385))
		#DECL ((N) FIX)
		<AND <0? <SET N <- .N 1>>> <RETURN>>
		<PUT .384FIX .N <PARSE <SIXTOS <CHTYPE <NTH .384FIX .N> WORD>>>>>
	T>



<DEFINE CHECK-SPAN ()
	#DECL ((VALUE) ATOM)
	<COND	(<G? .SPAN <1 ,CSDATA-HEADER>>
		 <PRINTUPL .OUTCH "Only "
		 <UNPARSE <SET SPAN <1 ,CSDATA-HEADER>>>
		 " Surveys available. ">)
		(<L? .SPAN 1>
		 <PRINC "Not a valid time-span; 96 Surveys follow." .OUTCH>
		 <SET SPAN 96>)>
	T>

<DEFINE SLASH-HOST (N)
	#DECL ((VALUE) STRING (N) FIX)
	<STRING <UNPARSE </ .N 64>> !\/ <UNPARSE <MOD .N 64>>>>

<DEFINE DISPLAY-HEADER ()
	#DECL ((VALUE) ATOM)
	<PRINTUPL .OUTCH ,CR-LF
		  "	Table for the most recent " .SPAN " Surveys" ,CR-LF
		  "	for Host " <SLASH-HOST .HOST> " (" <HOST .HOST> ")"
		  ;" on Socket #" ;.SOCK ,CR-LF>>

<DEFINE TIME-GAP ("AUX" (DATE1 <STD-DATE <3 ,DATIME-VECTOR2>>)
	(DATE2 <STD-DATE <1 ,DATIME-VECTOR1>>)(TIME1 <STD-TIME <4 ,DATIME-VECTOR2>>)
	(TIME2 <STD-TIME <2 ,DATIME-VECTOR1>>))
	#DECL ((VALUE) <OR FALSE STRING>(TIME1 TIME2 DATE1 DATE2) <LIST [3 FIX]>)
	<COND	(<G? <DTDIFF (.DATE1 .TIME1) (.DATE2 .TIME2)> ,DETECT-GAP>
		 <TIME-DIF .DATE2 .DATE1 .TIME2 .TIME1>)>>

<DEFINE STD-TIME (N)
	#DECL ((VALUE)<LIST [3 FIX]> (N) FIX)
	<LIST	</ .N 10000>
		</ <MOD .N 10000> 100>
		<MOD .N 100>>>

<DEFINE STD-DATE (N "AUX" (A <STD-TIME .N>))
	#DECL ((VALUE A)<LIST [3 FIX]>(N) FIX)
	(<3 .A> <1 .A> <2 .A>)>

<DEFINE ALL.VECTORS ("OPTIONAL" (A T) (B T) (C T) (D T))
	#DECL ((A B C D) <OR FALSE ATOM> (VALUE) ATOM)
	<AND .A <PRINC ,CSDATA-HEADER> <PRINC ,CSMSTR-HEADER>>
	<TERPRI>
	<AND .B <PRINC ,SOCK-HEADER>>
	<TERPRI>
	<AND .C <PRINC ,96FIX>>
	<TERPRI>
	<AND .D <PRINC ,384FIX>>
	T>

<DEFINE SCRIPT-HISTORY ("OPTIONAL" (FILE <>)(HOST <>)
	(SOCK <>)(SPAN <>)(OUTCH ,OLD-OUTCH) "AUX" OC )
	#DECL ((FILE VALUE)<OR STRING CHANNEL FALSE> 
		(HOST SOCK SPAN)<SPECIAL <OR FALSE FIX>>
		(OUTCH)<SPECIAL CHANNEL> (OC) CHANNEL)
	<SET OC <COND	(<NOT .FILE>
			 <OR <OPEN "PRINT" "HSTSCP">
			     <OPEN "PRINT" <STRING "VANISH;" <UNAME>>>>)
			(<TYPE? .FILE STRING>
			 <OPEN "PRINT" .FILE>)
			(.FILE)>>
	<PUT <TOP .OUTCH> 1 (.OC !<1 <TOP .OUTCH>>)>
	<HISTORY .HOST .SOCK .SPAN .OUTCH>
	<PUT <TOP .OUTCH> 1 <REST <1 <TOP .OUTCH>> 1>>
	<OR	<TYPE? .FILE CHANNEL>
		<CLOSE .OC>>
	.FILE>


<DEFINE DISPLAY-HSTY-DATA ("AUX" (A ,DATIME-VECTOR2) (LAST-STATE -1))
	#DECL ((A) <UVECTOR [REST FIX]> (LAST-STATE) FIX (VALUE) ATOM)
	<PUT-IN-384FIX>
	<CHECK-SPAN>
	<DISPLAY-HEADER>
	<SET CSTATE <2 ,CSDATA-HEADER>>
	<PRINC "
	Date		Range in time	State of Host" ;"
	Date		Start	End	State of Host
			Survey	Survey"  .OUTCH>
	<SETG LAST-HISTORY T>
	<PUT ,DATIME-VECTOR1 1 <1 ,384FIX>>
	<PUT ,DATIME-VECTOR1 2 <2 ,384FIX>>
	<PUT ,DATIME-VECTOR1 3 <3 ,384FIX>>
	<PUT ,DATIME-VECTOR1 4 <4 ,384FIX>>
	<REPEAT ((DATIME 1) (N <* 4 .SPAN>) S)
		#DECL ((DATIME) <SPECIAL FIX> (N) FIX (S) <OR FALSE STRING>)
		<AND <G? .DATIME .N> <RETURN>>
		<AND <0? <SET CSTATE <- .CSTATE 1>>> <SET CSTATE 96>>
		<SETG DATIME-VECTOR2 ,DATIME-VECTOR1>
		<PUT .A 1 <NTH ,384FIX .DATIME>>
		<PUT .A 2 <NTH ,384FIX <+ .DATIME 1>>>
		<PUT .A 3 <NTH ,384FIX <+ .DATIME 2>>>
		<PUT .A 4 <NTH ,384FIX <+ .DATIME 3>>>
		<SETG DATIME-VECTOR1 .A>
		<COND (<SET S <TIME-GAP>>
		       <PRINTUPL .OUTCH ,CR-LF ,CR-LF "Time-gap of " .S "."
				 ,CR-LF " No Surveys between "
				 <DATESTR <STD-DATE <1 ,DATIME-VECTOR1>>> " "
				 <TIMESTR <STD-TIME <2 ,DATIME-VECTOR1>>> " and "
				 <DATESTR <STD-DATE <3 ,DATIME-VECTOR2>>> " "
				 <TIMESTR <STD-TIME <4 ,DATIME-VECTOR2>>> ,CR-LF>
		       <SET LAST-STATE -1>)>
		<PRINTUPL .OUTCH ,CR-LF <+ 1</ <- .DATIME 1> 4>> ")	"
			  <COND	(<OR <L? .LAST-STATE 0>
				     <N==? <1 ,DATIME-VECTOR2> <1 ,DATIME-VECTOR1>>>
				 <DATESTR <STD-DATE <1 ,DATIME-VECTOR1>>>)
				(,TAB)>
			  ,TAB <TIMESTR <STD-TIME <2 ,DATIME-VECTOR1>>>
			  ,TAB <TIMESTR <STD-TIME <4 ,DATIME-VECTOR1>>>
			  ,TAB>
		<COND (<==? .LAST-STATE <NTH ,96FIX .CSTATE>>
		       <PRINC <NTH ,DITTO-STATES <+ 1 .LAST-STATE>> .OUTCH>)
		   (<PRINC <NTH ,ALL-STATES <+ 1 <SET LAST-STATE <NTH ,96FIX .CSTATE>>>>
			   .OUTCH>)>
		<SET DATIME <+ .DATIME 4>>>
	<CLOSE ,ICB>
	<TERPRI .OUTCH>
	T>



<DEFINE LONG-TERM-HISTORY HACT ("OPTIONAL" (HOST <>)(SOCK <>)(OUTCH ,OLD-OUTCH))
	#DECL	((HOST SOCK)<SPECIAL <OR FALSE FIX>> (OUTCH)<SPECIAL CHANNEL>
		(HACT) <SPECIAL ACTIVATION> (VALUE) <OR ATOM <FALSE STRING>>)
	<CHECK-HSTY-ARGS T>
	<SEARCH-HSTY-DATA T>
	<DISPLAY-LONG-HSTY-DATA>
	<RESET-HSTY-DEFAULTS T> T>

<DEFINE DISPLAY-LONG-HSTY-DATA ("AUX" (N <FLOAT <+ !,LONG-HSTY-ENTRY>>))
	#DECL ((VALUE) ATOM (N) FLOAT)
	<SETG LAST-HISTORY T>
	<PRINTUPL .OUTCH ,CR-LF
		  " History of Host " <SLASH-HOST .HOST> " (" <HOST .HOST> ")"
		  ;" on socket #" ;.SOCK ,CR-LF
		  " for Surveys taken up to "
		  <DATESTR <STD-DATE <6 ,CSMSTR-HEADER>>> "  "
		  <TIMESTR <STD-TIME <5 ,CSMSTR-HEADER>>> ,CR-LF
		  " No. of Surveys for this Host = " <FIX .N>
		  " (1.000 batting average)" ,CR-LF>
	<MAPF <>
	      <FUNCTION (S E)
			<PRINTUPL .OUTCH
			 ,TAB .S ,TAB .E " times" ,TAB
			 <COND (<L? .E 10> "	(.") (T "(.")>
			 <REST <UNPARSE <+ 1000 <FIX <+ 0.5 <* </ .E .N> 1000>>>>>>
			 ")" ,CR-LF>>
	      ,ALL-STATES
	      ,LONG-HSTY-ENTRY>
	<PRINTUPL .OUTCH
	 "    Average response time = "
	 <FIX <+ 0.5 <* 1000 </ </ <3 ,SOCK-HEADER> 30> .N>>>>
	 " milliseconds."
	 ,CR-LF>
	<CLOSE ,ICB>
	T>

<DEFINE PRINTUPL ( CHAN "TUPLE" STUFF )
	#DECL ((VALUE) ATOM (CHAN) <OR CHANNEL FALSE> (STUFF) TUPLE)
	<MAPF <> <FUNCTION (X) <PRINC .X .CHAN>> .STUFF> T>

<DEFINE DATESTR (DATE)
	#DECL ((VALUE) STRING (DATE) <LIST [3 FIX]>)
   <STRING <NTH ,NUMBERS <+ 1 <3 .DATE>>> <NTH ,MONTHS <2 .DATE>> <UNPARSE <1 .DATE>>>>

<DEFINE TIMESTR (TIME)
	#DECL ((VALUE) STRING (TIME) <LIST [3 FIX]>)
	<STRING <NTH ,NUMBERS <+ 1 <1 .TIME>>> !\: <NTH ,NUMBERS <+ 1 <2 .TIME>>>>>


<DEFINE TS ("AUX" JCL LJCL CH (OUTCHAN .OUTCHAN)
		  (LONGSW <>) (FILESW <>) (SPAN 10))
   #DECL ((JCL) <OR FALSE STRING> (LJCL) LIST (CH) <OR CHANNEL FALSE>
	  (LONGSW FILESW) <OR FALSE 'T> (SPAN) FIX)
   <COND
    (<OR <NOT <SET JCL <READJCL>>>
	 <=? .JCL "?">>
     <PRINC "
	Type :HISTORY host1 host2 ... <CR> to get recent history.
	Include (n) in the command to get last 10*n surveys.
	Include (L) in the command to get long-term history instead.
	Include (F) in the command to send output to file 'HISTOR >'.
">)
    (T
     <MAPF <>
	   <FUNCTION (C)
	    #DECL ((C) ANY)
	    <COND (<AND <TYPE? .C LIST> <NOT <EMPTY? .C>>>
		   <COND (<TYPE? <1 .C> ATOM>
			  <COND (<=? "L" <SPNAME <1 .C>>>
				 <SET LONGSW T>)
				(<=? "F" <SPNAME <1 .C>>>
				 <SET FILESW T>)>)
			 (<TYPE? <1 .C> FIX>
			  <SET SPAN <* <1 .C> 10>>)
			 (T
			  <PRINC "
Invalid item ignored: ">  
			  <PRINC .C>)>)>>
	   <SET LJCL <LPARSE <UPPERCASE .JCL>>>>
     <AND .FILESW
	  <COND (<SET CH <OPEN "PRINT" "HISTOR >">>
		 <SET OUTCHAN .CH>)
		(T <PRINC "
Couldn't open file 'HISTOR >'; output will go to terminal instead.">)>>
     <MAPF <>
      <FUNCTION (A "AUX" H I N)
       #DECL ((A H I N) ANY)
       <AND <DECL? .A '<FORM 'GVAL ANY>> <PRIMTYPE? .A LIST> <SET A <2 .A>>>
       <COND (<OR <TYPE? <SET H .A> FIX>
		  <AND <TYPE? .A ATOM>
		       <OR <AND <SET H <HOST <SET N <SPNAME .A>>>>
				<SET H <CONVERT-HOST .H>>>
			   <AND <SET H <MEMQ !\/ .N>>
				<TYPE? <SET I <PARSE <REST .H>>> FIX>
				<TYPE? <SET H <PARSE
				  <SUBSTRUC .N 0 <- <LENGTH .N> <LENGTH .H>>>>>
				       FIX>
				<SET H <CONVERT-HOST <+ .H<* .I *1000*>>>>>>>>
	      <COND (<SET H <COND (.LONGSW
				   <OR <LONG-TERM-HISTORY .H 0 .OUTCHAN>
				       <LONG-TERM-HISTORY .H 2 .OUTCHAN>>)
				  (T
				   <OR <HISTORY .H 0 .SPAN .OUTCHAN>
				       <HISTORY .H 2 .SPAN .OUTCHAN>>)>>)
		    (T <PRINT .A> <PRINC ": "> <PRINC <1 .H>>)>)
	     (T <PRINT .A> <PRINC "is not a valid host.">)>>
      .LJCL>)>>

<DEFINE CONVERT-HOST (NEWNUM "AUX" HNUM INUM) #DECL ((NEWNUM HNUM INUM) FIX)
  <COND (<L? .NEWNUM *400*> .NEWNUM)	; "Already old-style"
	(<OR <G? <SET HNUM <CHTYPE <GETBITS .NEWNUM <BITS 8 0>> FIX>> 3>
			;"Host on imp"
	     <G? <SET INUM <CHTYPE <GETBITS .NEWNUM <BITS 16 9>> FIX>> *77*>
			;"Imp">
	 .NEWNUM)	; "If won't fit in old-style, return new"
	(<CHTYPE <PUTBITS .INUM
			  <BITS 2 6>
			  .HNUM> FIX>)>>

<DEFINE MAKE-SAVE ()
	<SNAME "">
	<HANDLER <GET ,INCHAN INTERRUPT> #FUNCTION ((X Y) <QUIT>)>
	<COND (<=? "RESTORED" <SAVE "SURVEY;HISTOR >">>
	       <TS>
	       <QUIT>)>>

<ENDPACKAGE>

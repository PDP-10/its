
<PACKAGE "GNJFN">

<ENTRY NEXT-FILE GNJFN-RESET>

<USE "NSTR" "SORTX">

<SETG MFDPTR 2>

<SETG MFDENTLEN 2>

<SETG UDNAMP 2>

<SETG LUNBLK 5>

<SETG UNFN1 1>

<SETG UNFN2 2>

<SETG UNRNDM 3>

<SETG UNDATE 4>

<SETG UNLNKB <BITS 1 18>>

<SETG UNWRDC <BITS 10 24>>

<SETG UNDSCP <BITS 13 0>>

<MANIFEST MFDPTR MFDENTLEN UDNAMP LUNBLK UNFN1 UNFN2 UNRNDM UNDATE
	  UNLNKB UNWRDC UNDSCP>

<PUT CUR-STATE
     DECL
     '<VECTOR <OR STRING <UVECTOR [REST WORD]>>
	      <OR FALSE <UVECTOR [REST WORD]>>
	      [2 <OR FALSE WORD>]
	      [3 WORD]>>

<SETG CS-MFD 1>

<SETG CS-DIR 2>

<SETG CS-FN1 3>

<SETG CS-FN2 4>

<SETG CS-LDIR 5>

<SETG CS-LFN1 6>

<SETG CS-LFN2 7>

<MANIFEST CS-MFD CS-DIR CS-FN1 CS-FN2 CS-LDIR CS-LFN1 CS-LFN2>

<SETG LAST-SPEC "">

<GDECL (LAST-SPEC) STRING (MFD-BUF DIR-BUF) <UVECTOR [REST WORD]>>

"On 20x, the state is simply a JFN (full-word), which can be passed
to GNJFN.  If it is false, we aren't initialized.  On ITS, the state is
a pair:  a pointer into a uvector of directories to be searched, and
a pointer into the current directory."

<SETG CUR-STATE <>>

"Takes a file spec, including *'s, and returns a vector containing
a string and bits as for the GNJFN call, or false if no more files."

<DEFINE NEXT-FILE ("OPTIONAL" (SPEC ,LAST-SPEC) (V <>)
		   "AUX" RES CS DIRS CH ICH) 
	#DECL ((SPEC) STRING (RES) <OR FALSE <PRIMTYPE WORD>>
	       (CS) <OR FALSE CUR-STATE> (DIRS) <OR STRING UVECTOR>
	       (CH) CHANNEL (ICH) <OR CHANNEL FALSE>)
	<COND (<N=? .SPEC ,LAST-SPEC> <GNJFN-RESET>)>
	<SETG LAST-SPEC .SPEC>
	<SET CS ,CUR-STATE>
	<COND (<NOT .CS>
	       <SET CH <CHANNEL "READ" .SPEC>>
	       <COND (<=? <6 .CH> "*">
		      <COND (<GASSIGNED? MFD-BUF> <SET DIRS ,MFD-BUF>)
			    (<SET DIRS <IUVECTOR 1024 #WORD *000000000000*>>
			     <SETG MFD-BUF .DIRS>)>
		      <COND (<SET ICH <OPEN "READB" "M.F.D. (FILE)">>
			     <READB .DIRS .ICH>
			     <CLOSE .ICH>
			     <SET DIRS
				  <REST .DIRS <CHTYPE <MFDPTR .DIRS> FIX>>>
			     <SORT <> .DIRS ,MFDENTLEN>)
			    (<ERROR CANT-GET-MFD .ICH NEXT-FILE>)>)
		     (<SET DIRS <6 .CH>>)>
	       <SET CS
		    [.DIRS
		     <>
		     <COND (<=? <3 .CH> "*"> <>)
			   (<CHTYPE <STRTOX <3 .CH>> WORD>)>
		     <COND (<=? <4 .CH> "*"> <>)
			   (<CHTYPE <STRTOX <4 .CH>> WORD>)>
		     #WORD *000000000000*
		     #WORD *000000000000*
		     #WORD *000000000000*]>
	       <SETG CUR-STATE .CS>
	       <COND (<NOT <GASSIGNED? DIR-BUF>>
		      <SETG DIR-BUF <IUVECTOR 1024 #WORD *000000000000*>>)>)>
	<COND (<DOSEARCH .CS .V>)
	      (<GNJFN-RESET> <>)>>

<DEFINE DOSEARCH DS (CS V "AUX" DIR) 
   #DECL ((CS) CUR-STATE (DIR) <UVECTOR [REST <PRIMTYPE WORD>]>
	  (V) <OR FALSE VECTOR>)
   <COND
    (<FIND-NEXT-DIR .CS>
     <SET DIR <CS-DIR .CS>>
     <REPEAT (RES FS FB RND CDATE)
       #DECL ((RND RES) WORD (FS FB) FIX)
       <COND
	(<AND <FN-MATCH <CS-FN1 .CS> <UNFN1 .DIR>>
	      <FN-MATCH <CS-FN2 .CS> <UNFN2 .DIR>>>
	 <SET RES
	      <CHTYPE
	       <ORB <COND (<AND <TYPE? <CS-MFD .CS> UVECTOR>
				<N==? <1 <BACK <CS-MFD .CS> ,MFDENTLEN>>
				      <CS-LDIR .CS>>>
			   7)
			  (0)>
		    <COND (<N==? <UNFN1 .DIR> <CS-LFN1 .CS>> 3) (0)>
		    <COND (<N==? <UNFN2 .DIR> <CS-LFN2 .CS>> 1) (0)>>
	       WORD>>
	 <SET RND <UNRNDM .DIR>>
	 <SET CDATE <UNDATE .DIR>>
	 <PUT .CS ,CS-DIR <REST .DIR ,LUNBLK>>
	 <PUT .CS
	      ,CS-LDIR
	      <COND (<TYPE? <CS-MFD .CS> UVECTOR>
		     <1 <BACK <CS-MFD .CS> ,MFDENTLEN>>)
		    (<CHTYPE <STRTOX <CS-MFD .CS>> WORD>)>>
	 <PUT .CS ,CS-LFN1 <UNFN1 .DIR>>
	 <PUT .CS ,CS-LFN2 <UNFN2 .DIR>>
	 <PUT .CS ,CS-DIR <REST .DIR ,LUNBLK>>
	 <COND (<NOT .V> <SET V <IVECTOR 2>>)>
	 <PUT .V 1 <FILE-STRING .CS>>
	 <COND (<G? <LENGTH .V> 1>
		<PUT .V 2 .RES>
		<COND (<G? <LENGTH .V> 2>
		       <COND (<0? <CHTYPE <GETBITS .RND ,UNLNKB> FIX>>
			      <PUT .V 3 <COUNT-WORDS <GETBITS .RND ,UNDSCP>
						     ,DIR-BUF
						     <GETBITS .RND ,UNWRDC>>>
			      <COND (<G? <LENGTH .V> 3>
				     <PUT .V 4 36>)>)
			     (<PUT .V 3 0>
			      <COND (<G? <LENGTH .V> 3>
				     <PUT .V 4 36>)>)>
		       <COND (<G? <LENGTH .V> 4>
			      <PUT .V 5 .CDATE>)>)>)>
	 <RETURN .V>)>
       <COND (<EMPTY? <SET DIR <REST .DIR ,LUNBLK>>>
	      <PUT .CS 2 .DIR>
	      <COND (<FIND-NEXT-DIR .CS> <SET DIR <2 .CS>>)
		    (<RETURN <>>)>)>>)>>

<DEFINE FN-MATCH (X Y) 
	#DECL ((X Y) <OR FALSE WORD>)
	<OR <==? .X .Y> <NOT .X> <NOT .Y>>>

<DEFINE FIND-NEXT-DIR FND (CS "AUX" DIR) 
   #DECL ((CS) <VECTOR <OR STRING UVECTOR> <OR FALSE UVECTOR>>
	  (DIR) <OR FALSE UVECTOR>)
   <COND
    (<OR <NOT <2 .CS>>
	 <EMPTY? <2 .CS>>>
     <COND
      (<OR <AND <TYPE? <1 .CS> STRING> <2 .CS>> <EMPTY? <1 .CS>>> <>)
      (T
       <COND (<TYPE? <1 .CS> UVECTOR>
	      <REPEAT ((MFD <1 .CS>))
		      #DECL ((MFD) <UVECTOR [REST <PRIMTYPE WORD>]>)
		      <COND (<NOT <0? <CHTYPE <1 .MFD> FIX>>>
			     <COND (<AND <SET DIR <GETDIR <1 .MFD>>>
					 <NOT <EMPTY? .DIR>>>
				    <PUT .CS 2 .DIR>
				    <PUT .CS 1 <REST .MFD ,MFDENTLEN>>
				    <RETURN>)>)>
		      <COND (<EMPTY? <SET MFD <REST .MFD ,MFDENTLEN>>>
			     <RETURN <>>)>>)
	     (<AND <SET DIR <GETDIR <1 .CS>>>
		   <NOT <EMPTY? .DIR>>>
	      <PUT .CS 2 .DIR>)
	     (<RETURN <> .FND>)>)>)
    (T)>>

<DEFINE GETDIR (NM "AUX" CH) 
	#DECL ((NM) <OR STRING <PRIMTYPE WORD>>)
	<COND (<NOT <TYPE? .NM STRING>> <SET NM <SIXTOS .NM !\>>)>
	<COND (<SET CH <OPEN "READB" ".FILE." "(DIR)" "DSK" .NM>>
	       <READB ,DIR-BUF .CH>
	       <CLOSE .CH>
	       <REST ,DIR-BUF <CHTYPE <UDNAMP ,DIR-BUF> FIX>>)>>

<DEFINE GNJFN-RESET ("OPTIONAL" (FLUSH? <>)) 
	#DECL ((FLUSH?) <OR ATOM FALSE>)
	<COND (.FLUSH? <GUNASSIGN MFD-BUF> <GUNASSIGN DIR-BUF>)>
	<SETG CUR-STATE <>>>

<DEFINE FILE-STRING (CS) 
	#DECL ((CS) CUR-STATE)
	<STRING "DSK:"
		<COND (<TYPE? <CS-MFD .CS> STRING> <CS-MFD .CS>)
		      (<SIXTOS <CS-LDIR .CS> !\>)>
		";"
		<SIXTOS <CS-LFN1 .CS> !\>
		" "
		<SIXTOS <CS-LFN2 .CS> !\>>>

<TITLE COUNT-WORDS>
	<DECLARE ("VALUE" <OR FIX FALSE> <PRIMTYPE WORD> UVECTOR
		  <PRIMTYPE WORD>)>
	<DPUSH	TP* (AB)>
	<DPUSH	TP* 2(AB)>
	<DPUSH	TP* 4(AB)>
	<PUSHJ	P* ICOUNT>
	<JRST	FINIS>

<INTERNAL-ENTRY ICOUNT 3>
	<SUBM	M* (P)>
	<MOVE	C* -2(TP)>	; "directory"
	<MOVE	A* -4(TP)>	; "count of desc bytes"
	<IDIVI	A* 6>		; "number of words into desc area"
	<ADDI	A* 11>
	<HRLS	A>
	<ADD	C* A>
	<JUMPGE	C* LOSER>	; "C/ vector pointer to desc word"
	<MOVE	D* C>
	<HRLI	D* *440600*>	; "6bit byte pointer to start of desc"
; "update for remainder of division"
	<JUMPE	B* BLKLUP>
	<ILDB	O* D>
	<SOJG	B* HERE -1>

BLKLUP	<ILDB	O* D>		; "pick up a byte"
	<JUMPE	O* LSTBYT>	; "if 0, end of descriptor"
	<CAILE	O* 12>	; "UDTKMX: if >12, can just add"
	<JRST	ADDTHEM>
	<ADD	B* 0>
	<JRST	BLKLUP>

ADDTHEM	<CAIGE	O* 31>		; "UDTPWH: place holder"
	<AOJA	B* BLKLUP>
	<CAIN	O* 31>
	<JRST	BLKLUP>
	<IBP	D>
	<IBP	D>
	<AOJA	B* BLKLUP>

LSTBYT	<MOVE	A* <TYPE-WORD FIX>>
	<JUMPE	B* COUT>	; "if zero blocks"
	<SKIPE	(TP)>		; "dont SOS if even # of block"
	 <SOS	B>
	<IMULI	B* 1024>	; "convert to words"
	<ADD	B*  (TP)>	; "extra words"
COUT	<SUB	TP* [<(6) 6>]>	
	<JRST	MPOPJ>

LOSER	<MOVE	A* <TYPE-WORD FALSE>>
	<SETZ	B*>
	<JRST	COUT>
<END>

<ENDPACKAGE>

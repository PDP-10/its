
<PACKAGE "MDKILL">

<ENTRY KILL-SPANS>

<USE "MDTYPE">

"KILL-SPANS -- takes a message and resets all span slots in it"

<DEFINE KILL-SPANS (COD "TUPLE" KL) 
	#DECL ((COD) MCOD (KL) <TUPLE [REST <OR ATOM FALSE>]>)
	<MAPF <>
	      <FUNCTION (M) 
		      #DECL ((M) MS)
		      <PUT .M ,STK <>>
		      <PUT .M ,PFX 0>
		      <COND (<EMPTY? .KL> <PUT .M ,FWD ()> <PUT .M ,BCK ()>)
			    (ELSE
			     <PUT .M ,FWD <SPLICE-AUTHORS <FWD .M> .KL>>
			     <PUT .M ,BCK <SPLICE-AUTHORS <BCK .M> .KL>>)>>
	      .COD>
	"DONE">

<DEFINE SPLICE-AUTHORS (LL KL "AUX" (L .LL) (ONE? T) A (FAILS? <>)) 
	#DECL ((LL L VALUE) <LIST [REST SPAN]>
	       (KL) <TUPLE [REST <OR ATOM FALSE>]> (ONE? FAILS? A) <OR ATOM FALSE>)
	<AND <1? <LENGTH .KL>> <NOT <1 .KL>> <SET FAILS? T>>
	<REPEAT ()
		<COND (<EMPTY? .L> <RETURN .LL>)
		      (.ONE?
		       <COND (.FAILS? <SET A <SFL <1 .L>>>)
			     (<SET A <SPAN-AUTHOR <1 .L>>>)>
		       <COND (<OR <AND .FAILS? <NOT .A>>
				  <AND <NOT .FAILS?> <MEMQ .A .KL>>>
			      <SET LL <SET L <REST .L>>>
			      <AGAIN>)
			     (ELSE <SET ONE? <>> <AGAIN>)>)
		      (<NOT <LENGTH? .L 1>>
		       <COND (.FAILS? <SET A <SFL <2 .L>>>)
			     (<SET A <SPAN-AUTHOR <2 .L>>>)>
		       <COND (<OR <AND .FAILS? <NOT .A>>
				  <AND <NOT .FAILS?> <MEMQ .A .KL>>>
			      <PUTREST .L <REST .L 2>>
			      <AGAIN>)>)>
		<SET L <REST .L>>>
	.LL>

<DEFINE SPAN-AUTHOR (S)
	#DECL ((S) SPAN (VALUE) ATOM)
	<COND (<SFL .S> <AUT .S>) (<NOT <EMPTY? <TLS .S>>> <1 <TLS .S>>) (T)>>

<ENDPACKAGE>

<PACKAGE "FTP">

<ENTRY STOR RETR BYE FTPPAIR USER FTPHOST ACCESS-INFO>

<USE "NETFTP" "HOSTS">

<SETG FTPPAIR <>>
<SETG FTPHOST <HOST "MIT-XX">>
<GDECL (FTPPAIR) <OR FALSE <LIST [2 CHANNEL]>>
       (FTPHOST) FIX
       (ACCESS-INFO) <LIST [3 STRING]>>

<DEFINE STOR (FILE "OPTIONAL" RFILE (HST ,FTPHOST)
	      "AUX" REPLY (FTP ,FTPPAIR) OCH ICH ODCH INCH)
	#DECL ((ICH OCH) CHANNEL (INCH ODCH) <OR FALSE CHANNEL>
	       (HST) FIX (FTP) <OR FALSE LIST> (REPLY) <OR FIX FALSE>)
	<PROG NETOUT ()
	      #DECL ((NETOUT) <SPECIAL ACTIVATION>)
	      <COND (<SET INCH <OPEN "READB" .FILE>>
		     <COND (<NOT <ASSIGNED? RFILE>>
			    <SET RFILE <STRING <7 .INCH> ".MSS">>)>)
		    (ELSE
		     <RETURN .INCH>)>
	      <COND (<NOT .FTP>
		     <COND (<SET FTP <CONNECT .HST
					      ,ACCESS-INFO
					      <>
					      <>
					      <>>>
			    <SETG FTPPAIR .FTP>)
			   (ELSE
			    <RETURN #FALSE (ICP-FAILED)>)>)>
	      <SET OCH <2 .FTP>>
	      <SET ICH <1 .FTP>>
	      <PR .OCH "STOR " .RFILE>
	      <COND (<SET REPLY <WAITRESP .ICH '(255 350)>>)
		    (ELSE <RETURN .REPLY>)>
	      <COND (<SET ODCH <DATA-LISTEN .ICH PRINT .HST>>)
		    (ELSE <RETURN .ODCH>)>
	      <COND (<NOT <WAITRESP .ICH '(250)>>
		     <CLOSE .ODCH>
		     <AND <GASSIGNED? RHAN> <OFF ,RHAN>>
		     <RETURN #FALSE (NO-250)>)
		    (ELSE
		     <AND <GASSIGNED? RHAN> <OFF ,RHAN>>)>
	      <FILECOPY .INCH .ODCH>
	      <CLOSE .INCH>
	      <CLOSE .ODCH>
	      <COND (<NOT <WAITRESP .ICH '(252)>>
		     <RETURN #FALSE (NO-252)>)>
	      .RFILE>>

<DEFINE RETR (RFILE "OPTIONAL" FILE (HST ,FTPHOST)
	      "AUX" REPLY (FTP ,FTPPAIR) OCH ICH IDCH OUTCH)
	#DECL ((ICH OCH) CHANNEL (OUTCH IDCH) <OR FALSE CHANNEL>
	       (HST) FIX (FTP) <OR FALSE LIST> (REPLY) <OR FIX FALSE>)
	<PROG NETOUT ()
	      #DECL ((NETOUT) <SPECIAL ACTIVATION>)
	      <COND (<NOT <ASSIGNED? FILE>>
		     <SET FILE <ITSIFY .RFILE>>)>
	      <COND (<NOT .FTP>
		     <COND (<SET FTP <CONNECT .HST
					      ,ACCESS-INFO
					      <>
					      <>
					      <>>>
			    <SETG FTPPAIR .FTP>)
			   (ELSE
			    <RETURN #FALSE (ICP-FAILED)>)>)>
	      <SET OCH <2 .FTP>>
	      <SET ICH <1 .FTP>>
	      <PR .OCH "RETR " .RFILE>
	      <COND (<SET REPLY <WAITRESP .ICH '(255 350)>>)
		    (ELSE <RETURN .REPLY>)>
	      <COND (<SET IDCH <DATA-LISTEN .ICH READ .HST>>)
		    (ELSE <RETURN .IDCH>)>
	      <COND (<NOT <WAITRESP .ICH '(250)>>
		     <CLOSE .IDCH>
		     <AND <GASSIGNED? RHAN> <OFF ,RHAN>>
		     <RETURN #FALSE (NO-250)>)
		    (ELSE
		     <AND <GASSIGNED? RHAN> <OFF ,RHAN>>)>
	      <COND (<SET OUTCH <OPEN "PRINTB" .FILE>>)
		    (ELSE
		     <CLOSE .IDCH>
		     <RETURN .OUTCH>)>
	      <FILECOPY .IDCH .OUTCH>
	      <CLOSE .IDCH>
	      <CLOSE .OUTCH>
	      <COND (<NOT <WAITRESP .ICH '(252)>>
		     <RETURN #FALSE (NO-252)>)>
	      .FILE>>

<DEFINE USER ("OPTIONAL"
	      (NAME "ANONYMOUS")
	      (PASS <UNAME>)
	      (ACCT ""))
	#DECL ((NAME PASS ACCT) STRING)
	<SETG ACCESS-INFO <LIST .NAME .PASS .ACCT>>>

<DEFINE BYE ("OPTIONAL" (FTP ,FTPPAIR))
	#DECL ((FTP) <LIST CHANNEL CHANNEL>)
	<COND (.FTP
	       <PR <2 .FTP> "BYE">
	       <WAITRESP <1 .FTP> '(231)>
	       <CLOSE-CONN .FTP>
	       <SETG FTPPAIR <>>)>>

\

<DEFINE ITSIFY (FILE "AUX" S)
	#DECL ((FILE) STRING (S) <OR STRING FALSE>)
	<SET FILE <STRING .FILE>>
	<COND (<SET S <MEMQ !\: .FILE>>
	       <SET FILE .S>)>
	<COND (<SET S <MEMQ !\< .FILE>>
	       <SET FILE .S>)>
	<COND (<SET S <MEMQ !\. .FILE>>
	       <PUT .S 1 !\ >)>
	<COND (<SET S <MEMQ !\> .FILE>>
	       <PUT .S 1 !\;>)>
	.FILE>

<DEFINE CLOSE-CONN (F)
	#DECL ((F) <LIST [2 CHANNEL]>)
	<COND (.F <CLOSE <1 .F>> <CLOSE <2 .F>>)>>

<DEFINE PR (CH "TUPLE" LINE)
	#DECL ((CH) CHANNEL (LINE) <TUPLE [REST STRING]>)
	<MAPF <>
	      <FUNCTION (S)
		   #DECL ((S) STRING)
		   <PRINC .S .CH>>
	      .LINE>
	<CRLF .CH>>

<SETG DATA-CHANNEL <>>

<DEFINE DATA-LISTEN (ICH DIREC HST "AUX" DCH)
	#DECL ((ICH) CHANNEL (DIREC) ATOM (HST) FIX
	       (DCH) <OR CHANNEL FALSE>)
	<SET DCH
	     <OPEN <SPNAME .DIREC>
		   <+ <COND (<==? .DIREC PRINT> 3)
			    (ELSE 2)>
		      <7 .ICH>>
		   -1 "NET" .HST 8>>
	<COND (<NETACC .DCH>)
	      (ELSE
	       <SETG RHAN <ON "CHAR" ,DATA-ACCEPT 3 0 .DCH>>)>
	.DCH>

<DEFINE DATA-ACCEPT (NS DCH)
	#DECL ((DCH) CHANNEL)
	<COND (<AND .DCH <NETACC .DCH>>
	       <OFF ,RHAN>
	       <DISMISS T>)>>

<ENDPACKAGE>

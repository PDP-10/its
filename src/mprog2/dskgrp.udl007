<PACKAGE "DSKGRP">

<ENTRY DISK-REPORT USERS-FILE GROUPS-FILE>

<USE "DIR" "ITS" "MFD" "NOW" "SORTX" "STR">

<SETG USERS-FILE ".BATCH;SPECS 565USR">

<SETG GROUPS-FILE ".BATCH;SPECS 565GRP">

<SETG BRKLINE "------	------	------	----------------------">

<SETG HEDLINE "USER	BLOCKS	USED	Information about user or group">

<GDECL (BRKLINE HEDLINE) STRING>

<PROG ()
      <SETG UGRP 1>					     ;"group user is in"
      <SETG UDSK 2>				  ;"user name or diskuse result"
      <SETG UEXP 3>					  ;"explanation of user"
      <MANIFEST UGRP UDSK UEXP>>

<PROG ()
      <SETG GROUP 1>						   ;"group name"
      <SETG GTOT 2>						 ;"group totals"
      <SETG GEXP 3>					 ;"explanation of group"
      <MANIFEST GROUP GTOT GEXP>>

<PROG ()
      <SETG UFD 1>						    ;"user name"
      <SETG QUOTA 2>						    ;"dir quota"
      <SETG BLKS 3>						   ;"dir blocks"
      <SETG ALLOC 4>					       ;"dir allocation"
      <MANIFEST UFD BLKS QUOTA ALLOC>>

<SETG NEWUSER '["NEW" "NEW" "Unregistered directory"]>

<SETG NEWGROUP '["NEW" "NEW" "ALL unregistered directories"]>

<GDECL (NEWUSER NEWGROUP) VECTOR (USERS-FILE GROUPS-FILE) STRING>

<DEFINE DISK-REPORT ("OPTIONAL" (FILE "TTY:")
		     (USERS-FILE ,USERS-FILE) (GROUPS-FILE ,GROUPS-FILE)
		     "AUX" USERS GROUPS NEWLIST) 
	#DECL ((USERS GROUPS) <VECTOR [REST VECTOR]> (NEWLIST) LIST
	       (USERS-FILE GROUPS-FILE) STRING)
	<SET USERS <READER .USERS-FILE>>
	<SET GROUPS <READER .GROUPS-FILE>>
	<SET NEWLIST <UFIND <DSKUSE> .USERS>>
	<PROG (IC (OC <OPEN "PRINT" .FILE>) OUTCHAN)
	      #DECL ((IC OC) <OR FALSE CHANNEL>
		     (OUTCHAN) <SPECIAL CHANNEL>)
	 <COND (.OC
	      <SET OUTCHAN .OC>
	      <USTATS .USERS .GROUPS .NEWLIST>
	      <CLOSE .OUTCHAN>
	      <ITS-CALL "MLINK"
			'![!]
			!<MAPF ,UVECTOR
			       ,STRTOX
			       ["DSK"
				"PLEASE"
				"POST"
				".LPTR."
				<7 .OUTCHAN>
				<8 .OUTCHAN>
				<10 .OUTCHAN>]>>
	      <COND (<AND <SET IC <OPEN "READ" .FILE>>
			  <SET OC <OPEN "PRINT" "COMSYS;M >">>>
		     <SET OUTCHAN .OC>
		     <MAPF <>
			   ,PRINT
			   ("FROM"	  ".BATCH"
			    "TO"	  ("GALLEY@XX")
			    "ACTION-TO"	  ("GALLEY@XX")
			    "SCHEDULE"	 '("SENDING")
			    "TEXT")>
		     <PRINC !\">
		     <FILECOPY .IC .OC>
		     <PRINC !\">
		     <CLOSE .OC>)>)>>>

<DEFINE DSKUSE ("AUX" (BUFF <IUVECTOR 1024 0>) (MFDLIST <GET-MFD>)) 
	#DECL ((MFDLIST) <VECTOR [REST STRING]> (BUFF) <SPECIAL UVECTOR>)
	<MAPF ,UVECTOR
	      <FUNCTION (USER) 
		      #DECL ((USER) STRING)
		      <GET-DIRECTORY .USER .BUFF>
		      [.USER
		       </ <4 .BUFF> 262144>
		       <MOD <4 .BUFF> 262144>
		       <MOD <5 .BUFF> 262144>]>
	      .MFDLIST>>

<DEFINE UFIND (USAGE USERS "AUX" U (NEWLIST (T)) (NL .NEWLIST)) 
	#DECL ((USAGE) UVECTOR (U) <OR FALSE VECTOR> (USERS) VECTOR
	       (NEWLIST NL) LIST)
	<MAPF <>
	      <FUNCTION (X) 
		      #DECL ((X) <VECTOR STRING FIX FIX FIX>)
		      <COND (<SET U <MTH <UFD .X> .USERS ,UDSK>>
			     <PUT .U ,UDSK .X>)
			    (T <PUTREST .NL <SET NL (.X)>>)>>
	      .USAGE>
	<REST .NEWLIST>>

<SETG UTOTALS '![0 100 108 0!]>

<DEFINE USTATS (USERS GROUPS NEWLIST
		"AUX" (UTOT ,UTOTALS) (NEW ,NEWUSER) (NEWG ,NEWGROUP) (OUTCHAN .OUTCHAN))
	#DECL ((USERS GROUPS NEW NEWG) VECTOR (NEWLIST) LIST (UTOT) UVECTOR)
	<CRLF>
	<PRINC "Disk usage by group as of ">
	<PRINTR <NOW>>
	<CRLF>
	<PRINTR ,HEDLINE>
	<CRLF>
	<PUT .UTOT ,BLKS 0>
	<PUT .UTOT ,QUOTA 0>
	<PUT .UTOT ,ALLOC 0>
	<MAPR <>
	      <FUNCTION (UU "AUX" (U <1 .UU>) (GRP <UGRP .U>) G) 
			#DECL ((U) <VECTOR STRING>
			       (UU) <VECTOR [REST VECTOR]>
			       (GRP) STRING)
			<PLINE .U .UTOT>
			<COND (<OR <1? <LENGTH .UU>>
				   <N=? .GRP <UGRP <2 .UU>>>>
			       <AND <SET G <MTH .GRP .GROUPS 1>>
				    <PTOTALS <PUT .G ,GTOT .UTOT>>>)>>
	      .USERS>
	<MAPF <>
	      <FUNCTION (U) 
			#DECL ((U) <VECTOR STRING [3 FIX]>)
			<PLINE <PUT .NEW ,UDSK .U> .UTOT>>
	      .NEWLIST>
	<PUT .NEWG ,GTOT .UTOT>
	<PTOTALS .NEWG>>

<DEFINE PLINE (U UTOT "AUX" (XX <UDSK .U>) (OUTCHAN .OUTCHAN)) 
	#DECL ((XX) <OR STRING <VECTOR STRING [3 FIX]>> (U) VECTOR
	       (UTOT) <UVECTOR [REST FIX]> (OUTCHAN) CHANNEL)
	<COND (<TYPE? .XX STRING> <PRINTR .XX "  gone     " <UEXP .U>>)
	      (T
	       <PRINC <UFD .XX>>
	       <PRINC "	">
	       <PFIX <BLKS .XX>>
	       <COND (<0? <QUOTA .XX>> <PRINC "    oo">)
		     (<PFIX </ <* <BLKS .XX> 100> <QUOTA .XX>> 5> <PRINC !\%>
		      <COND (<NOT <0? <ALLOC .XX>>> <PRINC " A">)
			    (<PRINC "  ">)>)>
	       <PRINC "	">
	       <PRINC <UEXP .U>>
	       <CRLF>
	       <PUT .UTOT ,BLKS <+ <BLKS .UTOT> <BLKS .XX>>>
	       <PUT .UTOT ,QUOTA <+ <QUOTA .UTOT> <QUOTA .XX>>>
	       <PUT .UTOT ,ALLOC <+ <ALLOC .UTOT> <ALLOC .XX>>>)>
	.U>

<DEFINE PTOTALS (GRP
		 "AUX" (UTOT <GTOT .GRP>) (B <BLKS .UTOT>) (Q <QUOTA .UTOT>)
		       (OUTCHAN .OUTCHAN))
	#DECL ((GRP) VECTOR (UTOT) <UVECTOR [REST FIX]> (B Q) FIX (OUTCHAN) CHANNEL)
	<PRINTR ,BRKLINE>
	<PRINC <GROUP .GRP>>
	<PRINC "	">
	<PFIX .B>
	<PFIX </ <* .B 100> .Q> 5>
	<PRINC !\%>
	<PRINC "	">
	<PRINC <GEXP .GRP>>
	<CRLF>
	<CRLF>
	<PUT .UTOT ,BLKS 0>
	<PUT .UTOT ,QUOTA 0>
	<PUT .UTOT ,ALLOC 0>>

<DEFINE PFIX (F "OPTIONAL" (C 6) "AUX" W (OUTCHAN .OUTCHAN)) 
	#DECL ((F C W) FIX (OUTCHAN) CHANNEL)
	<COND (<L? .F 10> <SET W 1>)
	      (<L? .F 100> <SET W 2>)
	      (<L? .F 1000> <SET W 3>)
	      (<L? .F 10000> <SET W 4>)
	      (<L? .F 100000> <SET W 5>)
	      (<L? .F 1000000> <SET W 6>)>
	<COND (<G? .W .C> <PRINTSTRING <REST "********" <- 8 .C>>>)
	      (<L? .W .C> <PRINTSTRING <REST "        " <- 8 <- .C .W>>>>)>
	<PRINC .F>>

<DEFINE READER (FILE "AUX" CH X) 
	#DECL ((FILE) STRING (CH) <OR CHANNEL FALSE> (X) ANY)
	<COND (<SET CH <OPEN "READ" .FILE>> <SET X <READ .CH>> <CLOSE .CH> .X)
	      (<ERROR !.CH>)>>

<DEFINE MTH (MEM STR N) 
	#DECL ((STR) STRUCTURED (N) FIX (MEM) ANY)
	<MAPF <>
	      <FUNCTION (S) 
		      #DECL ((S) VECTOR)
		      <COND (<=? <NTH .S .N> .MEM> <MAPLEAVE .S>)>>
	      .STR>>

<DEFINE PRINTR ("TUPLE" U "AUX" (OUTCHAN .OUTCHAN)) 
	#DECL ((U) <TUPLE <OR STRING FIX>> (OUTCHAN) CHANNEL)
	<MAPF <>
	      <FUNCTION (X)
			#DECL ((X) <OR STRING FIX>)
			<PRINC .X>
			<PRINC "	">>
	      .U>
	<CRLF>>

<ENDPACKAGE>

<PACKAGE "X.CAL">

<USE "CALCOM" "CALRDR" "CALSYM" "COMMAND" "X.UTI" "EXPUTI" "CHAN">

<SETG LAST-TABLE '["EMPTY-EXPANSION-DATA" []]>

<SETG X.COMMANDS
      <MAKEBST "Addressee expansion data base commands"
	       <BSTSORT ["create.expansion.data.base"
	        '<CALICO-COMMAND ,XSTARTER
				 '['[]
				   "called"
				   '["Give a name to the new data base." ""]
				   '["STRING" "ATOM"]]>
		"read.expansion.data.base"
	        '<CALICO-COMMAND ,XMAKER
				 '['[]
				   "called"
				   '["Give the name of the library datum." ""]
				   '["STRING" "ATOM"]]>
		"read.expansion.file"
		'<CALICO-COMMAND ,FMAKER
				 '['[]
				   "from"
				   '["Give the name of the expansion file." ""]
				   '["FILE"]
				   '[]
				   "calling it"
				   '["What should be the name of this datum?" ""]
				   '["STRING" "ATOM"]]
				 '[]>
		"dump.expansion.data.base"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,XDUMPER
				 '[,EXPANSION-DATA-TABLE
				   "called"
				   '["Give the name of the data base to write." ""]
				   '["SYM"]
				   '[]
				   "into"
				   '["The expansion file." ""]
				   '["FILE"]]
				 '[]>)>
		"expand.addressees"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-LA-EXP
				 '['[]
				   "named"
				   '["The addressees to expand." ""]
				   '["MULT" "STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "using"
				   '["The expansion data bases to use" ""]
				   '["MULT" "SYM"]]
				 '[]
				 "HACK-MULTS">)>
		"rename.expansion.entry"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-XCHANGE
				 '['[]
				   "called"
				   '["Entry which will be renamed." ""]
				   '["STRING" "ATOM"]
				   '[]
				   "to"
				   '["New name of entry." ""]
				   '["STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "in table"
				   '["Expansion table which contains entry." ""]
				   '["SYM"]]
				 '[]>)>
		"add.expansion.entry"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-XADD
				 '['[]
				   "called"
				   '["Addressee which will expand." ""]
				   '["STRING" "ATOM"]
				   []
				   "consisting of"
				   '["Addressees to expand to." ""]
				   '["MULT" "STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "to table"
				   '["Expansion table to add this entry to." ""]
				   '["SYM"]]
				 '[]>)>
		"remove.expansion.entry"
	        '<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-XREMOVE
				 '['[]
				   "called"
				   '["Addressee to remove." ""]
				   '["STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "from table"
				   '["Expansion table to remove this entry from." ""]
				   '["SYM"]]
				 '[]>)>
		"add.more.addressees.to.entry"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-XADD-ADR
				 '['[]
				   "called"
				   '["Addressee which will expand." ""]
				   '["STRING" "ATOM"]
				   '[]
				   "adding addressees"
				   '["List of additional addressees." ""]
				   '["MULT" "STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "in table"
				   '["Expansion table containing entry." ""]
				   '["SYM"]]
				 '[]>)>
		"remove.some.addressees.from.entry"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-XREMOVE-ADR
				 '['[]
				   "called"
				   '["Addressee which will lose entries." ""]
				   '["STRING" "ATOM"]
				   '[]
				   "removing"
				   '["Addressees to remove." ""]
				   '["MULT" "STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "in table"
				   '["Expansion table containing this entry." ""]
				   '["SYM"]]
				 '[]>)>
		"expunge.addressees"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,CAL-XPUNGE
				 '['[]
				   "named"
				   '["Names of addressees to expunge." ""]
				   '["MULT" "STRING" "ATOM"]
				   ,EXPANSION-DATA-TABLE
				   "from table"
				   '["Expansion table to remove addressee from." ""]
				   '["SYM"]]
				 '[]>)>
		"print.expansion.table"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,XPRETTY
				 '[,EXPANSION-DATA-TABLE
				   "named"
				   '["Expansion table to print." ""]
				   '["SYM"]]>)>
		"print.expanded.expansion.table"
		'<COND (<EMPTY? <2 ,EXPANSION-DATA-TABLE>>
			<PRINT "NO TABLES ACTIVE?">)
		       (<CALICO-COMMAND ,XPRETTY-EXPANDED
				 '[,EXPANSION-DATA-TABLE
				   "named"
				   '["Expansion table to expand and print." ""]
				   '["SYM"]
				   ,EXPANSION-DATA-TABLE
				   "using"
				   '["Other tables to use in the expansion." ""]
				   '["MULT" "SYM"]]>)>
]>>>

<KILL-TABLE ,X.COMMANDS>

<ADDTABLE ,X.COMMANDS>

<SETG EXPANSION-DATA-TABLE <MAKEBST "Expansion data bases" []>>

<DEFINE CAL-XCHANGE (OLD NEW XVECTOR)
	<AND <TYPE? .OLD ATOM> <SET OLD <SPNAME .OLD>>>
	<AND <TYPE? .NEW ATOM> <SET NEW <SPNAME .NEW>>>
	<COND (.XVECTOR <SETG LAST-TABLE .XVECTOR>)
	      (ELSE <SET XVECTOR ,LAST-TABLE>)>
	<COND (<XCHANGE .OLD .NEW <2 .XVECTOR>>
	       <PEXPENTRY .NEW <2 .XVECTOR>>)
	      (ELSE <PRINT "CANT-RENAME">)>>

<DEFINE CAL-XPUNGE (ADR XVECTOR "AUX" XV)
	<COND (.XVECTOR <SETG LAST-TABLE .XVECTOR>)
	      (ELSE <SET XVECTOR ,LAST-TABLE>)>
	<COND (<SET XV <XPUNGE .ADR <2 .XVECTOR>>>
	       <PUT .XVECTOR 2 .XV>
	       <PRINT "REMOVED">)
	      (ELSE <PRINT "NOT-REMOVED">)>>

<DEFINE CAL-XADD (X XDATA XVECTOR "AUX" XV) 
	<AND <TYPE? .X ATOM> <SET X <SPNAME .X>>>
	<COND (.XVECTOR <SETG LAST-TABLE .XVECTOR>)
	      (ELSE <SET XVECTOR ,LAST-TABLE>)>
	<COND (<SET XV <XADD .X .XDATA <2 .XVECTOR> T>>
	       <PUT .XVECTOR 2 .XV>
	       <PEXPENTRY .X .XV>)
	      (ELSE <PRINT "NOT-ADDED">)>>

<DEFINE CAL-XREMOVE (X XVECTOR "AUX" XV)
	<AND <TYPE? .X ATOM> <SET X <SPNAME .X>>>
	<COND (.XVECTOR <SETG LAST-TABLE .XVECTOR>)
	      (ELSE <SET XVECTOR ,LAST-TABLE>)>
	<COND (<SET XV <XREMOVE .X <2 .XVECTOR>>>
	       <PUT .XVECTOR 2 .XV>
	       <CRLF> <PRINC .X>)
	      (ELSE <PRINT "NOT-REMOVED">)>>

<DEFINE CAL-XADD-ADR (X XDATA XVECTOR "AUX" XV)
	<AND <TYPE? .X ATOM> <SET X <SPNAME .X>>>
	<COND (.XVECTOR <SETG LAST-TABLE .XVECTOR>)
	      (ELSE <SET XVECTOR ,LAST-TABLE>)>
	<COND (<SET XV <XADD-ADR .X .XDATA <2 .XVECTOR>>>
	       <PEXPENTRY .X .XV>)
	      (ELSE <PRINT "NOT-THERE">)>>

<DEFINE CAL-XREMOVE-ADR (X XDATA XVECTOR "AUX" XV)
	<AND <TYPE? .X ATOM> <SET X <SPNAME .X>>>
	<COND (.XVECTOR <SETG LAST-TABLE .XVECTOR>)
	      (ELSE <SET XVECTOR ,LAST-TABLE>)>
	<COND (<SET XV <XREMOVE-ADR .X .XDATA <2 .XVECTOR>>>
	       <CRLF> <PRINC .X>)
	      (ELSE <PRINT "NOT-REMOVED">)>>

<DEFINE CAL-LA-EXP (AL DL "AUX" X (L ,LAST-TABLE))
	<MAPR <>
	      <FUNCTION (X)
		   <AND <TYPE? <1 .X> ATOM>
			<PUT .X 1 <SPNAME <1 .X>>>>>
	      .AL>
	<GTABLES .DL>
	<COND (<SET X <LA-EXP .AL .DL>>
	       <PADDRESSEES .X>)
	      (<PRINT "CANT EXPAND"> <CRLF>)>>

<DEFINE GTABLES (DL)
	<MAPR <>
	      <FUNCTION (S)
	          <COND (<TYPE? <1 .S> SYMBOL>
			 <PUT .S 1 <2 <1 .S>>>)>
		  <COND (<1 .S>
			 <PUT .S 1 <2 <1 .S>>>
			 <SETG LAST-TABLE <1 .S>>)
			(ELSE <PUT .S 1 .L>)>>
	      .DL>>

<DEFINE PEXPENTRY (X XV "AUX" (IT <MEMBER .X .XV>))
	#DECL ((X) STRING (XV) VECTOR (IT) <OR FALSE VECTOR>)
	<CRLF>
	<PRINC .X>
	<COND (.IT
	       <PRINC " ==> ">
	       <PADDRESSEES <2 .IT> <+ 5 <FLATSIZE .X 100>>>)
	      (ELSE <PRINC ":  entry not found.">)>>

<DEFINE XPRETTY (ARG "AUX" TBL)
	<COND (.ARG <SETG LAST-TABLE .ARG>)
	      (ELSE <SET ARG ,LAST-TABLE>)>
	<SET TBL <2 .ARG>>
	<CRLF>
	<PRINC <1 .ARG>>
	<CRLF>
	<CRLF>
	<PRINC	"---addressee---     ---expands-to---">
	<CRLF>
	<REPEAT ()
		<COND (<EMPTY? .TBL> <RETURN T>)>
		<PRINC <1 .TBL>> <PRINC " ==> ">
		<INDENT-TO 20>
		<PADDRESSEES <2 .TBL> 20>
		<SET TBL <REST .TBL 2>>>>

<DEFINE XPRETTY-EXPANDED (ARG DBS "AUX" TBL)
	<COND (.ARG <SETG LAST-TABLE .ARG>)
	      (ELSE <SET ARG ,LAST-TABLE>)>
	<GTABLES .DBS>
	<SET TBL <2 .ARG>>
	<COND (<NOT <MEMQ .TBL .DBS>> <SET DBS (.TBL !.DBS)>)>
	<CRLF>
	<PRINC <1 .ARG>>
	<CRLF>
	<CRLF>
	<PRINC	"---addressee---     ---full-expansion---">
	<CRLF>
	<REPEAT ()
		<COND (<EMPTY? .TBL> <RETURN T>)>
		<PRINC <1 .TBL>> <PRINC " ==> ">
		<INDENT-TO 20>
		<PADDRESSEES <LA-EXP (<1 .TBL>) .DBS> 20>
		<SET TBL <REST .TBL 2>>>>

<DEFINE PADDRESSEES (L "OPTIONAL" (IND 0))
	#DECL ((L) <LIST [REST <OR STRING ATOM>]> (IND) FIX)
	<MAPR <>
	      <FUNCTION (A)
		   #DECL ((A) <OR ATOM STRING>)
		   <COND (<FLATSIZE <1 .A>
				    <- <LINE-LENGTH .OUTCHAN>
				       <LINE-POS .OUTCHAN> 2>>)
			 (ELSE <CRLF> <INDENT-TO .IND>)>
		   <PRINC <1 .A>>
		   <COND (<NOT <LENGTH? .A 1>> <PRINC ", ">)>>
	      .L>
	<CRLF>>

<DEFINE XMAKER (ST "OPTIONAL" D)
	#DECL ((ST) <OR STRING ATOM> (D) <OR FALSE VECTOR>)
	<AND <TYPE? .ST ATOM> <SET ST <SPNAME .ST>>>
	<AND <NOT <ASSIGNED? D>> <SET D <1 <GETDB (.ST)>>>>
	<COND (.D
	       <PUT ,EXPANSION-DATA-TABLE 2
		    <BSTSORT <VECTOR .ST
				     <SETG LAST-TABLE [.ST .D]>
				     !<2 ,EXPANSION-DATA-TABLE>>>>
	       <ADDTABLE ,EXPANSION-DATA-TABLE>
	       <CRLF> <PRINC .ST> <PRINC ":  table added.">)
	      (ELSE <CRLF> <PRINC .ST> <PRINC ":  "> <PRIN1 .D>)>>

<DEFINE FMAKER (FILE ST "AUX" (D <XREAD .FILE>))
	<AND <TYPE? .ST ATOM> <SET ST <SPNAME .ST>>>
	<XMAKER .ST .D>>

<DEFINE XDUMPER (D FILE)
	<PRINT <XPRINT <2 .D> <1 .D> .FILE>>>

<DEFINE XSTARTER (ST)
	<AND <TYPE? .ST ATOM> <SET ST <SPNAME .ST>>>
	<XMAKER .ST <XADD-BUNCH '[]>>>

<DEFINE XADD-BUNCH (OLD "AUX" (XL (T)) (L .XL))
	#DECL ((VALUE OLD) VECTOR (XL L) LIST)
	<REPEAT ()
		<COND (<AND <SET R <READARGS '[]
					     "îaddressee"
					     '["Addressee to expand." ""]
					     '["ATOM" "STRING"]>>
			    <SET R <1 .R>>
			    <SET S <READARGS '[]
					     "expands to"
					     '["Expansions of addressee." ""]
					     '["MULT" "ATOM" "STRING"]>>
			    <SET S <1 .S>>>
		       <AND <TYPE? .R ATOM> <SET R <SPNAME .R>>>
		       <PUTREST .L <SET L <LIST .R>>>
		       <PUTREST .L <SET L <LIST .S>>>)
		      (ELSE <RETURN <SORT <>
					  <VECTOR !<REST .XL>>
					  2>>)>>>

<ENDPACKAGE>
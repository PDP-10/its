
<PACKAGE "SYMBOLS">

<ENTRY SYMBOL SYMBOL-CHRTABLE SYMBOL-CHRS FAIL-HOOK>

<ENTRY REENTER-COMMAND-LOOP COMMAND-LOOP-ACTIVATION ABORTED EMPTY-LINE>

<ENTRY SVALUE>

<USE "BUF">

<SETG SYMBUF <BUFMAKE 50>>

<SETG BUF-ECHO-FLAG <>>

"SYMBOL -- lookup a symbol in a symbol table.  Takes

	table:vector	symbols
	default:fix	offset of default in table
	prompt1:string	semantic prompt
	prompt2:string	syntactic prompt
	expl:string	detailed help
	buf:buffer	buffer to use

returns the offset of the symbol or a false"

<DEFINE SYMBOL (DEFAULT-SYMBOL PRMPT1 PRMPT2 EXPLANATION
		"TUPLE" TABLES
		"AUX" (BUF ,SYMBUF) R)
	#DECL ((TABLES) <SPECIAL <TUPLE [REST VECTOR]>> (BUF) BUFFER
	       (PRMPT1 PRMPT2) STRING
	       (DEFAULT-SYMBOL) <SPECIAL <OR FIX FALSE>>
	       (EXPLANATION) <SPECIAL <OR STRING FALSE>>
	       (R) <OR FALSE ATOM FIX BUFFER>)
	<COND (<OR <NOT <ASSIGNED? PRMPT1>> <NOT .PRMPT1>>
	       <SET PRMPT1 "Input symbol ">)>
	<COND (<OR <NOT <ASSIGNED? PRMPT2>> <NOT .PRMPT2>>
	       <SET PRMPT2 "(SYM) ">)>
	<COND (<OR <NOT <ASSIGNED? EXPLANATION>> <NOT .EXPLANATION>>
	       <SET EXPLANATION "[No information available]">)>
	<AND .PRMPT1 <PUT .BUF ,BPRMPT1 .PRMPT1>>
	<AND .PRMPT2 <PUT .BUF ,BPRMPT2 .PRMPT2>>
	<BUFCLEAR .BUF>
	<SET R <PROG SYMACT (LERR\ !-INTERRUPTS)
		     #DECL ((SYMACT LERR\ !-INTERRUPTS) <SPECIAL ACTIVATION>)
		     <SET LERR\ !-INTERRUPTS .SYMACT>
		     <GETSTR .BUF ,SYMBOL-CHRTABLE>
		     <>>>
	<COND (<==? .R T> ,ABORTED) (ELSE .R)>>

<SETG BEST-VAL <VECTOR 0 "" 0 0 0>>
<PUT SVALUE DECL '<VECTOR FIX <OR STRING ATOM> FIX FIX FIX>>
<GDECL (BEST-VAL) SVALUE>

<SETG ABORTED #FALSE ("ABORTED")>
<SETG EMPTY-LINE #FALSE ("EMPTY-LINE")>
<GDECL (ABORTED EMPTY-LINE) <FALSE STRING>>

<DEFINE LOOKUPSYM (BUF TABLES "OPTIONAL" (MINMAX <>)
		   "AUX" TABLE (BV ,BEST-VAL) (L <BUFLENGTH .BUF>) (BEST <>)
		         BESTT (TCNT 0) BESTL (BCNT 0) (STR <1 .BUF>) N)
	#DECL ((BUF) BUFFER (TABLE) <VECTOR [REST <OR ATOM STRING>]>
	       (MINMAX) <OR ATOM FALSE> (BV) VECTOR (L) FIX (STR) STRING
	       (BEST) <OR FALSE VECTOR> (BESTL BCNT BESTT TCNT) FIX
	       (TABLES) <TUPLE [REST VECTOR]> (N) <OR FIX FALSE>)
	<SET BESTL <COND (.MINMAX 0) (ELSE 1000)>>
	<REPEAT ()
		<COND (<EMPTY? .TABLES>
		       <COND (.BEST
			      <PUT .BV 1 .BESTL>
			      <PUT .BV 2 <1 .BEST>>
			      <PUT .BV
				   3
				   <- <LENGTH <TOP .BEST>> <LENGTH .BEST> -1>>
			      <PUT .BV 4 .BCNT>
			      <PUT .BV 5 .BESTT>
			      <RETURN .BV>)
			     (ELSE <RETURN <>>)>)>
		<SET TABLE <1 .TABLES>>
		<SET TCNT <+ .TCNT 1>>
		<REPEAT ()
			<COND (<EMPTY? .TABLE> <RETURN>) 
			      (<SET N <UNMATCH .STR <1 .TABLE> .L>>
			       <COND (.MINMAX
				      <SET BESTL <MAX .BESTL .N>>
				      <SET BESTT .TCNT>
				      <SET BEST .TABLE>)>)
			      (.BEST
			       <SET BESTL
				    <MIN .BESTL
					 <UNMATCH <1 .TABLE> <1 .BEST> 1000>>>
			       <SET BCNT <+ .BCNT 1>>
			       <COND (<L? <ELENGTH <1 .TABLE>>
					  <ELENGTH <1 .BEST>>>
				      <SET BESTT .TCNT>
				      <SET BEST .TABLE>)>)
			      (ELSE
			       <SET BESTL <ELENGTH <1 .TABLE>>>
			       <SET BCNT <+ .BCNT 1>>
			       <SET BEST .TABLE>
			       <SET BESTT .TCNT>)>
			<SET TABLE <REST .TABLE>>>
		<SET TABLES <REST .TABLES>>>>

<DEFINE UNMATCH (AS1 AS2 N "AUX" STR1 STR2 (CNT 0) C1 C2) 
	#DECL ((STR1 STR2) STRING (AS1 AS2) <OR STRING ATOM> (N CNT) FIX
	       (C1 C2) CHARACTER)
	<COND (<0? .N> <>)
	      (ELSE
	       <SET STR1 <COND (<TYPE? .AS1 ATOM> <SPNAME .AS1>) (ELSE .AS1)>>
	       <SET STR2 <COND (<TYPE? .AS2 ATOM> <SPNAME .AS2>) (ELSE .AS2)>>
	       <REPEAT ()
		       <COND (<EMPTY? .STR1>
			      <COND (<EMPTY? .STR2> <RETURN <>>)
				    (ELSE <RETURN .CNT>)>)>
		       <SET C1 <1 .STR1>>
		       <COND (<EMPTY? .STR2> <RETURN .CNT>)>
		       <SET C2 <1 .STR2>> 
		       <COND (<==? <UPPERCHR .C1> <UPPERCHR .C2>>
			      <SET CNT <+ .CNT 1>>
			      <AND <0? <SET N <- .N 1>>> <RETURN <>>>)
			     (ELSE <RETURN .CNT>)>
		       <SET STR1 <REST .STR1>>
		       <SET STR2 <REST .STR2>>>)>>

<DEFINE UPPERCHR (C)
	#DECL ((C VALUE) CHARACTER)
	<COND (<AND <G=? <ASCII .C> <ASCII !\a>>
		    <L=? <ASCII .C> <ASCII !\z>>>
	       <ASCII <- <ASCII .C> 32>>)
	      (ELSE .C)>>

<DEFINE SELT (TABLES DEF
	      "AUX" (TBL <CHTYPE <GETBITS .DEF <BITS 18 18>> FIX>)
	      (OFS <CHTYPE <ANDB .DEF *777777*> FIX>))
	#DECL ((TABLES) <TUPLE [REST VECTOR]> (DEF TBL OFS) FIX)
	<NTH <NTH .TABLES .TBL> .OFS>>

<DEFINE COMPLETE (BUF C "OPTIONAL" (TERMINATE? <>)
		  "AUX" (TABLES .TABLES) (BV <LOOKUPSYM .BUF .TABLES>)
		  (OUTCHAN .OUTCHAN) BL (L <BUFLENGTH .BUF>) NSTR (SYM <>) DEF)
	#DECL ((BUF) BUFFER (C) CHARACTER (OUTCHAN) CHANNEL
	       (TERMINATE?) <OR ATOM FALSE> (BV VALUE) <OR FALSE SVALUE>
	       (TABLES) TUPLE (BL L) FIX (NSTR) STRING
	       (SYM) <OR FALSE ATOM STRING>
	       (DEF DEFAULT-SYMBOL) <OR FIX FALSE>)
	<COND (<AND .TERMINATE? <0? .L> <SET DEF .DEFAULT-SYMBOL>>
	       <SET BV ,BEST-VAL>
	       <PUT .BV 1 <ELENGTH <SET SYM <SELT .TABLES .DEF>>>>
	       <PUT .BV 2 .SYM>
	       <PUT .BV 3 <CHTYPE <ANDB .DEF *777777*> FIX>>
	       <PUT .BV 4 1>
	       <PUT .BV 5 <CHTYPE <GETBITS .DEF <BITS 18 18>> FIX>>)>
	<COND (.BV
	       <SET SYM <2 .BV>>
	       <COND (<G? <SET BL <1 .BV>> .L>
		      <SET NSTR
			   <REST <COND (<TYPE? .SYM ATOM>
					<SPNAME .SYM>)
				       (ELSE .SYM)>
				 .L>>
		      <ADDSTRING .BUF .NSTR <SET L <- .BL .L>>>
		      <PRINTSTRING .NSTR .OUTCHAN .L>)>
	       <COND (<G? <4 .BV> 1>
		      <COND (<OR <NOT .TERMINATE?>
				 <ASSIGNED? NSTR>
				 <L? .BL <ELENGTH <2 .BV>>>>
			     <PRINC !\&>
			     <SETG BUF-ECHO-FLAG 1>
			     <>)
			    (ELSE .BV)>)
		     (<AND <NOT .TERMINATE?> <==? .BL .L>>
		      <PRINC !\!>
		      <SETG BUF-ECHO-FLAG 1>
		      .BV)
		     (ELSE .BV)>)
	      (<AND <GASSIGNED? FAIL-HOOK>
		    ,FAIL-HOOK
		    <APPLY ,FAIL-HOOK .BUF <>>>
	       <AND <NOT .TERMINATE?>
		    <ADDCHR .BUF .C>
		    <PRINC .C>>
	       ,BEST-VALUE)
	      (ELSE
	       <PRINC " (No symbol matches input)">
	       <CRLF>
	       <PROG ((SYM <LOOKUPSYM .BUF .TABLES T>))
		     #DECL ((SYM) <OR FALSE VECTOR>)
		     <AND .SYM <PUT .BUF 2 <REST <1 .BUF> <1 .SYM>>>>>
	       <BUFPRINT .BUF>
	       <>)>>

<DEFINE TERMINATE (BUF C "AUX" (BV <LOOKUPSYM .BUF .TABLES>) (SA .SYMACT)
		   (OUTCHAN .OUTCHAN) F) 
	#DECL ((BUF) BUFFER (C) CHARACTER (BV) <OR FALSE VECTOR>
	       (F) ANY (OUTCHAN) CHANNEL (SA) ACTIVATION)
	<COND (<AND <==? .C <ASCII 13>> <0? <BUFLENGTH .BUF>>>
	       <PRINC .C>
	       <RETURN ,EMPTY-LINE .SA>)
	      (<AND .BV <==? <1 .BV> <ELENGTH <2 .BV>>>>
	       <PRINC .C>
	       <OR <==? .C <ASCII 13>>
		   <==? .C !\ >
		   <==? .C !\	>
		   <PRINC !\ >>
	       <RETURN <CHTYPE <PUTBITS <3 .BV>
					<BITS 18 18>
					<5 .BV>>
			       FIX>
		       .SA>)
	      (<AND <NOT .BV>
		    <GASSIGNED? FAIL-HOOK>
		    <SET F ,FAIL-HOOK>
		    <SET F <APPLY .F .BUF .C>>>
	       <PRINC .C>
	       <OR <==? .C <ASCII 13>>
		   <==? .C !\ >
		   <==? .C !\	>
		   <PRINC !\ >>
	       <RETURN .F .SA>)>>

<DEFINE ELENGTH (AS)
	#DECL ((AS) <OR STRING ATOM> (VALUE) FIX)
	<COND (<TYPE? .AS ATOM> <LENGTH <SPNAME .AS>>)
	      (ELSE <LENGTH .AS>)>>

<DEFINE COMTERM (BUF C)
	#DECL ((BUF) BUFFER (C) CHARACTER)
	<AND <COMPLETE .BUF .C T> <TERMINATE .BUF .C>>>

<DEFINE COM-OR-TERM (BUF C "AUX" BV (BL <BUFLENGTH .BUF>))
	#DECL ((BUF) BUFFER (C) CHARACTER (BV) <OR FALSE SVALUE> (BL) FIX)
	<COND (<AND <SET BV <COMPLETE .BUF .C T>>
		    <==? <1 .BV> .BL>>
	       <TERMINATE .BUF .C>)>>

<DEFINE ABORT (BUF C "AUX" (OUTCHAN .OUTCHAN))
	#DECL ((BUF) BUFFER (C) CHARACTER (OUTCHAN) CHANNEL)
	<PRINC " [Abort]">
	<CRLF>
	<COND (<REENTER-COMMAND-LOOP>)
	      (ELSE <RETURN ,ABORTED .SYMACT>)>>

<DEFINE COMEXPL (BUF C "AUX" (OUTCHAN .OUTCHAN) (EXP .EXPLANATION))
	#DECL ((BUF) BUFFER (C) CHARACTER (OUTCHAN) CHANNEL
	       (EXP) STRING)
	<COND (<0? <BUFLENGTH .BUF>>
	       <CRLF>
	       <PRINC .EXP>
	       <CRLF>
	       <BUFPRINT .BUF>)
	      (ELSE <PRINC .C> <ADDCHR .BUF .C>)>>

<DEFINE LISTSYMS (BUF C "AUX" (TABLES .TABLES) (L <BUFLENGTH .BUF>)
		  TABLE (STR <1 .BUF>) (OUTCHAN .OUTCHAN) (ONE? <>)
		  (DEF .DEFAULT-SYMBOL) (MATLEN 0) (MATCHES 0) I PERLIN
		  (DEFTAB
		   <AND .DEF
			<REST <NTH .TABLES
				   <CHTYPE <GETBITS .DEF <BITS 18 18>> FIX>>
			      <- <CHTYPE <ANDB .DEF *777777*> FIX> 1>>>))
	#DECL ((BUF) BUFFER (C) CHARACTER (TABLES) <TUPLE [REST VECTOR]>
	       (TABLE) <VECTOR [REST <OR STRING ATOM>]>
	       (PERLIN I L MATLEN MATCHES) FIX
	       (STR) STRING (DEF) <OR FIX FALSE> (DEFTAB) <OR VECTOR FALSE>
	       (ONE?) <OR ATOM FALSE> (OUTCHAN) CHANNEL)
	<REPEAT ((TABLES .TABLES))
		#DECL ((TABLES) <TUPLE [REST VECTOR]>)
		<COND (<EMPTY? .TABLES> <RETURN>)>
		<SET TABLE <1 .TABLES>>
		<REPEAT ()
			<COND (<EMPTY? .TABLE> <RETURN>)
			      (<NOT <UNMATCH .STR <1 .TABLE> .L>>
			       <SET MATCHES <+ .MATCHES 1>>
			       <SET MATLEN
				    <MAX .MATLEN <ELENGTH <1 .TABLE>>>>)>
			<SET TABLE <REST .TABLE>>>
		<SET TABLES <REST .TABLES>>>
	<COND (<NOT <0? .MATCHES>>
	       <SET MATLEN <+ .MATLEN 2>> 
	       <SET ONE?
		    <L=? .MATCHES
			 <SET PERLIN </ <+ <13 .OUTCHAN> 1> .MATLEN>>>>
	       <CRLF>
	       <REPEAT ((TABLES .TABLES) (CNT 0))
		       #DECL ((TABLES) <TUPLE [REST VECTOR]>)
		       <COND (<EMPTY? .TABLES> <RETURN>)>
		       <SET TABLE <1 .TABLES>>
		       <REPEAT ()
			       <COND (<EMPTY? .TABLE> <RETURN>)
				     (<NOT <UNMATCH .STR <1 .TABLE> .L>>
				      <COND (.ONE?)
					    (<0? <14 .OUTCHAN>>)
					    (ELSE
					     <SET I <+ <14 .OUTCHAN> .MATLEN>>
					     <COLUMN <* </ .I .MATLEN>
							.MATLEN>>)>
				      <PRINC <COND (<AND <0? .L>
							 <==? .TABLE .DEFTAB>>
						    !\*)
						   (ELSE !\ )>>
				      <PRINC <1 .TABLE>>
				      <COND (.ONE? <PRINC !\ >)
					    (<==? <SET CNT <+ .CNT 1>>
						  .PERLIN>
					     <CRLF>
					     <SET CNT 0>)>)>
			       <SET TABLE <REST .TABLE>>>
		       <SET TABLES <REST .TABLES>>>)
	      (ELSE
	       <AND <0? .MATCHES> <PRINC "(No matches)">>)>
	<CRLF>
	<BUFPRINT .BUF>>

<DEFINE REENTER-COMMAND-LOOP ("AUX" A) 
	#DECL ((A) ACTIVATION)
	<COND (<AND <ASSIGNED? COMMAND-LOOP-ACTIVATION>
		    <LEGAL? <SET A .COMMAND-LOOP-ACTIVATION>>>
	       <RETURN <> .A>)>>


<SETG TABS
      <PROG ((I -1))
	    <IVECTOR 15 '<ISTRING <SET I <+ .I 1>> !\	>>>>

<SETG SPACES
      <PROG ((I -1))
	    <IVECTOR 8 '<ISTRING <SET I <+ .I 1>> !\ >>>>

<GDECL (TABS SPACES) <VECTOR [REST STRING]>>

<DEFINE COLUMN (N "OPTIONAL" (OUTC .OUTCHAN) "AUX" (NOW <LINPOS .OUTC>))
	#DECL ((N NOW) FIX (OUTC) <CHANNEL [12 ANY] [4 FIX]>)
	<COND (<G? .N .NOW>
	       <PRINC <NTH ,TABS <MIN 15 <- </ .N 8> </ .NOW 8> -1>>>
		      .OUTC>
	       <COND (<G? .N <SET NOW <LINPOS .OUTC>>>
		      <PRINC <NTH ,SPACES <- .N .NOW -1>> .OUTC>)>)>>

\ 

<SETG SYMBOL-CHRS
      [!\ 	,IBUFCLEAR			     ;"CLEAR THE BUFFER"
       !\	,IBUFPRINT			       ;"REPRINT BUFFER"
       !\	,LISTSYMS			   ;"LIST POSSIBILITIES"
       <ASCII 12> ,IBUFPRINT			       ;"REPRINT BUFFER"
       <ASCII 13> ,TERMINATE			      ;"CARRIAGE RETURN"
       !\	,QUOTECHR			 ;"QUOTE NEXT CHARACTER"
       !\	,ABORT					  ;"ABORT INPUT"
       !\	,DLINE					;"DELETE A LINE"
       !\	,DWORD				        ;"DELETE A WORD"
       !\	,DLINE				        ;"DELETE A LINE"
       !\	,COMTERM				    ;"TERMINATE"
       !\ 	,COM-OR-TERM
       !\?	,COMEXPL
       <ASCII 127> ,IDELCHR				     ;"RUBOUT"]>

<SETG SYMBOL-CHRTABLE ,SYMBOL-CHRS>

<GDECL (SYMBOL-CHRS) <VECTOR [REST CHARACTER ANY]>
       (SYMBOL-CHRTABLE) <OR VECTOR LIST>>

<ENDPACKAGE>

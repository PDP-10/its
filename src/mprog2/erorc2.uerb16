<PACKAGE "CORRECT-ERROR">
<ENTRY CORRECT-ERROR DDIV DMOD>

<TITLE CORRECT-ERROR>
 <DECLARE ("VALUE" <UVECTOR [REST UVECTOR]>
		   <UVECTOR [REST FIX]>		;"THE HAVERFORM"
		   <UVECTOR [REST UVECTOR]>	;"THE DATA UVECTOR"
		   <UVECTOR [REST UVECTOR]>	;"PUTS ANS IN THIS UV"
		   <UVECTOR [REST FIX]>		;AND-THIS
		   <UVECTOR [REST FIX]>)>	;AND-THIS
	<DPUSH TP* <ARG 1>>
	<DPUSH TP* <ARG 2>>
	<DPUSH TP* <ARG 3>>
	<DPUSH TP* <ARG 4>>
	<DPUSH TP* <ARG 5>>
	<PUSHJ P* EC0>
	<JRST FINIS>

   <INTERNAL-ENTRY EC0 5>
	<SUBM M* (P)>
	<PUSH TP* <TYPE-WORD FIX>>	;"Space for backup cnt"
	<PUSH TP* [0]>
	<PUSH TP* <TYPE-WORD FIX>>
	<PUSH TP* 0>			;"Space for mark count"

	<HLRE A* (TP) -8>	;"Rest answer UVs all the way"
	<MOVMS A* A>
	<HRLI A* (A)>
	<ADDB A* (TP) -8>
	<HLRZ B* (A) 1>
	<SUBI B* 2>
	<MOVEM B* (TP) -2>
	<HLRE A* (TP) -6>
	<MOVMS A* A>
	<HRLI A* (A)>
	<ADDM A* (TP) -6>
	<HLRE A* (TP) -4>
	<MOVMS A* A>
	<HRLI A* (A)>
	<ADDM A* (TP) -4>

	<MOVE A* (TP) -12>	;"Count marks in haverform"
	<MOVEI E* 71>
	<SKIPE B* (A)>
	<JRST EM1>
	<MOVE B* (A) 1>
	<MOVEI E* 35>
	<JUMPE B* EM3>
EM1	<JUMPL B* EM2>
	<LSH B* 1>
	<SOJA E* EM1>
EM2	<MOVNI E* (E) 2>	;"2 due to ADD's carry"
	<MOVSM E* (TP)>

EM3	<MOVE E* (TP)>		;"Giant loop"
ECLUP	<ADD E* [<1 (1)>]>
	<JUMPGE E* ECDON>	;"replace with AOBJP and loses on TOPS-20"
	<MOVEM E* (TP)>
	<MOVNI D* (E)>		;"Right shift amount"
	<SETZ C*>
	<MOVEI O* 8>
	<CAML E* [*777777000000*]>
	<MOVEI O* 12>		;"If at first mark, do special hacking"

ECLU2	<SOJL O* ECLUP>		;"Lesser loop"
	<MOVE A* (TP) -12>	;"Get haverform into A and B"
	<MOVE B* (A) 1>
	<MOVE A* (A)>

	<CAML D* [-36]>
	<JRST ENRM>
	<MOVE C* B>	;"Special shift for > 36"
	<MOVEI B* (A)>
	<LSH B* (D) 36>
	<JRST ECTP>

ENRM	<LSHC B* (D)>	;"Normal shift sequence"
	<LSH B*  (E)>
	<LSHC A* (D)>

	;"CODES:
		0	add .
		1	add -
		2	- -> ..
		3	delete mark
		4	.. -> -
		5	complement mark
		6	.. -> nil
		7	add ..
		8	no change
		9	add initial .
		10	add initial -
		11	add initial .."

ECTP	<CAIGE O* 4>	;"Binary test to find proper modification"
	<JRST E0123>
	<CAIGE O* 8>
	<JRST E4567>
	<ADD B* O>	;"Hack for codes 8 9 10 11"
	<ADD B* O>	;"Code 8 for no change"
	<SUBI B* 16>	;"Code 9 for add initial ."
	<JRST ECD1>	;"Code 10 for add initial -"
			;"Code 11 for initial .."
E4567	<CAIGE O* 6>
	<JRST E45>
	<CAIE O* 6>
	<JRST E7>
	<TRNE B* 3>	;"Code 6 for .. to nil"
	<JRST ECLU2>	;"Inapplicable"
	<LSHC A* -2>
	<JRST ECD1>
E7	<LSHC A* 2>	;"Code 7 for to add .."
	<JRST ECD1>
E45	<CAIE O* 4>
	<JRST E5>
	<TRNE B* 3>	;"Code 4 for .. to -"
	<JRST ECLU2>	;"Inapplicable"
	<LSHC A* -1>
	<AOJA B* ECD1>
E5	<XORI B* 1>	;"Code 5 to complement mark"
	<JRST ECD1>
E0123	<CAIG O* 1>
	<JRST E01>
	<CAIE O* 3>
	<JRST E2>
	<LSHC A* -1>	;"Code 3 for delete mark"
	<JRST ECD1>
E2	<TRNN B* 1>
	<JRST ECLU2>	;"Inapplicable"
	<SUBI B* 1>
	<LSHC A* 1>	;"Code 2 for - to .."
	<JRST ECD1>
E01	<LSHC A* 1>	;"Codes 0 and 1 for add mark"
	<ADD B* O>

ECD1	<CAML D* [-36]>	;"Shift > 36"
	<JRST ESH36>
	<MOVE A* (TP) -12>
	<MOVE A* (A)>
	<ROT A* (D) 36>
	<ROTC A* (E)>
	<MOVE B* C>
	<JRST ESHD>


ESH36	<LSHC A* (E)>	;"Shift back into place"
	<LSH B*  (D)>
	<LSHC B* (E)>

ESHD	<MOVE E* B>
	<SKIPL D* A>	;"Lookup answer"
	<CAIL D* 509>
	<JRST NFND>
	<DIVI D* 509>
	<ADD E* (TP) -10>
	<MOVE E* (E)>	;"Gets uvector for MEMQ"
EC12	<CAMN D* (E)>	;"This is a MEMQ"
	<JRST EC13>
	<AOBJN E* EC12>
	;"Put morphology stuff here"
NFND	<MOVE E* (TP)>	;"Restore D, E"
	<MOVNI D* (E)>
	<JRST ECLU2>	;"Iterate"

EC13	<SOSL 0 (TP) -2>
	<JRST EC14>
	<DPUSH TP* <PQUOTE Overbacked-UV!-ERRORS>>
	<JRST CALER1>
EC14	<HRLOI D* *777776*>	;"Backup ans UVs"
	<ADDB D* (TP) -8>
	<MOVE D* (D)>		;"Get empty haverform to put ans in"
	<MOVEM A* (D)>
	<MOVEM B* (D) 1>
	<HRLOI D* *777776*>
	<ADDB D* (TP) -6>
	<MOVEM O* (D)>		;"Put error type"
	<CAIG O* 8>		;"Convert codes 9 10 11 to 0 1 7"
	<JRST EC15>
	<SUBI O* 9>
	<CAIN O* 2>
	<MOVEI O* 7>
	<EXCH O* (D)>
EC15	<HRLOI D* *777776*>
	<ADDB D* (TP) -4>
	<HLRE E* (TP)>		;"Put error loc"
	<MOVNM E* (D)>
	<CAILE O* 8>
	<SETZM (D)>
	<JRST NFND>

ECDON	<MOVE A* (TP) -7>
	<MOVE B* (TP) -8>
	<SUB TP* [<(14) 14>]>
	<JRST MPOPJ>


<TITLE DMOD>	;"72 BIT MODULO"
	<DECLARE ("VALUE" FIX FIX FIX FIX)>
	<DPUSH TP* <ARG 1>>
	<DPUSH TP* <ARG 2>>
	<DPUSH TP* <ARG 3>>
	<PUSHJ P* DMOD0>
	<JRST FINIS>
	<INTERNAL-ENTRY DMOD0 3>
	<MOVE B* (TP) -2>
	<MOVE A* (TP) -4>
	<CAML A* (TP)>
	<SETZB A* B>
	<DIV A* (TP)>
DMOD1	<MOVSI A* TFIX>
	<SUB TP* [<(6) 6>]>
	<POPJ P*>

<SUB-ENTRY DDIV ("VALUE" FIX FIX FIX FIX)>	;"72 BIT DIVISION"
	<DPUSH TP* <ARG 1>>
	<DPUSH TP* <ARG 2>>
	<DPUSH TP* <ARG 3>>
	<PUSHJ P* DIV0>
	<JRST FINIS>
	<INTERNAL-ENTRY DIV0 3>
	<MOVE A* (TP) -4>
	<MOVE B* (TP) -2>
	<CAML A* (TP)>
	<SETZB A* B>
	<DIV A* (TP)>
	<MOVE B* A>
	<JRST DMOD1>

	<END>

<ENDPACKAGE>

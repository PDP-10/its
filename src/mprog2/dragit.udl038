
<PACKAGE "DRAGIT">

<ENTRY DRAGON SUMMARY DATA SDATA>

<USE "LINES" "NSTR" "ITIME" "FORMAT">

<DEFINE DRAGON ("OPTIONAL" (FILE "DRAGON HOARD") "AUX" C L START TOTALS DATA
		GRPS MACHINE TT (TUSE 0))
	#DECL ((FILE) STRING (C) <OR FALSE CHANNEL> (L) <OR FALSE STRING>
	       (MACHINE START) STRING (TOTALS) STRING (DATA GRPS TT) VECTOR
	       (TUSE) FIX)
	<COND (<SET C <DEFOPEN "READ" .FILE "REPORT" "DRAGON">>
	       <SET MACHINE <STRING <COMMENT-LINE .C>>>
	       <SET GRPS <READ-GROUPS .C>>
	       <COND (<NOT <SET L <FIND-LINE .C "TOTALS">>>
		      #FALSE ("CANT FIND TOTALS LINE"))
		     (ELSE
		      <SET TOTALS <STRING .L>>
		      <SET START <STRING <FIND-LINE .C "This file">>>
		      <READ-LINE .C>
		      <READ-LINE .C>
		      <READ-LINE .C>
		      <SETG SDATA
			    [.MACHINE
			     .TOTALS
			     .GRPS
			     <SET DATA <VECTOR .START !<BUILD-LINES .C>>>]>
		      <SETG DATA [.MACHINE
				  <PUT <SET TT <TOTALS-PARSE .TOTALS>>
				       1
				       "Totals">
				  <MAPF ,VECTOR
					<FUNCTION (V "AUX" VV N)
					     #DECL ((V VV) VECTOR (N) FIX)
					     <SET VV <TOTALS-PARSE <2 .V>>>
					     <PUT .VV 1 <1 .V>>
					     <PUT .VV 6 <SET N <3 .V>>>
					     <SET TUSE <+ .TUSE .N>>
					     .VV>
					.GRPS>
				  <MAPF ,VECTOR
					,PRSLIN
					.DATA>]>
		      <PUT .TT 6 .TUSE>
		      T)>)>>

<SETG GSTR "MIT-DM accounts for ">

<GDECL (GSTR) STRING>

<DEFINE READ-GROUPS (C "AUX" GRP L R (GSTR ,GSTR) LL N)
	#DECL ((C) CHANNEL (GSTR GRP R) STRING (L LL) <OR FALSE STRING>
	       (N) <OR FIX FALSE>)
	<MAPF ,VECTOR
	      <FUNCTION ()
		   <SET L <COMMENT-LINE .C "- TOTALS -" "- RANDOMS -">>
		   <COND (<NOT .L> <MAPRET>)>
		   <COND (<OR <==? <1 .L> !\ >
			      <==? <1 .L> !\	>
			      <MEMBER "- RANDOMS -" .L>>
			  <COND (<SET LL <MEMBER .GSTR .L>>
				 <SET L <REST .LL <LENGTH .GSTR>>>)
				(ELSE
				 <MAPR <>
				       <FUNCTION (S)
					    #DECL ((S) STRING)
					    <COND (<G? <ASCII <1 .S>>
						       <ASCII !\@>>
						   <SET L .S>
						   <MAPLEAVE>)>>
				       .L>)>
			  <SET R <OR <MEMBER " --" .L> "">>
			  <SET GRP <SUBSTRUC .L 0 <- <LENGTH .L> <LENGTH .R>>>>
			  <COND (<AND <SET N <COUNT-LINES .C "SUBTOTALS">>
				      <SET L <FIND-LINE .C "TOTALS">>
				      <BEGINS? "TOTALS" .L>>
				 <MAPRET <VECTOR .GRP <STRING .L> .N>>)
				(ELSE <MAPRET>)>)
			 (ELSE <MAPSTOP>)>>>>

<DEFINE COUNT-LINES (CHAN "TUPLE" LINES "AUX" L (N 0))
	#DECL ((LINES) <TUPLE [REST STRING]> (CHAN) CHANNEL
	       (N) FIX (L) <OR STRING FALSE>)
	<REPEAT ()
		<COND (<SET L <READ-LINE .CHAN>>
		       <COND (<MAPF <>
				    <FUNCTION (LINE)
					 #DECL ((LINE) STRING)
					 <AND <MEMBER .LINE .L> <MAPLEAVE T>>>
				    .LINES>
			      <RETURN .N>)>
		       <COND (<OR <EMPTY? .L>
				  <==? <1 .L> !\ >
				  <==? <1 .L> !\	>
				  <==? <1 .L> !\->>)
			     (ELSE <SET N <+ .N 1>>)>)
		      (ELSE <RETURN <>>)>>>

<DEFINE COMMENT-LINE (CHAN "TUPLE" LINES "AUX" L)
	#DECL ((LINES) <TUPLE [REST STRING]> (CHAN) CHANNEL
	       (L) <OR STRING FALSE>)
	<REPEAT ()
		<COND (<SET L <READ-LINE .CHAN>>
		       <COND (<EMPTY? .L>)
			     (<OR <==? <1 .L> !\ >
				  <==? <1 .L> !\	>>
			      <RETURN .L>)
			     (<MAPF <>
				    <FUNCTION (LINE)
					 #DECL ((LINE) STRING)
					 <AND <MEMBER .LINE .L> <MAPLEAVE T>>>
				    .LINES>
			      <RETURN .L>)>)
		      (ELSE <RETURN <>>)>>>

<DEFINE DEFOPEN (MOD FILE NM2 SNM)
	#DECL ((MOD FILE) STRING (NM2 SNM) <SPECIAL STRING>)
	<OPEN .MOD .FILE>>

<SETG STSTR " This file is for period beginning ">

<SETG UPSTR "UP   ">

<SETG DNSTR "DOWN ">

<SETG OKSTR "OK   ">

<GDECL (STSTR UPSTR DNSTR OKSTR) STRING>

<DEFINE BEGINS? (S1 S2)
	#DECL ((S1 S2) STRING)
	<AND <SUBSTR .S1 .S2 <LENGTH .S1>>
	     <REST .S2 <LENGTH .S1>>>>

<PUTPROP TIMELIST DECL '<LIST [2 <LIST [3 FIX]>] STRING>>

<PUTPROP HMS DECL '<LIST [3 FIX]>>

<DEFINE PRSLIN (L "AUX" LR (DT ((0 0 0)(0 0 0) "EST")) (DUR (0 0 0)) TAG)
	#DECL ((L TAG) STRING (LR) <OR FALSE STRING> (DT) TIMELIST (DUR) HMS)
	<COND (<OR <AND <SET LR <MEMBER ,STSTR .L>>
			<SET LR <REST .LR <LENGTH ,STSTR>>>
			<SET TAG "UP">>
		   <AND <SET LR <BEGINS? ,UPSTR .L>> <SET TAG "UP">>
		   <AND <SET LR <BEGINS? ,DNSTR .L>> <SET TAG "DOWN">>
		   <AND <SET LR <BEGINS? ,OKSTR .L>> <SET TAG "OK">>>
	       <CRASH-PARSE .LR .DT .DUR>
	       (.TAG .DT .DUR 0.0))>>

<DEFINE CRASH-PARSE (STR DT DUR)
	#DECL ((STR) STRING (DT) TIMELIST (DUR) HMS)
	<TIME-PARSE <DATE-PARSE .STR .DT> .DUR>>

<DEFINE TOTALS-PARSE (STR
		      "AUX" (UDUR (0 0 0)) (CDUR (0 0 0))
		      (LAST ((0 0 0)(0 0 0) <ZONE <ZONE>>)) TOT)
	#DECL ((STR) STRING (UDUR CDUR) HMS (LAST) TIMELIST (TOT) VECTOR)
	<COND (<BEGINS? "TOTALS" .STR>
	       <SET STR <REST .STR 6>>
	       <SET TOT <VECTOR <> .UDUR .CDUR 0 .LAST 0>>
	       <DATE-PARSE <NUM-PARSE <TIME-PARSE <TIME-PARSE .STR
							      .UDUR>
						  .CDUR>
				      <REST .TOT 3>>
			   .LAST>
	       .TOT)>>

<DEFINE DATE-PARSE (STR DT
		    "AUX" (CNT 1) (NUM? <>) (N 0) C D O)
	#DECL ((STR) STRING (DT) TIMELIST (D) HMS (CNT N O) FIX
	       (C) CHARACTER (NUM?) <OR FALSE ATOM>)
	<REPEAT ()
		<COND (<EMPTY? .STR>
		       <COND (.NUM?
			      <COND (<L? .CNT 4> <SET D <1 .DT>> <SET O .CNT>)
				    (ELSE <SET D <2 .DT>> <SET O <- .CNT 3>>)>
			      <PUT .D .O .N>)>
		       <PUT .DT 3 <ZONE <ZONE>>>
		       <RETURN .STR>)
		      (<MEMQ <SET C <1 .STR>> "0123456789">
		       <SET N <+ <* .N 10> <- <ASCII .C> <ASCII !\0>>>>
		       <SET NUM? T>)
		      (<AND <NOT .NUM?> <MEMQ .C " 	">>)
		      (.NUM?
		       <COND (<L? .CNT 4> <SET D <1 .DT>> <SET O .CNT>)
			     (ELSE <SET D <2 .DT>> <SET O <- .CNT 3>>)>
		       <PUT .D .O .N>
		       <SET N 0>
		       <SET NUM? <>>
		       <COND (<G? <SET CNT <+ .CNT 1>> 6>
			      <RETURN .STR>)>)>
		<SET STR <REST .STR>>>>

<DEFINE TIME-PARSE (STR DUR
		    "AUX" (NUM? <>) (N 0) C (DD (0)) (DL .DD) (DEC? <>))
	#DECL ((STR) STRING (DUR) HMS (N) FIX
	       (C) CHARACTER (NUM?) <OR FALSE ATOM> (DD DL) <LIST [REST FIX]>)
	<REPEAT ()
		<COND (<EMPTY? .STR>
		       <AND .NUM? <PUTREST .DL (.N)>>
		       <RETURN>)
		      (<MEMQ <SET C <1 .STR>> "0123456789">
		       <SET N <+ <* .N 10> <- <ASCII .C> <ASCII !\0>>>>
		       <SET NUM? T>
		       <COND (.DEC? <SET DEC? <+ .DEC? 1>>)>)
		      (<AND <NOT .NUM?> <MEMQ .C " 	">>)
		      (.NUM?
		       <COND (<==? .C !\.>
			      <AND .DEC? <ERROR "BAD-FRACTION" .STR>>
			      <SET DEC? 0>)>
		       <PUTREST .DL <SET DL (.N)>>
		       <SET NUM? <>>
		       <SET N 0>
		       <COND (<MEMQ .C " 	"> <RETURN>)>)>
		<SET STR <REST .STR>>>
	<SET DD <REST .DD>>
	<COND (<G? <LENGTH .DD> 3>
	       <SET N <1 .DD>>
	       <SET DD <REST .DD>>
	       <PUT .DD 1 <+ <1 .DD> <* 24 .N>>>)>
	<COND (.DEC?
	       <SET N
		    <FIX <* 3600.0
			    </ <2 .DD>
			       <EXP <* <LOG 10.0> .DEC?>>>>>>
	       <PUT .DD 2 </ .N 60>>
	       <PUTREST <REST .DD> (<MOD .N 60>)>)>
	<SUBSTRUC .DD 0 <LENGTH .DD>
		  <REST .DUR <- <LENGTH .DUR> <LENGTH .DD>>>>
	.STR>

<DEFINE NUM-PARSE (STR VCT
		    "AUX" (NUM? <>) (N 0) C)
	#DECL ((STR) STRING (VCT) VECTOR (N) FIX
	       (C) CHARACTER (NUM?) <OR FALSE ATOM>)
	<REPEAT ()
		<COND (<EMPTY? .STR> <RETURN>)
		      (<MEMQ <SET C <1 .STR>> "0123456789">
		       <SET N <+ <* .N 10> <- <ASCII .C> <ASCII !\0>>>>
		       <SET NUM? T>)
		      (<AND <NOT .NUM?> <MEMQ .C " 	">>)
		      (.NUM? <RETURN>)>
		<SET STR <REST .STR>>>
	<PUT .VCT 1 .N>
	.STR>

<DEFINE LTOI (L "AUX" (L1 <1 .L>) (L2 <2 .L>))
	#DECL ((L) TIMELIST (L1 L2) HMS)
	<BTIME <1 .L1> <2 .L1> <3 .L1> <1 .L2> <2 .L2> <3 .L2>>>

<DEFINE ITOL (I)
	#DECL ((I) FIX)
	<LTIME .I>>

<DEFINE IDUR (L "AUX" (H <1 .L>))
	#DECL ((L) HMS (H) FIX)
	<+ <CHTYPE <LSH </ .H 24> 18> FIX>
	   <CHTYPE <ANDB <BTIME 0 0 0 <MOD .H 24> <2 .L> <3 .L>> *777777*>
		   FIX>>>

<DEFINE DAYS-IN-MONTH (L "AUX" (L1 <1 .L>) (YR <1 .L1>) (MO <2 .L1>))
	#DECL ((L) TIMELIST (L1) HMS (YR MO) FIX)
	<CHTYPE <LSH <- <FIRST-OF-NEXT .YR .MO> <FIRST-OF-THIS .YR .MO>>
		     -18>
		FIX>>

<DEFINE FIRST-OF-NEXT (YR MO)
	#DECL ((YR MO) FIX)
	<BTIME <COND (<==? .MO 12> <+ .YR 1>)
		     (ELSE .YR)>
	       <COND (<==? .MO 12> 1)
		     (ELSE <+ 1 .MO>)>
	       1 0 0 0>>

<DEFINE FIRST-OF-THIS (YR MO)
	#DECL ((YR MO) FIX)
	<BTIME .YR .MO 1 0 0 0>>

<SETG HR </ 262144 24>>

<MANIFEST HR>

<DEFINE FTIME (I) 
	#DECL ((I) FIX)
	<+ <FLOAT </ .I ,HR>> </ <FLOAT <MOD .I ,HR>> <FLOAT ,HR>>>>

<DEFINE OLINE (L "AUX" ID (OUTCHAN .OUTCHAN))
	#DECL ((L) <LIST STRING TIMELIST HMS> (ID) FIX
	       (OUTCHAN) CHANNEL)
	<FORMAT T "~5A" <1 .L>>
	<ODATE <2 .L>>
	<ODUR <3 .L>>
	<SET ID <IDUR <3 .L>>>
	<COND (<=? <1 .L> "UP">
	       <FORMAT T
		       "~48T~8,3F~8,3F   ;~A"
		       <FTIME .ID>
		       <4 .L>
		       <NTH '["Sun""Mon""Tue""Wed""Thu""Fri""Sat"]
			    <+ 1
			       <IDAY <- <LTOI <2 .L>> .ID>>>>>)
	      (ELSE
	       <FORMAT T
		       "~40T~8,3F"
		       <FTIME .ID>>)>
	<CRLF>>

<DEFINE ODATE (DT "AUX" (D <1 .DT>) (T <2 .DT>))
	#DECL ((DT) TIMELIST (D T) HMS)
	<FORMAT T "~2,'0D.~2,'0D.~2,'0D ~2,'0D:~2,'0D:~2,'0D"
		<1 .D> <2 .D> <3 .D>
		<1 .T> <2 .T> <3 .T>>>

<DEFINE ODUR (DUR "AUX" (D </ <1 .DUR> 24>) (H <MOD <1 .DUR> 24>))
	#DECL ((DUR) HMS (D H) FIX)
	<FORMAT T "~4D!~2,'0D:~2,'0D:~2,'0D"
		.D .H <2 .DUR> <3 .DUR>>>

<DEFINE OTIM (DUR)
	#DECL ((DUR) HMS)
	<FORMAT T "~4D:~2,'0D:~2,'0D"
		<1 .DUR> <2 .DUR> <3 .DUR>>>

\ 

<DEFINE SUMMARY ("TUPLE" FLAGS
		 "AUX" DATA TOT GRPS PP (FILE <>) C (OUTCHAN .OUTCHAN)
		       (RUNS? <>) (GRPS? <>) (TOTS? <>) P START END TIM L CUR
		       (RUNS 0) (WSUM? <>) CC (UP 0.0000000) (DN 0.0000000)
		       (DC 0.0000000) D REC SWAPS (WDN 0.0000000)
		       (WDC 0.0000000) I DAY ODAY DAYS S CPU)
   #DECL ((DATA GRPS TOT PP) VECTOR (P) <OR FALSE LIST>
	  (OUTCHAN) <SPECIAL CHANNEL>
	  (S) STRING (FILE) <OR STRING FALSE> (FLAGS) TUPLE
	  (START END CUR RUNS DAY ODAY DAYS I SWAPS) FIX
	  (RUNS? GRPS? TOTS? WSUM?) <OR ATOM FALSE> (TIM) TIMELIST (L) HMS
	  (UP DN DC WDN WDC D CC REC CPU) FLOAT (C) <OR CHANNEL FALSE>)
   <PROG ()
     <COND (<OR <EMPTY? .FLAGS> <NOT <TYPE? <1 .FLAGS> VECTOR>>>
	    <SET DATA ,DATA>)
	   (ELSE <SET DATA <1 .FLAGS>> <SET FLAGS <REST .FLAGS>>)>
     <SET TOT <2 .DATA>>
     <SET GRPS <3 .DATA>>
     <SET PP <4 .DATA>>
     <COND (<AND <NOT <EMPTY? .FLAGS>> <TYPE? <1 .FLAGS> STRING>>
	    <SET FILE <1 .FLAGS>>
	    <SET FLAGS <REST .FLAGS>>)>
     <MAPR <>
	   <FUNCTION (F) #DECL ((F) TUPLE) <PUT .F 1 <SPNAME <1 .F>>>>
	   .FLAGS>
     <COND (<OR <EMPTY? .FLAGS> <MEMBER "ALL" .FLAGS>>
	    <SET RUNS? T>
	    <SET GRPS? T>
	    <SET TOTS? T>)
	   (<OR <MEMBER "R" .FLAGS> <MEMBER "RUNS" .FLAGS>> <SET RUNS? T>)
	   (<OR <MEMBER "G" .FLAGS> <MEMBER "GRPS" .FLAGS>> <SET GRPS? T>)
	   (<OR <MEMBER "T" .FLAGS> <MEMBER "TOTS" .FLAGS>> <SET TOTS? T>)>
     <COND (.FILE
	    <COND (<PROG ((NM2 "SUMMRY"))
			 #DECL ((NM2) <SPECIAL STRING>)
			 <SET C <OPEN "PRINT" .FILE>>>
		   <SET OUTCHAN .C>)
		  (ELSE <RETURN .C>)>)>
     <COND
      (<OR .RUNS? .TOTS?>
       <SET P <1 .PP>>
       <SET START <LTOI <SET TIM <2 .P>>>>
       <SET CUR .START>
       <SET ODAY <IDAY .CUR>>
       <SET DAYS <DAYS-IN-MONTH .TIM>>
       <SET END <FIRST-OF-NEXT <1 <SET L <1 .TIM>>> <2 .L>>>
       <REPEAT ()
	       <COND (<EMPTY? .PP>
		      <AND .RUNS? <OSUM .WDN .WDC>>
		      <AND <0? .RUNS> <SET RUNS 1>>
		      <RETURN>)
		     (<NOT <SET P <1 .PP>>>)
		     (ELSE
		      <SET S <1 .P>>
		      <SET I <LTOI <2 .P>>>
		      <SET DAY <IDAY .I>>
		      <SET D <FTIME <MIN <IDUR <3 .P>> <- .I .CUR>>>>
		      <COND (<AND <=? .S "UP"> <N==? .I .CUR>>
			     <SET WSUM? <>>
			     <SET RUNS <+ .RUNS 1>>
			     <SET WDN <+ .WDN .D>>
			     <SET DN <+ .DN .D>>
			     <PUT .P 4 <SET CC <CONTRACT-DOWN .CUR .I>>>
			     <SET WDC <+ .WDC .CC>>
			     <SET DC <+ .DC .CC>>)
			    (<=? .S "DOWN">
			     <SET UP <+ .UP .D>>
			     <SET WSUM? <L? .DAY .ODAY>>)
			    (<=? .S "OK">
			     <SET WSUM? <>>
			     <COND (<G? .I .END> <SET I .END>)>
			     <SET UP <+ .UP <FTIME <- .I .CUR>>>>)>
		      <COND (.WSUM?
			     <AND .RUNS? <OSUM .WDN .WDC>>
			     <SET WDN 0.0000000>
			     <SET WDC 0.0000000>)>
		      <SET CUR .I>
		      <SET ODAY .DAY>
		      <AND .RUNS? <OLINE .P>>)>
	       <SET PP <REST .PP>>>)>
     <COND (.GRPS?
	    <PRINC 
"
Group-name	  Users  Connect-time %Con  Cpu time %Cpu    Swaps  %Swaps

"> ;"
ZORK DEVELOPMENT     69  132!23:42:18  98%  24:32:18  98%  9000000  98%"
	    <MAPF <>
		  <FUNCTION (G "AUX" N) 
			  #DECL ((G) VECTOR (N) STRING)
			  <COND (<G? <LENGTH <SET N <1 .G>>> 17>
				 <PRINTSTRING .N .OUTCHAN 17>
				 <PRINC "...">)
				(ELSE <PRINC .N>)>
			  <FORMAT T "~20T~3D~24T" <6 .G>>
			  <ODUR <2 .G>>
			  <OPCT <IDUR <2 .G>> <IDUR <2 .TOT>>>
			  <OTIM <3 .G>>
			  <OPCT <IDUR <3 .G>> <IDUR <3 .TOT>>>
			  <FORMAT T "~9D" <4 .G>>
			  <OPCT <4 .G> <4 .TOT>>
			  <CRLF>>
		  .GRPS>
	    <FORMAT T "~%~A~19T~4D~24T" <1 .TOT> <6 .TOT>>
	    <ODUR <2 .TOT>>
	    <PRINC "     ">
	    <OTIM <3 .TOT>>
	    <FORMAT T "     ~9D~3%" <4 .TOT>>)>
     <COND (.TOTS?
	    <PRINC 
"
Month  Log     Up  Down  Down    Cpu   Up  Cpu Runs   Mean Swaps    Swaps/hour
       hrs    hrs   hrs (day)    hrs    %    %         run x1000     up    cpu

">
 ;
"
Jan  000.0  000.0  00.0  00.0  000.0  99%  99%  100  100.0  7000  35000  35000"
	    <FORMAT T
		    "~4A~6,1F~7,1F~6,1F~6,1F~7,1F~4D%~4D%~5D~7,1F~6D~7D~7D~%"
		    <NTH '["Jan"
			   "Feb"
			   "Mar"
			   "Apr"
			   "May"
			   "Jun"
			   "Jul"
			   "Aug"
			   "Sep"
			   "Oct"
			   "Nov"
			   "Dec"]
			 <2 <SET L <1 <ITOL .START>>>>>
		    <SET REC <+ .UP .DN>>
		    .UP
		    .DN
		    .DC
		    <SET CPU <FTIME <IDUR <3 .TOT>>>>
		    <PERCENT </ .UP .REC>>
		    <PERCENT </ .CPU .UP>>
		    .RUNS
		    </ .UP <FLOAT .RUNS>>
		    <ROUND </ <SET SWAPS <4 .TOT>> 1000.0>>
		    <ROUND </ .SWAPS .UP>>
		    <ROUND </ .SWAPS .CPU>>>)>
     <COND (.FILE <CLOSE .OUTCHAN>)>
     T>>

<DEFINE PERCENT (N)
	#DECL ((N) FLOAT (VALUE) FIX)
	<FIX <+ 0.5 <* 100.0 .N>>>>

<DEFINE ROUND (N)
	#DECL ((N) FLOAT (VALUE) FIX)
	<FIX <+ 0.5 .N>>>

<DEFINE OSUM (WDN WDC "AUX" (OUTCHAN .OUTCHAN))
	#DECL ((WDN WDC) FLOAT (OUTCHAN) CHANNEL)
	<FORMAT T "~49T----------------~%">
	<FORMAT T "~48T~8,3F~8,3F~2%" .WDN .WDC>>

"Contract hours are 9-5, weekdays"

<SETG CSTART <* 3 </ 262144 8>>>

<SETG CEND <+ ,CSTART </ 262144 3>>>

<GDECL (CSTART CEND) FIX>

<DEFINE CONTRACT-DOWN (D U
		       "AUX" DUR DDAY UDAY DTIME UTIME TCE TD
		       (CS ,CSTART) (CE ,CEND) (CD 0))
  #DECL ((U D DUR DTIME UTIME DDAY UDAY CS CD CE TCE TD) FIX)
  <REPEAT ()
	<SET DUR <- .U .D>>
	<SET DDAY <IDAY .D>>
	<SET UDAY <IDAY .U>>
	<SET DTIME <CHTYPE <ANDB .D *777777*> FIX>>
	<SET UTIME <CHTYPE <ANDB .U *777777*> FIX>>
	<COND (<OR <0? .DDAY> <==? .DDAY 6>>
	       <SET D <CHTYPE <PUTBITS <+ .D 262144> <BITS 18> .CS> FIX>>)
	      (<L? .DTIME .CS>
	       <SET D <CHTYPE <PUTBITS .D <BITS 18> .CS> FIX>>)
	      (<L? .DTIME .CE>
	       <SET TCE <CHTYPE <PUTBITS .D <BITS 18> .CE> FIX>>
	       <SET TD <- .TCE .D>>	;"START OF DOWN TO END OF CONTRACT"
	       <COND (<L=? .DUR .TD>
		      <SET CD <+ .CD .DUR>>
		      <RETURN>)
		     (<SET CD <+ .CD .TD>>
		      <SET D .TCE>)>)
	      (ELSE
	       <SET D <CHTYPE <PUTBITS <+ .D 262144> <BITS 18> .CS> FIX>>)>
	<COND (<G? .D .U> <RETURN>)>>
  <FTIME .CD>>

<DEFINE OPCT (X Y)
	#DECL ((X Y) FIX)
	<FORMAT T "~4D%" <PERCENT </ <FLOAT .X> <FLOAT .Y>>>>>

<ENDPACKAGE>

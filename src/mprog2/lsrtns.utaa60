<PACKAGE "LSRTNS">

<ENTRY LSR-FLUSH LSR-INIT FIELD LAST-NAME LSR-ENTRY LSR-EXTRACT>
<ENTRY $UNAM $NAME $NICK $SSN $MITA $MITT $HOMA $HOMT $SUPR $PROJ $DIR $AUTH
       $GRP $REL $BRTH $REM $NETA $ALTR $MACH>

<SETG $UNAM 0>
<SETG $NAME 1>
<SETG $NICK 2>
<SETG $SSN 3>
<SETG $MITA 4>
<SETG $MITT 5>
<SETG $HOMA 6>
<SETG $HOMT 7>
<SETG $SUPR 8>
<SETG $PROJ 9>
<SETG $DIR 10>
<SETG $AUTH 11>
<SETG $GRP 12>
<SETG $REL 13>
<SETG $BRTH 14>
<SETG $REM 15>
<SETG $NETA 16>
<SETG $ALTR 17>
<SETG $MACH 18>
<MANIFEST $UNAM $NAME $NICK $SSN $MITA $MITT $HOMA $HOMT $SUPR $PROJ $DIR $AUTH
          $GRP $REL $BRTH $REM $NETA $ALTR $MACH>

		
; "INITIALIZE:  GET N CONSECUTIVE PAGES, MAP IN FIRST PAGE OF FILE, FIX
UP PAGES IF NEED TO.  SETG UNAME-TAB, ADDRESS OF START OF UNAME TABLE,
LASTNAME-TAB, START OF LASTNAME TABLE, LASTNAME-PAGES, PAGE-ZERO.
RETURN MAP-CHAN, OPEN"

<SETG BUF-COUNT -7>		; "NUMBER OF PAGES TO PLAY WITH, INITIALLY"
<SETG MAP-CHAN <>>		; "CHANNEL TO DATA BASE"

<TITLE	LSR-INIT>
	<DECLARE  ("VALUE" <OR CHANNEL FALSE>)>
	<PUSHJ	P* IINIT>
	<JRST	FINIS>

<INTERNAL-ENTRY IINIT 0>
	<SUBM	M* (P)>
	<MOVE	A* <MQUOTE <RGLOC MAP-CHAN T>>>
	<ADD	A* GLOTOP 1>
	<SKIPGE	1(A)>
	 <JRST	REINIT>
DOOPEN	<DPUSH	TP* <PQUOTE "READB">>
	<DPUSH	TP* <PQUOTE "INQUIR;LSR1 >">>
	<MCALL	2 OPEN>
	<JUMPGE	B* MPOPJ>	; "NOTHING ON STACK TO FLUSH"
	<MOVE	C* <MQUOTE <RGLOC FILE-TIME T>>>
	<ADD	C* GLOTOP 1>
	<MOVSI	O* <TYPE-CODE FIX>>
	<MOVEM	O* (C)>
	<*CALL	[<SETZ>
		 <SIXBIT "RFDATE">
		 <1(B)>		; "CHANNEL #"
		 <SETZM 1(C)>	; "SAVE IT"]>
	<JFCL>
	<MOVE	C* <MQUOTE <RGLOC MAP-CHAN T>>>
	<ADD	C* GLOTOP 1>
	<MOVEM	A* (C)>
	<MOVEM	B* 1(C)>
	<DPUSH	TP* A>		; "SAVE CHANNEL"
	<*CALL	[<SETZ>
		 <SIXBIT "ACCESS">
		 <1(B)>
		 <SETZI	5>]>
	 <*LOSE	*1400*>
	<MOVE	C* [<(-1) A>]>
	<*CALL	[<SETZ>
		 <SIXBIT "IOT">
		 <1(B)>
		 <SETZ	C>]>
	 <*LOSE	*1000*>		; "READ IN ADDRESS OF DATA AREA"
	<ASH	A* -10>		; "TURN INTO # PAGES"
	<MOVNI	B* -1(A)>
	<MOVE	C* <MQUOTE <RGLOC BUF-COUNT T>>>
	<ADD	C* GLOTOP 1>
	<MOVEM	B* 1(C)>	; "SAVE IT AWAY"
î	<PUSH	P* A>		; "NUMBER OF PAGES REQUIRED."
GETPAG	<PUSHJ	P* PGFIND>	; "SO GET THEM"
	<JUMPLE	B* OTFALS1>	; "LOST, RETURN FALSE"
	<PUSH	P* B>		; "SAVE PAGE #"
	<MOVE	C* <MQUOTE <RGLOC PAGE-ZERO T>>>
	<ADD	C* GLOTOP 1>
	<MOVSI	A* <TYPE-CODE FIX>>
	<MOVEM	A* (C)>
	<MOVEM	B* 1(C)>	; "SETG PAGE-ZERO"
	<MOVE	B* (TP)>	; "CHANNEL"
	<*CALL	[<SETZ>
		 <SIXBIT "CORBLK">
		 <MOVEI	*10000*>; "MUST GET READ ACCESS"
		 <MOVEI	*777777*>
		 <(P)>		; "PAGE #"
		 <SETZ 1(B)>]>
	 <*LOSE	*1000*>
	<MOVE	A* (P)>
	<ASH	A* 10>		; "ADDRESS OF PAGE 0"
	<MOVE	D* <MQUOTE <RGLOC BASE-ADDR T>>>
	<ADD	D* GLOTOP 1>
	<MOVEM	A* 1(D)>
	<MOVSI	O* <TYPE-CODE FIX>>
	<MOVEM	O* (D)>		; "BASE-ADDR IS CORE ADDRESS OF PAGE 0"
	<MOVEI	B* (A)>
	<ADD	A* 3(A)>	; "CORE ADDRESS OF UNAME TABLE"
	<MOVE	D* <MQUOTE <RGLOC UNAME-TAB T>>>
	<ADD	D* GLOTOP 1>
	<MOVEM	A* 1(D)>
	<MOVEM	O* (D)>
	<ADD	B* 4(B)>	; "ADDRESS OF LASTNAME TABLE"
	<MOVE	D* <MQUOTE <RGLOC LASTNAME-TAB T>>>
	<ADD	D* GLOTOP 1>
	<MOVEM	B* 1(D)>
	<MOVEM	O* (D)>
	<SUB	P* [<(2) 2>]>	; "THROW AWAY PAGES AVAILABLE"
	<POP	TP* B>
	<POP	TP* A>
	<JRST	MPOPJ>
OTFALS1	<SUB	P* [<(1) 1>]>
OTFALS2	<SUB	P* [<(1) 1>]>
OTFALS0	<MOVSI	A* <TYPE-CODE FALSE>>
	<MOVEI	B* 0>
	<JRST	MPOPJ>

; "RE-OPEN CHANNEL IF ALREADY EXISTS"
REINIT	<DPUSH	TP* (A)>	; "PUSH IT"
	<MCALL	1 RESET>	; "RESET IT"
	<JUMPGE	B* RERE>	; "DATA BASE WENT AWAY"
	<*CALL	[<SETZ>
		 <SIXBIT "RFDATE">
		 <1(B)>		; "CHANNEL #"
		 <SETZM C>]>
	<JFCL>
	<MOVE	D* <MQUOTE <RGLOC FILE-TIME T>>>
	<ADD	D* GLOTOP 1>
	<CAMN	C* 1(D)>	; "SAME TIME?"
	 <JRST	[<MOVE	C* <MQUOTE <RGLOC PAGE-ZERO T>>>
		 <ADD	C* GLOTOP 1>
		 <HRLZ	C* 1(C)>
		 <ADD	C* [<(*200*) D>]>
		 <*SUSET C>
		 <JUMPE	D* RERE>
		 <JRST	MPOPJ>]>	; "YES, ALL DONE"
RERE	<PUSHJ	P* IFLUSH>	; "FLUSH OLD STUFF"
	<JRST	DOOPEN>		; "AND TRY AGAIN"
	

; "CLOSE CHANNEL IF OPEN, THROW IT AWAY, GIVE BACK PAGES.  DOESN'T BOTHER,
HOWEVER, TO MAP THEM OUT."
<SUB-ENTRY LSR-FLUSH ("VALUE" ATOM)>
	<PUSHJ	P* IFLUSH>
	<JRST	FINIS>

<INTERNAL-ENTRY IFLUSH 0>
	<SUBM	M* (P)>
	<MOVE	A* <MQUOTE <RGLOC MAP-CHAN T>>>
	<ADD	A* GLOTOP 1>
	<SKIPL	B* 1(A)>
	 <JRST	RETAT>
	<SKIPN	1(B)>		; "SKIP IF CHANNEL OPEN"
	 <JRST	DOFLUS>
	<PUSH	TP* (A)>
	<PUSH	TP* B>
	<MCALL	1 CLOSE>	; "CLOSE CHANNEL"
	<MOVE	A* <MQUOTE <RGLOC MAP-CHAN T>>>
	<ADD	A* GLOTOP 1>
DOFLUS	<SETZM	1(A)>
	<MOVSI	O* <TYPE-CODE FALSE>>
	<MOVEM	O* (A)>
	<MOVE	A* <MQUOTE <RGLOC BUF-COUNT T>>>
	<ADD	A* GLOTOP 1>
	<MOVN	A* 1(A)>
	<ADDI	A* 1>		; "NUMBER OF PAGES TO GIVE BACK"
	<MOVE	B* <MQUOTE <RGLOC PAGE-ZERO T>>>
	<ADD	B* GLOTOP 1>
	<MOVE	B* 1(B)>
	<PUSHJ	P* PGGIVE>
RETAT	<MOVSI	A* <TYPE-CODE ATOM>>
	<MOVE	B* <MQUOTE T>>
	<JRST	MPOPJ>

; "TAKES UNAME, FIX, RETURNS FIXTH FIELD OF ENTRY FOR THAT UNAME, OR FALSE
IF NOT FOUND."
<SUB-ENTRY FIELD ("VALUE" <OR FALSE STRING>
		  <OR STRING <PRIMTYPE WORD>> FIX "OPTIONAL" <OR ATOM FALSE>)>
	<HLRE	A* AB>
IFLP	<DPUSH	TP* (AB)>
	<ADD	AB* [<(2) 2>]>
	<JUMPL	AB* IFLP>
	<ASH	A* -1>
	<ADDI	A* TABEND>
	<PUSHJ	P* @ 2 (A)>
	<JRST	FINIS>
	<IFIELD2>
TABEND	<IFIELD1>

<INTERNAL-ENTRY IFIELD1 2>
	<PUSH	TP* <TYPE-WORD FALSE>>
	<PUSH	TP* [0]>
<INTERNAL-ENTRY IFIELD2 3>
	<SUBM	M* (P)>
	<PUSH	TP* -5(TP)>
	<PUSH	TP* -5(TP)>		; "NAME"
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>		; "FAST MODE"
	<PUSHJ	P* ILSREN2>		; "GET STRING"
	<GETYP	O* A>
	<CAIN	O* <TYPE-CODE FALSE>>	; "LOST?"
	 <JRST	FIELDO>			; "DEPART"
	<DPUSH	TP* A>
	<PUSH	TP* -5(TP)>		; "PUSH NUMBER"
	<PUSH	TP* -5(TP)>
	<PUSHJ	P* ILSREX>		; "EXTRACT RIGHT THING"
	<PUSH	TP* A>
	<PUSH	TP* B>
	<MOVEI	A* 1>
	<PUSHJ	P* CISTNG>
FIELDO	<SUB	TP* [<(6) 6>]>
	<JRST	MPOPJ>

<SUB-ENTRY LSR-ENTRY ("VALUE" <OR FALSE STRING>
		      <OR STRING <PRIMTYPE WORD>> "OPTIONAL" <OR ATOM FALSE>)>
	<HLRE	A* AB>
ENLP	<DPUSH	TP* (AB)>
	<ADD	AB* [<(2) 2>]>
	<JUMPL	AB* ENLP>
	<ASH	A* -1>
	<ADDI	A* NTABEND>
	<PUSHJ	P* @ 1(A)>
	<JRST	FINIS>
	<ILSREN2>
NTABEND	<ILSREN1>

<INTERNAL-ENTRY ILSREN1 1>
	<PUSH	TP* <TYPE-WORD FALSE>>
	<PUSH	TP* [0]>
<INTERNAL-ENTRY ILSREN2 2>		; "FIELD COMES HERE"
	<SUBM	M* (P)>
	<HRRZ	A* -3(TP)>
	<CAILE	A* 6>			; "IF LONGER THAN 6, FLUSH"
	 <JRST	[<MOVE	A* <TYPE-WORD FALSE>>
		 <MOVEI	B* 0>
		 <SUB	TP* [<(4) 4>]>
		 <JRST	MPOPJ>]>
	<SKIPGE	(TP)>
	 <JRST	[<MOVE	A* <MQUOTE <RGLOC MAP-CHAN T>>>
		 <ADD	A* GLOTOP 1>
		 <DPUSH	TP* (A)>
		 <JRST	IFIEL1>]>
	<PUSHJ	P* IINIT>		; "INITIALIZE"
	<JUMPGE	B* [<SUB TP* [<(4) 4>]>
		    <JRST MPOPJ>]>	; "INITIALIZATION FAILED"
	<DPUSH	TP* A>			; "SAVE CHANNEL"
IFIEL1	<MOVE	B* -4(TP)>
	<GETYP	O* -5(TP)>
	<CAIE	O* <TYPE-CODE STRING>>
	 <JRST	IFIEL2>
	<PUSH	TP* -5(TP)>
	<PUSH	TP* -5(TP)>		; "PUSH STRING"
	<PUSHJ	P* ISTRTOX>		; "CONS INTO SIXBIT"
IFIEL2	<JUMPE	B* USRSFL>		; "FLUSH IF NULL NAME"
	<TLC	B* *400000*>		; "COMPLEMENT SIGN BIT"
	<MOVE	A* <MQUOTE <RGLOC UNAME-TAB T>>>
	<ADD	A* GLOTOP 1>
	<MOVE	D* 1(A)>		; "CORE ADDRESS OF UNAME TABLE"
	<MOVN	E* (D)>			; "- NUMBER OF ENTRIES"
	<ADDI	D* 1>			; "START OF TABLE"
	<HRL	D* E>			; "AOBJN POINTER TO SET OF NAMES"
IFSLOP	<CAML	B* (D)>			; "SKIPS IF PASSED TARGET PAGE"
	 <AOBJN	D* IFSLOP>
	<MOVE	C* B>
	<SUB	D* 1(A)>		; "PAGE # IN DATA AREA"
	<MOVE	A* <MQUOTE <RGLOC BUF-COUNT T>>>
	<ADD	A* GLOTOP 1>
	<MOVN	A* 1(A)>
	<ADDI	A* -1(D)>		; "PAGE # IN FILE"
	<MOVE	B* (TP)>
	<MOVE	B* 1(B)>		; "CHANNEL # TO MAP ON"
	<PUSHJ	P* DO-MAP>		; "MAP TWO PAGES, RETURNING CORE ADDRESS IN A"
; "SEARCH FOR UNAME.  NAME IS IN C, ADDRESS TO START IT IS IN A"
	<MOVE	B* A>			; "SHUFFLE A BIT"
	<HRLI	B* -1024>		; "HEADER FOR CROCK IS IN FIRST PAGE"
HDRLOP	<MOVEI	D* 1>
HDRLOP1	<TDNN	D* (B)>			; "ONLY HEADER HAS BIT 1.1 TURNED ON"
	 <AOBJN	B* HDRLOP1>
	<JUMPGE	B* USRSFL>		; "DIDN'T FIND HIM, TOO BAD"
	<HLRZ	D* (B)>			; "# WORDS IN THIS ENTRY"
	<JUMPE	D* USRSFL>		; "END OF FILE, TOO BAD"
	<PUSH	P* D>			; "SAVE # WORDS"
	<MOVE	E* B>
	<HRLI	E* *10700*>		; "BYTE POINTER TO NAME IN FILE"
	<MOVEI	D* 0>			; "ACCUMULATE 6BIT"
	<MOVE	A* [<(*440600*) D>]>
LSR6BIT	<ILDB	O* E>
	<JUMPE	O* USRDOC>		; "DO COMPARE"
	<CAIGE	O* *140*>
	 <SUBI	O* *40*>
	<TLNE	A* *770000*>		; "OUT OF ROOM?"
	 <IDPB	O* A>
	<JRST	LSR6BIT>
USRDOC	<POP	P* A>			; "# WORDS IN ENTRY"
	<TLC	D* *400000*>		; "COMPLEMENT SIGN BIT"
	<CAMLE	C* D>
	 <JRST	[<HRLS A>		; "#WORDS,,#WORDS"
		 <ADD B* A>		; "FROB POINTER"
		 <JUMPL B* HDRLOP>	; "JUMP IF NOT DONE"
		 <JRST USRSFL>]>
	<CAME	C* D>
	 <JRST	USRSFL>
; "WON!  LENGTH OF ENTRY IN WORDS IS IN A, ADDRESS IS IN B."
	<SUBI	A* 1>			; "DON'T INCLUDE THE HEADER"
	<IMULI	A* 5>
	<HRLI	A* <TYPE-CODE STRING>>
	<HRLI	B* *10700*>		; "MAKE A STRING"
	<DPUSH	TP* A>			; "SAVE STRING"
DORET	<SKIPGE	-4(TP)>			; "FAST MODE?"
	 <JRST	WINRET>			; "YES"
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>
	<MCALL	1 CLOSE>		; "CLOSE CHANNEL"
WINRET	<POP	TP* B>
	<POP	TP* A>
	<SUB	TP* [<(6) 6>]>
	<JRST	MPOPJ>
USRSFL	<PUSH	TP* <TYPE-WORD FALSE>>
	<PUSH	TP* [0]>
	<JRST	DORET>

<SUB-ENTRY LSR-EXTRACT ("VALUE" <OR FALSE STRING> <OR FALSE STRING> FIX)>
	<DPUSH	TP* (AB)>
	<DPUSH	TP* 2(AB)>
	<PUSHJ	P* ILSREX>
	<JRST	FINIS>

<INTERNAL-ENTRY ILSREX 2>
	<SUBM	M* (P)>
	<GETYP	A* -3(TP)>		; "SEE IF FALSE"
	<CAIN	A* <TYPE-CODE FALSE>>
	 <JRST	[<MOVSI	A* <TYPE-CODE FALSE>>
		 <MOVEI	B* 0>
		 <JRST	EXTEXI>]>
	<MOVE	A* (TP)>		; "FIELD TO GET"
	<MOVE	E* -2(TP)>
	<JUMPE	A* GETTHIS>		; "DONE ALREADY?"
FLDLOP	<ILDB	O* E>
	<JUMPN	O* FLDLOP>
	<SOJG	A* FLDLOP>
GETTHIS	<MOVEI	A* 0>
	<MOVE	B* E>
GETLOP	<ILDB	O* E>
	<JUMPE	O* GETDONE>
	<AOJA	A* GETLOP>
GETDONE	<HRLI	A* <TYPE-CODE STRING>>
EXTEXI	<SUB	TP* [<(4) 4>]>
	<JRST	MPOPJ>

; "STRING TO SIXBIT"
ISTRTOX	<SUBM	M* (P)>
	<INTGO>
	<POP	TP* C>
	<POP	TP* A>
	<TLZ	A* *777777*>
	<MOVEI	B* 0>
	<JUMPE	A* ISTROUT>		; "IF EMPTY STRING"
	<MOVE	D* [<(*440600*) B>]>
ISTRLOP	<ILDB	O* C>
	<SUBI	O* *40*>
	<CAIL	O* *100*>
	 <SUBI	O* *40*>
	<TLNN	D* *770000*>
	 <JRST	ISTROUT>
	<IDPB	O* D>
	<SOJG	A* ISTRLOP>
ISTROUT	<JRST	MPOPJ>

; "COME HERE TO MAP PAGES FOR LOSER'S ENTRY IN:  TWO PAGES, STARTING AT
FILE PAGE CONTAINED IN A, ON CHANNEL IN B"
DO-MAP	<SUBM	M* (P)>
	<INTGO>
	<PUSH	P* C>
	<MOVE	C* <MQUOTE <RGLOC PAGE-ZERO>>>
	<ADD	C* GLOTOP 1>
	<MOVE	C* 1(C)>
	<ADDI	C* 1>			; "CORE PAGE TO START AT"
	<PUSH	P* C>
	<HRLI	C* -2>
	<*CALL	[<SETZ>
		 <SIXBIT "CORBLK">
		 <MOVEI	*200000*>	; "OK IF CAN'T GET READ"
		 <MOVEI	*777777*>	; "MAP INTO ME"
		 <C>			; "TWO PAGES"
		 <B>
		 <SETZ A>]>
	 <*LOSE	*1000*>
	<POP	P* A>
	<ASH	A* 10>
	<POP	P* C>
	<JRST	MPOPJ>

; "COME HERE WITH LAST NAME TO GET VECTOR OF ALTERNATE UNAMES AND NET
ADDRESSES, OR FALSE.  MUST CONS UP STRINGS, SINCE MAPS THINGS IN AND OUT
WITHIN ROUTINE, ALAS.  ALGORITHM MAINLY STOLEN, AS ALWAYS, FROM LSRTNS.
STRING ***MUST*** BE UPPER-CASED BEFORE IT GETS HERE."

<SUB-ENTRY LAST-NAME ("VALUE" <OR FALSE <VECTOR [REST STRING]>> STRING "OPTIONAL" <OR ATOM FALSE>)>
	<HLRE	A* AB>
LNLP	<DPUSH	TP* (AB)>
	<ADD	AB* [<(2) 2>]>
	<JUMPL	AB* LNLP>
	<ASH	A* -1>
	<ADDI	A* LNTAB>
	<PUSHJ	P* @ 1 (A)>
	<JRST	FINIS>
	<ILASTN2>
LNTAB	<ILASTN1>

<INTERNAL-ENTRY ILASTN1 1>
	<PUSH	TP* <TYPE-WORD FALSE>>
	<PUSH	TP* [0]>
<INTERNAL-ENTRY ILASTN2 2>
	<SUBM	M* (P)>
	<SKIPGE	(TP)>
	 <JRST	[<MOVE	A* <MQUOTE <RGLOC MAP-CHAN T>>>
		 <ADD	A* GLOTOP 1>
		 <MOVE	B* 1(A)>
		 <PUSH	TP* (A)>
		 <PUSH	TP* B>
		 <JRST	ILASTG>]>
	<PUSHJ	P* IINIT>
	<JUMPGE	B* [<SUB TP* [<(4) 4>]>
		    <JRST MPOPJ>]>		; "RETURN LOSING CHANNEL"
	<DPUSH	TP* A>
ILASTG	<PUSH	P* 1(B)>			; "CHANNEL NUMBER"
	<MOVE	A* <MQUOTE <RGLOC PAGE-ZERO T>>>
	<ADD	A* GLOTOP 1>
	<MOVE	C* 1(A)>			; "FIRST PAGE"
	<MOVE	B* <MQUOTE <RGLOC BUF-COUNT T>>>
	<ADD	B* GLOTOP 1>
	<HRLZ	A* 1(B)>			; "AOBJN POINTER TO MAP STUFF IN"
	<HRRI	A* 1(C)>
	<MOVEI	D* 1>
	<*CALL	[<SETZ>
		 <SIXBIT "CORBLK">
		 <MOVEI	*10000*>
		 <MOVEI	*777777*>
		 <A>
		 <(P)>
		 <SETZ	D>]>			; "MAP IN TABLE OF LAST NAMES"
	 <*LOSE	*1000*>
	<ASH	C* 10>				; "ADDRESS OF PAGE ZERO"
	<PUSH	P* C>				; "SAVE FOR RELOCATION"
	<MOVEI	E* 1(C)>
	<ADD	E* 4(C)>			; "FIRST ENTRY IN TABLE"
	<MOVE	D* E>
	<ADD	E* -1(E)>			; "LAST ENTRY IN TABLE"
; "-4(TP) IS BPTR TO TARGET, RH OF -5(TP) IS LENGTH.  AC'S (AS IN LSRTNS)
A  CURRENT ENTRY
B  ARGUMENT NAME
C  TABLE NAME
D  FIRST POSSIBLE ENTRY
E  LAST POSSIBLE ENTRY"
LSRLN1	<CAMG	E* D>			; "SKIPS IF ANY POSSIBILITIES"
	 <JRST	LSRLNL>			; "SORRY"
	<MOVE	A* E>
	<SUB	A* D>
	<LSH	A* -1>
	<ADD	A* D>			; "POINTER TO CURRENT FROB"
	<HLRZ	C* (A)>			; "ADDRESS IN FILE OF ENTRY"
	<ADD	C* (P)>			; "REAL ADDRESS OF NAME"
	<PUSHJ	P* STRCMP>
	 <JRST	[<MOVEI D* 1(A)>
		 <JRST LSRLN1>]>	; "B>C, MOVE UP"
	 <JRST	[<MOVE	E* A>
		 <JRST	LSRLN1>]>	; "B<C, MOVE DOWN"
; "NOW AT LAST NAME EQUAL TO OURS, NEED TO FIND RANGE OF MATCH"
LSRLN4	<CAMG	A* D>
	 <JRST	LSRLN5>
	<HLRZ	C* -1(A)>
	<ADD	C* (P)>
	<PUSHJ	P* STRCMP>
	 <JRST	LSRLN5>			; "B>C"
	 <JRST	LSRLN5>			; "HMM..."
	<SOJA	A* LSRLN4>		; "BACK UP SOME MORE, TURKEY"
LSRLN5	<MOVNI	D* 1>			; "NEGATIVE COUNT OF ENTRIES IN RH"
	<HRL	D* A>			; "ADDRESS OF FIRST ENTRY IN LH"
LSRLN6	<CAIL	A* -1(E)>
	 <JRST	LSRLN7>
	<HLRZ	C* 1(A)>
	<ADD	C* (P)>
	<PUSHJ	P* STRCMP>
	 <JRST	LSRLN7>			; "HMM..."
	 <JRST	LSRLN7>			; "B<C, DONE"
	<SUBI	D* 1>			; "UPDATE COUNT"
	<AOJA	A* LSRLN6>		; "GOBBLE UP SOME MORE"

LSRLN7	<MOVS	B* D>			; "AOBJN PTR NOW IN B, TO MATCHING FROBS"

; "NOW COMMENCES AN OBSCENITY.  FIRST WE MAP THE PAGE(S) IN WHICH OUR MATCHES
LIVE TO THE LAST TWO PAGES OF THE BUFFER, WHEREVER THEY MAY BE.  WE THEN COMMENCE
MOVING DOWN THE MATCHES, MAKING SURE THAT THE APPROPRIATE PAGES ARE ALWAYS
MAPPED.  AS DATA IS FOUND, STRING POINTERS ARE CONSED, AND THE STRINGS ARE
COPIED (VIA CISTNG) AND PUSHED ON THE STACK.  WHEN ALL IS DONE, WE RETURN
A VECTOR CONTAINING ALL THE COPIED STRINGS"
	<PUSH	P* B>
	<MOVE	A* -1(P)>
	<TLZ	B* *777777*>
	<ASH	B* -10>
	<ASH	A* -10>
	<ADDI	A* 3>
	<CAIL	B* (A)>			; "IF B>A, NO RE-MAPPING NEEDED"
	 <JRST	LNCLOI>
	<MOVEI	O* 2>
	<ADDI	A* 1>
	<ADDI	B* 1>
LNCREM	<*CALL	[<SETZ>
		 <SIXBIT "CORBLK">
		 <MOVEI *10000*>
		 <MOVEI *777777*>
		 <A>
		 <MOVEI *777777*>
		 <SETZ B>]>
	 <*LOSE	*1000*>
	<SOJLE	O* LNCLOO>
	<SUBI	A* 1>
	<SOJA	B* LNCREM>
LNCLOO	<SUBI	A* (B)>
	<ASH	A* 10>			; "HOW TO MUNG AOBJN POINTER"
	<POP	P* E>
	<ADD	E* A>			; "MUNG IT"
	<CAIA>
LNCLOI	<POP	P* E>
	<MOVEI	D* 0>			; "COUNT OF STUFF PUSHED"
LNCLOP	<HRRZ	A* (E)>			; "ADDRESS IN FILE OF FIRST ONE"
	<IDIVI	A* *2000*>		; "TO FILE PAGE"
	<MOVEI	C* (B)>
	<MOVE	B* -1(P)>		; "CHANNEL #"
	<PUSHJ	P* DO-MAP>		; "GIVES CORE ADDRESS OF FIRST PAGE MAPPED IN A"
	<HRRZ	B* (E)>			; "FILE ADDRESS"
	<ADDI	A* (C)>			; "CORE ADDRESS OF BEGINNING OF ENTRY"
	<HRLI	A* *10700*>		; "BYTE POINTER"
	<PUSH	TP* <TYPE-WORD STRING>>
	<PUSH	TP* A>			; "THIS WILL BE PASSED TO CISTNG"
	<MOVEI	C* $GRP>		; "GROUP AFFILIATION"
GETGRP	<ILDB	O* A>
	<JUMPN	O* GETGRP>
	<SOJG	C* GETGRP>
	<ILDB	O* A>
	<CAIN	O* <ASCII !\@>>		; "IF THIS IS AN ALIAS, FLUSH IT"
	 <JRST	[<SUB	TP* [<(2) 2>]>
		 <JRST	LNLEND>]>
	<MOVE	A* (TP)>		; "POINTER TO NAME"
GETNAM	<ILDB	O* A>
	<JUMPE	O* GOTNAM>
	<AOS	-1(TP)>
	<JRST	GETNAM>
GOTNAM	<PUSH	P* E>
	<PUSH	P* D>
	<PUSH	P* A>
	<MOVEI	A* 1>
	<PUSHJ	P* CISTNG>		; "CONS UP A STRING"
	<DPUSH	TP* A>			; "PUSH IT"
	<POP	P* A>
	<POP	P* D>
	<POP	P* E>
	<ADDI	D* 1>
	<MOVEI	C* $NETA -1>		; "FIELD # OF NETAD, -1"
GETNET	<ILDB	O* A>
	<JUMPN	O* GETNET>
	<SOJG	C* GETNET>		; "SOS COUNT, CONTINUE"
	<PUSH	TP* <TYPE-WORD STRING>>
	<PUSH	TP* A>
GETNET1	<ILDB	O* A>
	<JUMPE	O* GOTNET>
	<AOS	-1(TP)>
	<JRST	GETNET1>
GOTNET	<MOVEI	A* 1>
	<PUSH	P* D>
	<PUSH	P* E>
	<PUSHJ	P* CISTNG>
	<DPUSH	TP* A>
	<POP	P* E>
	<POP	P* D>
	<ADDI	D* 1>
LNLEND	<AOBJN	E* LNCLOP>
	<MOVEI	A* (D)>
	<PUSHJ	P* CIVEC>		; "MAKE A VECTOR"
	<SKIPGE	-2(TP)>
	 <JRST	LSROUT>
	<DPUSH	TP* A>
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>
	<MCALL	1 CLOSE>
	<POP	TP* B>
	<POP	TP* A>
LSROUT	<SUB	TP* [<(6) 6>]>
	<SUB	P* [<(2) 2>]>
	<JRST	MPOPJ>
LSRLNL	<SKIPGE	-2(TP)>
	 <JRST	[<SUB	TP* [<(6) 6>]>
		 <JRST	LSRLNO>]>
	<MCALL	1 CLOSE>
	<SUB	TP* [<(4) 4>]>
LSRLNO	<MOVSI	A* <TYPE-CODE FALSE>>
	<MOVEI	B* 0>
	<SUB	P* [<(2) 2>]>
	<JRST	MPOPJ>

; "STRING COMPARISON.  ARGUMENT IS NEXT FROM BOTTOM ON TP, FILE STRING ADDRESS
IS IN C.  HAS TO COMPARE A WORD AT A TIME, UNFORTUNATELY.  SKIPS TWICE IF
EQUAL, ONCE IF ARG<FILE.  COMPARISON OF UNSIGNED INTEGERS, SO IN ASCII
ORDER.  HENCE, WE USE SOMETHING VERY LIKE MUDDLE STRCOMP."
STRCMP	<SUBM	M* (P)>
	<PUSH	P* O>
	<PUSH	P* A>
	<PUSH	P* B>
	<PUSH	P* C>
	<PUSH	P* D>
	<HRRZ	A* -5(TP)>
	<MOVE	B* -4(TP)>		; "TARGET STRING"
	<HRLI	C* *440700*>		; "FILE STRING:  ASCIZ"
STRCO2	<SOJL	A* CHOTHE>		; "TARGET EXHAUSTED, CHECK OTHER"
	<ILDB	D* C>
	<JUMPE	D* 1BIG>		; "TARGET STRING>FILE STRING"
	<ILDB	O* B>
	<CAIN	O* (D)>
	 <JRST	STRCO2>
	<CAIL	O* (D)>			; "SKIP IF 2ND BIGGER THAN FIRST"
	 <JRST	1BIG>
	<CAIA>
STRWIN	<SOS	-5(P)>
2BIG	<SOS	-5(P)>
1BIG	<POP	P* D>
	<POP	P* C>
	<POP	P* B>
	<POP	P* A>
	<POP	P* O>
	<JRST	MPOPJ>
CHOTHE	<ILDB	D* C>
	<JUMPN	D* 2BIG>
	<JRST	STRWIN>
	<END>

<ENDPACKAGE>
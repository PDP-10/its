<PACKAGE "DRAGAN">

<ENTRY ANNOTATE>

<USE "LSRHIL" "LSRTNS">

<DEFINE ANNOTATE ("OPT" (IF "DRAGON") (OF .IF) (VERBOSE? T) "AUX" IC OC) 
   #DECL ((IF OF) STRING (VERBOSE?) <OR ATOM FALSE> (IC OC) <OR CHANNEL FALSE>)
   <COND
    (<AND <SET IC <OPEN "READB" .IF>> <SET OC <OPEN "PRINT" .OF>>>
     <PUT .OC 13 132>
     <PRINC ,KEY .OC>
     <PRINC %<ASCII 12> .OC>
     <REPEAT (N n NM S s (OUTCHAN .OC) SLASH?)
	  #DECL ((N n) FIX (NM s) STRING (S) <OR STRING FALSE>
		 (OUTCHAN) <SPECIAL CHANNEL> (SLASH? <OR 'T FALSE>))
	  <COND (<0? <SET N <READSTRING ,BUF .IC
			     %<STRING !\# <ASCII 32> <ASCII 9>
					  <ASCII 13> <ASCII 10>>
			     '<RETURN>>>>
		 <SET n <READSTRING ,BUF .IC %<STRING <ASCII 13>> '<RETURN T>>>
		 <PRINTSTRING ,BUF .OC .n>
		 <READSTRING ,NL .IC>
		 <CRLF>)
		(T
		 <SET NM <SUBSTRUC ,BUF 0 .N>>
		 <COND (<MEMQ !\/ .NM>		;"Is there a Lisp atom kludge?"
			<SET SLASH? <>>
			<SET NM <MAPF ,STRING
				      <FUNCTION (C)
				       <COND (<AND <==? .C !\/> <NOT .SLASH?>>
					      <SET SLASH? T>
					      <MAPRET>)
					     (T <SET SLASH? <>> .C)>>
				      .NM>>)>
		 <PRINTSTRING ,BUF .OC .N>
		 <SET n <READSTRING ,BUF .IC %<STRING <ASCII 13>> '<RETURN T>>>
		 <PRINTSTRING ,BUF .OC .n>
		 <READSTRING ,NL .IC>
		 <COND (<SET S <LSR-ENTRY .NM>>
			<INDENT-TO 72>
			<COND (<EMPTY? <SET s <LSR-EXTRACT .S ,$REL>>>
			       <PRINC !\ >)
			      (T <PRINC .s>)>
			<PRINC !\ >
			<COND (<EMPTY? <SET s <LSR-EXTRACT .S ,$GRP>>>
			       <PRINC !\ >)
			      (T <PRINC .s>)>
			<PRINC !\ >
			<PRINC <FULLNAME .NM>>
			<COND (.VERBOSE? <INFO .S>)>)>
		 <CRLF>)>>
     <CLOSE .OC>)>>

<DEFINE INFO (S "AUX" s (OUTCHAN .OUTCHAN))
	#DECL ((S s) STRING (OUTCHAN) CHANNEL)
	<MAPF <>
	    <FUNCTION (FIELD HDR)
		      #DECL ((FIELD) ATOM (HDR) STRING)
		      <COND (<NOT <EMPTY? <SET s <LSR-EXTRACT .S ,.FIELD>>>>
			     <CRLF>
			     <PRINC .HDR>
			     <PRINC .s>)>>
	    '![$MITA $MITT $HOMA $HOMT
	       $NETA $PROJ $SUPR $REM
	       $AUTH $ALTR!]
	    '["	MIT:	" "		" "	HOME:	" "		"
	      "	NET:	" "	hacking	" "	for	" "	Remarks: "
	      "	Authorization: " "	Entered by: "]>>

<GDECL (BUF NL KEY) STRING>
<SETG BUF <ISTRING 150>>
<SETG NL "
">

<SETG KEY
"									KEY:

									Relation to one's group:
									A - Administrative
									B - Biweekly/Exempt (?)
									C - Customer
									F - Faculty
									G - Graduate Student
									N - None
									O - Other
									P - Publications/Editing
									R - Research Associate
									S - DSR Staff
									U - Undergraduate Student
									|
									| One's group affiliation:
									| A - Artificial Intelligence Lab
									| C - Project MAC 
									| D - Dynamic Modelling
									| H - Actor/Planner Group
									| I - Information Proc. Services
									| L - LOGO Lab
									| M - Mathlab Group
									| N - Non-Consortium Macsyma User
									| O - Programs (e.g. XGP)
									| P - Knowledge Based Systems (AutoProg)
									| R - Architecture Machine Group
									| S - Stanford Visitor
									| T - Tourist/Guest
									| U - Authorized Macsyma User
									| W - MIT-XX Person
									| X - eX-user of ITS
									| Z - Medical Group
									| + - MIT System Wizards
									| < - Very Small Data Bases
									| $ - Non-MIT (NET) Wizards
									| @ - Alias for someone known under another name
									| |
									V V
">

<ENDPACKAGE>

<PACKAGE "PINFO">

<ENTRY PCK-INFO PCK-USES OBL-INFO OSORT>

"PCK-INFO -- takes package-name as string, and whether to look at internal
oblist, prints (sorted), all atoms on the entry oblist (and optionally, the
internal one), and the uses for that package.  Also prints the count of atoms
on the oblist."

<DEFINE PCK-INFO ("OPTIONAL" P (BOTH? <>) "AUX" OL O (PO <GET PACKAGE OBLIST>)
		  (OUTCHAN .OUTCHAN))
	#DECL ((P) STRING (O) <OR OBLIST FALSE> (PO) OBLIST
	       (OUTCHAN) CHANNEL (OL) <OR LIST FALSE> (BOTH?) <OR ATOM FALSE>)
	<COND (<NOT <ASSIGNED? P>>
	       <PRIN1 <OBL-INFO .PO T>>)
	      (<SET OL <PCK-OBLIST .P .PO>>
	       <CRLF>
	       <COND (<==? <SET O <2 .OL>> <ROOT>>
		      <PRINC "RPACKAGE ">
		      <PRINC .P>
		      <CRLF>
		      <PCK-USES-INT .OL>
		      <CRLF>
		      <PRINC "[Entries are on <ROOT>]">)
		     (ELSE
		      <PRINC "PACKAGE ">
		      <PRINC .P>
		      <CRLF>
		      <PCK-USES-INT .OL>
		      <PRIN1 <OBL-INFO .O>>)>
	       <COND (<NOT .BOTH?>)
		     (ELSE
		      <CRLF>
		      <PRIN1 <OBL-INFO <1 .OL>>>)>)
	      (ELSE
	       <PRINT .P>
	       <PRINC "[No such PACKAGE]">)>
	,NULL>

"PCK-USES -- prints the names of packages used by a given package"

<DEFINE PCK-USES (P "AUX" OL)
	#DECL ((P) STRING (OL) <OR FALSE LIST>)
	<COND (<SET OL <PCK-OBLIST .P>>
	       <PCK-USES-INT .OL>)
	      (ELSE #FALSE ("NO SUCH PACKAGE"))>>

"OBL-INFO -- takes an oblist and prints the atoms on it and what they
are (g)assigned to.  Returns the number of atoms on the oblist."

<DEFINE OBL-INFO (OB "OPTIONAL" (USES? <>) "AUX" O (OUTCHAN .OUTCHAN) (L 0) N)
	#DECL ((OB) OBLIST (O) UVECTOR (OUTCHAN) CHANNEL (L N) FIX)
	<MAPF <>
	      <FUNCTION (A)
		   #DECL ((A) ATOM)
		   <AND <G? <SET N <LENGTH <SPNAME .A>>> .L>
			<SET L .N>>>
	      <SET O <OSORT .OB>>>
	<SET L <MIN <+ .L 4>>>
	<PRINT <GET .OB OBLIST>>
	<PRINC "Oblist:">
	<MAPF <>
	      <FUNCTION (A)
		   #DECL ((A) ATOM)
		   <CRLF>
		   <PRINC "  ">
		   <PRINC .A>
		   <COND (<AND .USES? <GASSIGNED? .A>>
			  <INDENT-TO .L>
			  <PCK-USES-INT ,.A T>)
			 (<GASSIGNED? .A>
			  <INDENT-TO .L>
			  <PRINC "Gassigned ">
			  <PRIN1 <TYPE ,.A>>)
			 (<ASSIGNED? .A>
			  <INDENT-TO .L>
			  <PRINC "Assigned ">
			  <PRIN1 <TYPE ..A>>)>>
	      .O>
	<CRLF>
	<LENGTH .O>>

"OSORT -- takes an oblist, and returns a uvector of the atoms on it, sorted
by pname."

<DEFINE OSORT (O "AUX" A A1 A2 (CHG? <>) X)
	#DECL ((O) <PRIMTYPE UVECTOR> (VALUE A A1 A2) <UVECTOR [REST ATOM]>
	       (X) ATOM (CHG?) <OR ATOM FALSE>)
	<COND (<NOT <EMPTY? <SET A
				 <MAPF ,UVECTOR
				       <FUNCTION (X)
					    #DECL ((X) <LIST [REST ATOM]>)
					    <MAPRET !.X>>
				       .O>>>>
	       <SET A1 .A>
	       <SET A2 <REST .A>>
	       <REPEAT ()
		       <COND (<EMPTY? .A2>
			      <COND (.CHG?
				     <COND (<EMPTY? <SET A1 <REST .A1>>>
					    <RETURN .A>)>
				     <SET A2 <REST .A1>>
				     <SET CHG? <>>)
				    (ELSE <RETURN .A>)>)
			     (<1? <STRCOMP <1 .A1> <1 .A2>>>
			      <SET X <1 .A1>>
			      <PUT .A1 1 <1 .A2>>
			      <PUT .A2 1 .X>
			      <SET CHG? T>)
			     (ELSE
			      <SET A2 <REST .A2>>)>>)>>

<DEFINE PCK-OBLIST (P "OPTIONAL" (PO <GET PACKAGE OBLIST>) "AUX" N OL)
	#DECL ((P) STRING (PO) OBLIST (N) <OR ATOM FALSE> (OL) ANY)
	<AND <SET N <LOOKUP .P .PO>>
	     <GASSIGNED? .N>
	     <TYPE? <SET OL ,.N> LIST>
	     <NOT <LENGTH? .OL 1>>
	     .OL>>

<DEFINE PCK-USES-INT (OL "OPTIONAL" (SH <>) "AUX" (C <>) (OUTCHAN .OUTCHAN))
	#DECL ((OL) LIST (SH C) <OR ATOM FALSE> (OUTCHAN) CHANNEL)
	<COND (<SET OL <MEMQ <ROOT> .OL>>
	       <MAPF <>
		     <FUNCTION (O)
			  #DECL ((O) OBLIST)
			  <COND (<==? .O <ROOT>>)
				(ELSE
				 <COND (.C <PRINC ", ">)
				       (ELSE <PRINC "  Uses:  ">)>
				 <PRINC <GET .O OBLIST>>
				 <SET C T>)>>
		     <REST .OL>>
	       <OR .SH .C <PRINC "  Uses nothing.">>)>
	,NULL>

<ENDPACKAGE>

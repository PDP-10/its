	.TITLE PDP11 LOGO

.IF NDF PASS2

.MACRO DC A,B
A=B
.ENDM

.MACRO DCS A,B
A=B
.ENDM
;DECIDE ON SITS, UNIX OR LSI
   .IF NDF LSI
     .IF NDF SITS
         .IF NDF UNIX
            DC UNIX,0		;IF NOTHING DEFINED, SITS VERSION
            DC SITS,1
            DC LSI,0
          .IFF
            DC SITS,0		;UNIX IS DEFINED, ZERO SITS AND LSI
            DC LSI,0
         .ENDC
      .IFF
         DC LSI,0		;SITS IS DEFINED, ZERO LSI AND UNIX
         DC UNIX,0
     .ENDC
    .IFF
      DC SITS,0			;LSI IS DEFINED, ZERO SITS AND UNIX
      DC UNIX,0
   .ENDC
.ENDC

;This used to be in the IF Z UNIX, with a null macro in UNIX.  Why?
	.MACRO VERSIO
	.IIF NDF VERNF,VERNF==0
	.IIF NDF PASS2,VERNF==VERNF+%FNAM2
	.ENDM

.IF Z UNIX
	%COMPAT==0
	.ABS
	.MACRO DC VAR,VAL
	VAR==VAL
	.ENDM
	.MACRO DCS VAR,VAL
	VAR==VAL
	.ENDM
  .IFF
	.ASECT
	.MACRO DC VAR,VAL
	VAR=VAL
	.ENDM
.ENDC

	.SBTTL MACROS

VERSIO



A=%0
B=%1
C=%2
D=%3
E=%4
F=%5
U=%5
P=%6
SP=%6
PC=%7


DC FA,%0
DC FB,%1
DC FC,%2
DC FD,%3
DC FE,%4
DC FF,%5

DC EOFCHR,3
DC ERROR,200+TRAP

.XCREF A,B,C,D,E,F,P,PC,FA,FB,FC,FD,FE,FF

.MACRO SAVE THINGS
	.IRP  X,<THINGS>
		.IFB X
			TST -(P)
		.IFF
			.IF IDN X,#0
				CLR -(P)
			.IFF
				MOV X,-(P)
			.ENDC
		.ENDC
	.ENDM
.ENDM

.MACRO REST THINGS
	.IRP X,<THINGS>
		.IF B X
			TST (P)+
		.IFF
			MOV (P)+,X
		.ENDC
	.ENDM
.ENDM



.MACRO BRAKET
	TST BRAKE
	BEQ .+4
	ERROR+BRK
.ENDM

.MACRO PUSH ITEM
	MOV ITEM,-(P)
	JSR PC,PPUSHT
.ENDM

.MACRO POP ITEM
	MOV (P)+,ITEM
	JSR PC,PPOPT
.ENDM

.MACRO PUSHS ITEM
	JSR PC,SPUSHT
	MOV ITEM,@S
.ENDM

.MACRO POPS ITEM
	MOV @S,ITEM
	JSR PC,SPOPT
.ENDM

.MACRO SPUSH ITEM
	MOV ITEM,-(P)
.ENDM

.MACRO SPOP ITEM
	MOV (P)+,ITEM
.ENDM

.MACRO SPUSHS ITEM
	SUB #2,S
	MOV ITEM,@S
.ENDM

.MACRO SPOPS ITEM
	MOV @S,ITEM
	ADD #2,S
.ENDM


.MACRO PRTXT TEX
	JSR A,ERTAS
	.ASCIZ ÔEXŠ	.EVEN
.ENDM

.MACRO CPRTXT TEX
	JSR A,ERTAS
	.BYTE 15
	.ASCIZ ÔEXŠ	.EVEN
.ENDM

.MACRO PRTXTC TEX
	JSR A,ERTAS
	.ASCII ÔEXŠ	.BYTE 15,0
	.EVEN
.ENDM

.MACRO PAD A,B
	.PRINT Á B
Š.ENDM

.MACRO PRCR
	JSR PC,.CRLF
.ENDM

.MACRO SPACE
	JSR PC,.SPACE
.ENDM

.MACRO REPT1 A,B
	.REPT A
		B
	.ENDR
.ENDM

.MACRO EXCH LOC1,LOC2
	MOV LOC1,EXCH1
	MOV LOC2,LOC1
	MOV EXCH1,LOC2
.ENDM

.MACRO NODE A,B
DC $.,$$+1
	A
	B
DC $$,$$+1
.ENDM


.MACRO CONS A,B,C
	A'B'C'
.ENDM



;THESE DO CONDITIONALIZED LANGUAGE ASSEMBLIES OF THE FORM
;	STLANC
;	ENGINS <ENGLISH INSTRUCTION>
;	ENGINS <ENGLISH INSTRUCTION>
;	. . .
;	ENDENG
;	FRINS <FRENCH INSTRUCTION>
;	FRINS <FRENCH INSTRUCTION>
;	ENDLAN

DC LGNSYM,0

.MACRO STLANC
.IFNZ ENG&FR
	BIT #PFRFLG,LANG
	CONS <BNE >,LS,\LGNSYM
.ENDC
.ENDM

.MACRO ENDENG
.IFNZ ENG&FR
	CONS <BR >,LS,\<LGNSYM+1>
	CONS LS,\LGNSYM,::
.ENDC
.ENDM

.MACRO ENDLAN
.IFNZ ENG&FR
	CONS LS,\LGNSYM+1,::
	DC LGNSYM,LGNSYM+2
.ENDC
.ENDM

.MACRO ENGINS INS
	.IIF NZ ENG,INS
.ENDM

.MACRO FRINS INS
	.IIF NZ FR,INS
.ENDM


.MACRO SDPADD HIGH1,LOW1,HIGH2,LOW2
.IFNB LOW1
	ADD	LOW1,LOW2
	ADC	HIGH2
.ENDC
.IFNB HIGH1
	ADD	HIGH1,HIGH2
.ENDC
.ENDM

.MACRO SDPSUB HIGH1,LOW1,HIGH2,LOW2
.IFNB LOW1
	SUB	LOW1,LOW2
	SBC	HIGH2
.ENDC
.IFNB HIGH1
	SUB	HIGH1,HIGH2
.ENDC
.ENDM

.MACRO VERR
.IFLE .-.VERR-127.
	BVS	.VERR
.ENDC
.IFG .-.VERR-127.
	BVC	.+4
	DC .VERR,.
	ERROR+RTB
.ENDC
.ENDM

.MACRO DPADD HIGH1,LOW1,HIGH2,LOW2
.IFNB LOW1
	ADD	LOW1,LOW2
	ADC	HIGH2
	VERR
.ENDC
.IFNB HIGH1
	ADD	HIGH1,HIGH2
	VERR
.ENDC
.ENDM

.MACRO DPSUB HIGH1,LOW1,HIGH2,LOW2
.IFNB LOW1
	SUB	LOW1,LOW2
	SBC	HIGH2
	VERR
.ENDC
.IFNB HIGH1
	SUB	HIGH1,HIGH2
	VERR
.ENDC
.ENDM

.MACRO DPCLR HIGH,LOW
	CLR	HIGH
	CLR	LOW
.ENDM

.MACRO DPINC HIGH,LOW
	DPADD ,#1,HIGH,LOW
.ENDM

.MACRO DPDEC HIGH,LOW
	DPSUB ,#1,HIGH,LOW
.ENDM

.MACRO DPNEG HIGH,LOW
	NEG LOW
	ADC HIGH
	NEG HIGH
.ENDM

.MACRO NOP NUM
	.IFG NUM
	BR .+<NUM*2>
	NOP <NUM-1>
	.ENDC
.ENDM


title Babyl -- Standalone Babyl Job

a=:1
b=:2
c=:3
d=:4
j=:5
o=:6
ch=:7
p=:17

jclbuf: block 20  ; Give us 16. x 5 = 80. chars of JCL space
        -1        ; Tell DDT this is end of buffer

njcl1:	asciz \=1l sys2;ts neî:jcl 1,m(m.mRun Library)Babyl\
njcl2:	asciz \w 164000.fsexitî0g:vp \

outbuf: block 40  ; Output buffer space

babyl:	.break 12,[..RJCL,,JCLBUF]	; Read JCL
	move o,[440700,,OUTBUF]		; Byte-pointer to output buffer in O

initj:	move j,[440700,,NJCL1]		; Byte-pointer to initial JCL in J
initj1: ildb ch,j			; Get char into CH from J
	cain ch,^@			; If null char,
         jrst getj			;  Go to phase 2 of jcl setup
	idpb ch,o			; Put char into output area
	jrst initj1			; Loop

getj:	move j,[440700,,JCLBUF]		; Byte-pointer to JCL in J
getj1:	ildb ch,j			; Load char from JCLBUF into CH
	caie ch,^M			; Exit if carriage return
	 cain ch,^@			;  or null character is seen
	  jrst termj			;  then go to next phase
	idpb ch,o			; Write to output buffer
	jrst getj1			; Loop

termj:	move j,[440700,,NJCL2]		; Byte-pointer to terminating JCL in J
termj1:	ildb ch,j			; Get char into CH from J
	cain ch,^@			; If null char,
	 jrst endj			;  Go set jcl
	idpb ch,o			; Put char into output area
	jrst termj1			; Loop

endj:   movei ch,^@			; Put a null in to end ASCIZ
	idpb ch,o			; Deposit it

reload:	.value outbuf			; Return string to DDT
	.logout 1,			; Die if we ever get to here!

end babyl

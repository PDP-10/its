;;; -*- LISP -*-
;;;
;;; Library WRDLIB
;;;
;;; This file contains useful functions for manipulating atoms
;;; conceptually as text ('letters' and 'words') in MacLISP.
;;;
;;; Functions defined are:
;;;
;;; Ascii/Numeric Conversions
;;;
;;;  CVTN - Convert to Numeric
;;;  CVTA - Convert to Ascii
;;;
;;; Upper/Lower Case Conversions
;;;
;;;       Name          Input          Output
;;;       ----          -----          ------
;;;     CAPS           Generic    Same as input, Capitalized
;;;     SMALLS         Generic    Same as input, Lowercasified
;;;     CAPS-A2A       Ascii      Capitalized Ascii
;;;     SMALLS-A2A     Ascii      Lowercasified Ascii
;;;     CAPS-A2N       Ascii      Capitalized Numeric
;;;     SMALLS-A2N     Ascii      Lowercasified Numeric
;;;     CAPS-N2A       Numeric    Capitalized Ascii
;;;     SMALLS-N2A     Numeric    Lowercasified Ascii
;;;     CAPS-N2N       Numeric    Capitalized Numeric
;;;     SMALLS-N2N     Numeric    Lowercasified Numeric
;;;
;;; Typing Predicates
;;;
;;;  CONTROL? - Returns T if arg is control char
;;;  ALPHABETIC? - Returns T if arg is an alphabetic char
;;;  DIGIT? - Returns T if arg is a digital char
;;;
;;; Word Operations
;;;
;;;  UPPERCASIFY - Convert a word to all upper case
;;;  LOWERCASIFY - Convert a word to all lower case
;;;  CAPITALIZE - Convert a word to all lower case except first char
;;;
;;;  BUILD - Merge several atoms into a single atom
;;;

;;;;;;;;;;;;;;;;;;;;;;;;; Numeric/Ascii Conversion ;;;;;;;;;;;;;;;;;;;;;;;;;

;;; CVTN: Convert to Numeric (from Ascii)

(DEFUN CVTN (X) (GETCHARN X 1.))

;;; CVTA: Convert to Ascii (from Numeric)

(DEFUN CVTA (X) (ASCII X))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Case Conversion ;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Generic Functions

(DEFUN SMALLS (X)
       (COND ((NUMBERP X) (SMALLS-N2N X))
	     (T (SMALLS-A2A X))))

(DEFUN CAPS (X)
       (COND ((NUMBERP X) (CAPS-N2N X))
	     (T (CAPS-A2A X))))

;;; Specialized Functions

(DEFUN CAPS-A2A (X) (CVTA (CAPS-N2N (CVTN X))))

(DEFUN SMALLS-A2A (X) (CVTA (SMALLS-N2N (CVTN X))))

(DEFUN CAPS-A2N (X) (CAPS-N2N (CVTN X)))

(DEFUN SMALLS-A2N (X) (SMALLS-N2N (CVTN X)))

(DEFUN CAPS-N2A (X) (CVTA (CAPS-N2N X)))

(DEFUN SMALLS-N2A (X) (CVTA (SMALLS-N2N X)))

(DEFUN CAPS-N2N (X)
       (COND ((AND (> X 96.) (< X 123.)) (- X 32.))
	     (T X)))

(DEFUN SMALLS-N2N (X)
       (COND ((AND (> X 64.) (< X 91.)) (+ X 32.))
	     (T X)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Character Type ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; CONTROL?
;;;  Predicate returns T if arg represents a control-character. Accepts
;;;  string or numeric arg. Control-chars are defined here as any char
;;;  with an ascii value lower than a SPACE.

(DEFUN CONTROL? (C)
       (COND ((NUMBERP C) (< C 32.))
	     (T (CONTROL? (GETCHARN C 1.)))))

;;; ALPHABETIC?
;;;  Predicate returns T if arg represents an alpha character. Accepts
;;;  string or numeric arg.

(DEFUN ALPHABETIC? (C)
       (COND ((NUMBERP C)
	      (OR
	       (AND (> C 64.) (< C 91.)) ; A <= C <= Z
	       (AND (> C 96.) (< C 123.))))
	     (T (ALPHABETIC? (GETCHARN C 1.)))))

;;; DIGIT?
;;;  Predicate returns T if arg represents a digital character. Accepts
;;;  string or numeric arg.

(DEFUN DIGIT? (N)
       (COND ((NUMBERP N) (AND (> N 47.) (< N 58.))) ; 0 <= N <= 9
	     (T (DIGIT? (GETCHARN N 1.)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Word Commands ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; UPPERCASIFY
;;;  Uppercasify a word. (put all letters in upper case)

(DEFUN UPPERCASIFY (X) (IMPLODE (MAPCAR 'CAPS (EXPLODEC X))))

;;; LOWERCASIFY
;;;  Lowercasify a word. (put all letters in lower case)

(DEFUN LOWERCASIFY (X) (IMPLODE (MAPCAR 'SMALLS (EXPLODEC X))))

;;; CAPITALIZE
;;;  Capitalize a word. (put first char in upper case, all others 
;;;  in lower case)

(DEFUN CAPITALIZE (X)
       ((LAMBDA (CHARS)
		(IMPLODE (CONS (CAPS (CAR CHARS))
			       (MAPCAR 'SMALLS (CDR CHARS)))))
	(EXPLODEC X)))

;;; BUILD
;;;  Takes an arbitrary number of arguments. Returns an atom that has
;;;  the same printname as all of the args pushed together.

(DEFUN BUILD N (IMPLODE (APPLY 'APPEND (MAPCAR 'EXPLODEN (LISTIFY N)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Tag the library as having been loaded once successfully

(PUTPROP 'WRDLIB T 'LOADED)

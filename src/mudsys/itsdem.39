TITLE DEM FOR ITS

ITS==1

.MLLIT==1

.SYMTAB 10000 10000

.INSRT SYSTEM;FSDEFS >


FATINS==.VALUE

P=17				; STACK POINTER
A=1
B=2
C=3
D=4
E=5
F=6
A1=11				; ARGUMENTS ARE PASSED IN THE Ax REGISTERS
A2=12
A3=13
A4=14
A5=15
A6=16
DMPDAT==3			; DATE TO DO DUMPING (TENTATIVELY WED)
AUTO==0				; DON'T AUTOMATICALLY MAINTAIN DUMP BIT
PAGE==2000
ROUND==1777
FROUND==377
MINLEN==-2			; FACTOR TO SHIFT OUT FIXUP PAGES
FIXLNT==4
PGSZ==10.			; PAGE SIZE
DIRS==0				; OFFSET IN MAIN DIRECTORY BUFFER TO # OF DIRS
BUFLNT==400			; LENGTH OF BUFFERS

FME==1000,,-1
FLS==1000,,0
RDTP==1000,,10000		; READ ONLY AND COMPLAIN
WRTP==1000,,100000
CWTP==1000,,104000
CRJB==1000,,400001

IMAPCH==0			; INPUT MAPPING CHANNEL (READ ONLY)
OMAPCH==1			; OTHER MAPPING CHANNEL
SCHAN==2			; SCRIPT CHANNEL
RCHAN==3			; READ CHANNEL FOR COMMAND FILES
WCHAN==4			; WRITE CHANNEL TO CREATE COMMAND FILE
TCHAN==5			; TEMPORARY CHANNEL TO SEE IF FILES EXIST, ETC..
STCHAN==6
CPYCHN==7			; CHANNEL USED TO COPY FILE
LKCHN==8
PDLNT==400			; LENGTH OF PDL

CARRET==15			; CARRIAGE RETURN
%PIPDL==200000			; INT MASK FOR PDL OVERFLOW
%PIIOC==400			; INT MASK FOR IOC
%MNDBT==270400
%DATBT==220500




; THIS GROUP OF MACROS TO DO DOTCAL AND FATAL WERE TAKEN FROM MUDDLE >

.GSSET 4

DEFINE HERE G00002,G00003
G00002!G00003!TERMIN

DEFINE RMT A
HERE [DEFINE HERE G00002,G00003
G00002!][A!G00003!TERMIN]
TERMIN

DEFINE DOTCAL NM,LIST,\LOCN
	.CALL LOCN
	RMT [LOCN==.
		SETZ
		SIXBIT /NM/
		IRP Q,R,[LIST]
			IFSN [R][][Q
			]

			IFSE [R][][<SETZ>\<Q>
			]
		TERMIN
		]
TERMIN

; MACRO TO HANDLE FATAL ERRORS

DEFINE FATAL MSG/
	FATINS	[ASCIZ /: FATAL ERROR MSG î/]
	TERMIN

EQUALS E.END END
EXPUNGE END

DEFINE END ARG
	EQUALS END E.END
	EXPUNGE E.END
	CONSTANTS

	VARIABLES
	HERE
	.LNKOT
	TOPB==.+1777
	END ARG
	TERMIN


UUOH:
LOC 41
	JSR	UUOH
LOC UUOH
	0
	LDB	AA,[%UUO,,40]			; GET UUO
	JRST	@UUOTBL(AA)			; DISPATCH OVER UUO
EUUOH:	JRST	@UUOH				; EXIT




LOC 2000

; VERY SIMPLE INTERRUPT HANDLER TO HANDLE PDL OVERFLOW AND IOC

TSINT:
LOC 42
	TSINT
LOC TSINT
	0
	0
	EXCH	A,TSINT
	TRNE	A,%PIPDL		; SKIP IF NOT PDL OVERFLOW
	FATAL	PDL OVERFLOW
	TRNN	A,%PIIOC
	FATAL	INTERRUPT NOT HANDLED
	MOVEM	B,TSAVB
	.SUSET	[.RBCHN,,B]
	CAIE	B,SCHAN			; SKIP IF SCRIPT CHANNEL
	JRST	BADIOC
	SETOM	SCTFLG			; TURN OFF SCRIPTING
RETR:	EXCH	A,TSINT
	MOVE	B,TSAVB
	.DISMIS	TSINT+1
BADIOC:	FATAL	IOC ON NON-SCRIPT CHANNEL
	SOS	TSINT+1			; SOS THE PC
	JRST	RETR

; DUMP BIT HACKERS

%CKDMP:
IFN AUTO,[
	DOTCAL	RDMPBT,[[1000,,IMAPCH],[2000,,A]]
	FATAL	RDMPBT FAILED
	JUMPN	A,CDMP1			; HAS BEEN DUMPED
	SETOM	NOMUNG
	SETOM	NOFILE 
	POPJ	P,
CDMP1:	.RLPDT	A,			; DETERMINE WHETHER TO TURN OFF DUMP BIT
	LDB	A,[320300,,B]
	CAIN	A,DMPDAT
	JRST	CDMP2
	OPEN	TCHAN,[READ?WRKDIR?[SIXBIT /DUMP/]?[SIXBIT /BIT/]]
	JRST	CNTOPN
	DOTCAL	FILBLK,[[1000,,TCHAN],[2000,,0],[2000,,1],[2000,,2],[2000,,3]]
	FATAL	FILBLK FAILED
	CLOSE	TCHAN,
	MOVE	A1,C
	DOTCAL	RQDATE,[[2000,,0],[2000,,1]]
	FATAL	RQDATE FAILED
	MOVE	A2,0
	PUSHJ	P,DAYS
	CAIG	A,7
	JRST	CDMPN			; NOT G? 7 DAYS
CDMP2:	OPEN	TCHAN,[WRITE?WRKDIR?[SIXBIT /DUMP/]?[SIXBIT /BIT/]]
	JRST	CNTOPN
	CLOSE	TCHAN,
	SETOM	NOMUNG
	SETOM	CSFILE			; RENAME CSFILE
CDMPN:	POPJ	P,
]
IFE AUTO,[
	SETZM	NOMUNG			; ALWAYS TURN OF DUMP BIT
	OPEN	TCHAN,[READ?WRKDIR?[SIXBIT/DELETE/]?[SIXBIT/FILES/]]
	JRST	STOPIT
	CLOSE	TCHAN,
	DELETE 	[WRKDIR?[SIXBIT/DELETE/]?[SIXBIT/FILES/]]
	JFCL
	POPJ	P,
STOPIT:	SETOM	NOFILE			; DON'T FOOL AROUND WITH ADDED FILES
	POPJ	P,
]

; ROUTINE TO FIGURE OUT THE NUMBER OF DAYS BETWEEN ARG1 AND ARG2.  ITS ARGUMENTS ARE IN
; THE FORMAT OF RQDATE GIVEN ABOVE.  A1 IS BEFORE A2 (HOPEFULLY).

DAYS:	LDB	A,[%MNDBT,,A1]		; GET MONTH BIT OF FIRST ARG
	LDB	B,[%MNDBT,,A2]		; GET MONTH BIT OF 2ND ARG
	CAIE	A,(B)			; ARE THEY EQUAL
	JRST	DIFMNT			; MONTHS ARE DIFFERENT
	LDB	A,[%DATBT,,A2]		; GET DATE BITS
	LDB	B,[%DATBT,,A1]
	SUBI	A,(B)			; # OF DAYS DIFFERENT
	POPJ	P,
DIFMNT:	MOVE	A,MONTH(A)		; GET # OF DAYS IN MONTH
	LDB	B,[%DATBT,,A1]		; GET DATE BITS
	SUBI	A,(B)			; GET NUMBER OF DAYS DIFFERENT
	LDB	B,[%DATBT,,A2]		; GET DATE BITS
	ADDI	A,(B)			; TOTAL # OF DAYS
	POPJ	P,

; NUMBER OF DAYS IN EACH MONTH

RADIX	10.
MONTH:	0
	31	; JAN.
	28	; FEB.
	31	; MAR.
	30	; APR.
	31	; MAY
	30	; JUNE
	31	; JUL.
	30	; AUG.
	31	; SEPT.
	31	; OCT.
	30	; NOV.
	31	; DEC.	

RADIX 8.


%SDMPB:	DOTCAL	SDMPBT,[[1000,,IMAPCH],[1000,,1]]
	FATAL	SDMPBT CALL FAILED
	POPJ	P,



MASK1:	%PIPDL+%PIIOC			; INTERRUPT MASK

%CKLK:	OPEN	LKCHN,[WRITEO?[SIXBIT /MUDSAV/]?[SIXBIT /LOCK/]?[SIXBIT /MUDSAV/]]
        SKIPA
        POPJ	P,
	.VALUE	[ASCIZ/:FILE LOCKED:KILL	/]

	

%DATE:	.RDATE	A1,
	POPJ	P,

%TIME:	.RTIME	A1,			; GET TIME
	POPJ	P,

%INTST:	.SUSET	[.SMASK,,MASK1]
	POPJ	P,

%FINIS:	CLOSE	LKCHN,
	.LOGOUT	1,
	POPJ	P,


INIT:	PUSHJ	P,%CKLK
	POPJ	P,




; ROUTINE TO DELET THE SAVE DIRECTORY


DELDIR:	OPEND	CPYCHN,[SAVDIR]
LOPDIR:	GETF	CPYCHN,A1
	JRST	DONDIR
	CAME	A1,[SIXBIT /SAVED/]
	JRST	DELIT
	CAMN	A2,[SIXBIT /FILES/]
	JRST	LOPDIR
DELIT:	OPEN	CPYCHN,[READ?SAVDIR?A1?A2]
	JRST	DONDIR
	DOTCAL	RDMPBT,[[1000,,CPYCHN],[2000,,B]]
	FATAL	RDMPBT FAILED
	JUMPE	B,LOPDIR
	CLOSE	CPYCHN,
	DELETE	[SAVDIR?A1?A2]
	JFCL
	JRST	LOPDIR
DONDIR:	CLOSE	CPYCHN,
	POPJ	P,


; ROUTINES USED TO SIMULATE SYSTEM CALLS FOR THE DEM PROGRAM.
; DEFINITIONS

%AC==270400
%UUO==330900
%STATUS==220600


AA=7
BB=10

READ==6				; READ ACCESS
WRITE==7			; WRITE ACCESS
READC==0			; READ ASCII ACCESS
WRITEO==100007			; WRITEOVER MODE


READP==10000			; GIVE PAGE READ ONLY ACESS
WRITP==100000			; GIVE PAGE BOTH READ/WRITE ACCESS
CWRITP==104000			; GIVE PAGE COPY/WRITE ACCESS

CREATE==1			; CODE TO CREATE CORE
FLUSH==2			; CODE TO FLUSH CORE

;SETUP UUO DISPATCH TABLE HERE

UUOTBL:	ILLUUO

IRP UUOS,,[[OPEN,DOPEN],[CLOSE,DCLOSE],[FILLEN,DFILLE],[RENNAM,DRENAM],[RENAMC,DRENMC]
[DELETE,DDELET],[ACCESS,DACCES],[OUTPUT,DOUTPU],[INPUT,DINPUT],[ICHAR,DICHAR]
[OPEND,DOPEND],[GETF,DGETF],[STARTB,DSTRTB],[MAPIN,DMAPIN],[MAPOUT,DMAPOU]
[PGDUMP,DPGDUM],[RFNAM,DRFNAM],[CORE,DCORE]]


UUFOO==.IRPCNT+1
IRP UUO,DISP,[UUOS]
.GLOBAL UUO
UUO=UUFOO_33
DISP
.ISTOP
TERMIN
TERMIN

REPEAT 100-UUFOO,[ILLUUO
]

ILLUUO:	FATAL ILLEGAL UUO


; OPEN CH,[MODE SNM NM1 NM2]
; MODE IS THE MODE TO OPEN IT IN (READ WRITE READC)
; SNM POINTS TO THE NAME
; NM1,NM2 POINT TO THE FIRST AND SECOND NAME RESPECTIVELY
; UUOS USE REGISERS AA AND BB

DOPEN:	LDB	AA,[%AC,,40]		; GET CHANNEL NUMBER
	HRL	AA,@40			; GET FIRST ARGUMENT (MODE)
	HRRZ	BB,40
	DOTCAL	OPEN,[AA,DSK,@2(BB),@3(BB),@1(BB)]
	JRST	CCHAN
AEUUOH:	AOS	UUOH			; AOS RETURN POINTER
	JRST	EUUOH			; EXIT

CCHAN:	HRRZS	AA			; CLEAR CHANNEL IN A
	DOTCAL	STATUS,[AA,[2000,,BB]]
	FATAL	STATUS FAILED
	LDB	AA,[%STATUS,,BB]		; GET STATUS BITS
	CAIE	AA,5			; DIRECTORY FULL
	CAIN	AA,4			; SKIPE IF FNF
	JRST	EUUOH
	CAIN	AA,23			; FILE LOCKED
	JRST	EUUOH
	JRST	DOPEN

; CLOSE CH,
; CLOSE CHANNEL # CH

DCLOSE:	LDB	AA,[%AC,,40]
	DOTCAL	CLOSE,[AA]		; CLOSE A
	FATAL	CLOSED FAILED
	JRST	EUUOH

; FILLEN CH,ADDR
; DOES A FILE-LENGTH AND WRITES RESULT INTO ADDR

DFILLE:	LDB	AA,[%AC,,40]
	HRRZ	BB,40
	DOTCAL	FILLEN,[AA,[2000,,@BB]]
	FATAL	FILLEN FAILED
	JRST	EUUOH

; RENNAM [SNAME FN1 FN2 NFN1 NFN2]

DRENAM:	HRRZ	BB,40
	DOTCAL	RENAME,[DSK,@1(BB),@2(BB),@(BB),@3(BB),@4(BB)]
	JRST	EUUOH
	JRST	AEUUOH


; RENAMC CH,[FN1 FN2]

DRENMC:	LDB	AA,[%AC,,40]
	HRRZ	BB,40
	DOTCAL	RENMWO,[AA,@(BB),@1(BB)]
	JRST	EUUOH
	JRST	AEUUOH

; DELETE [SNM FN1 FN2]

DDELET:	HRRZ	BB,40
	DOTCAL	DELETE,[DSK,@1(BB),@2(BB),@(BB)]
	JRST	EUUOH
	JRST	AEUUOH

; ACCESS CH,ADDR
; ADDR POINTS TO THE LENGTH

DACCES:	LDB	AA,[%AC,,40]		; GET CHNUM
	HRRZ	BB,40
	DOTCAL	ACCESS,[AA,(BB)]
	FATAL	ACCESS FAILED
	JRST	EUUOH

; OUTPUT DOES A BLOCK IOT
; OUTPU [CH,LENGTH]

DOUTPU:	HRRZ	BB,40			; GET ADDR
	MOVE	AA,@1(BB)		; GET IOT POINTER
	DOTCAL	IOT,[@(BB),AA]
	FATAL	IOT FAILED
	JRST	EUUOH

; INPUT DOES BLOCK INPUT AND SKIPS IF NOT EOF

DINPUT:	HRRZ	BB,40			; GET ADDR
	MOVE	AA,@1(BB)		; GET IOT POINTER
	DOTCAL	IOT,[@(BB),AA]
	FATAL	IOT FAILED
	SKIPL	AA			; SKIP IF EOF
	JRST	AEUUOH			; SKIP RETURN NOT EOF
	JRST	EUUOH

; ICHAR READS IN A CR AND SKIPS IF EOF
; ICHAR [CH,LOC]

DICHAR:	HRRZ	AA,40
	DOTCAL	IOT,[@(AA),BB]
	FATAL	IOT FAILED
	SKIPGE	BB			; IS CHARATER -1,,3
	JRST	EUUOH
	MOVEM	BB,@1(AA)		; STORE CHAR
	JRST	AEUUOH

; OPEND CH,[SNAME]
; OPENS A DIRECTORY FOR READING IN FILE NAMES
; FILE NAMES CAN BE GOTTEN BY DOING GETFS

DOPEND:	LDB	AA,[%AC,,40]
	HRRZ	BB,40
	HRLI	AA,6
CRETR:	DOTCAL	OPEN,[AA,DSK,[[SIXBIT /.FILE./]],[[SIXBIT /(DIR)/]],@(BB)]
	JRST	COPN
	MOVE	BB,[-2000,,DIRBUF]	; IOT IN DIRECTORY
	DOTCAL	IOT,[AA,BB]
	FATAL	DIRECTORY IOT FAILED
	DOTCAL	CLOSE,[AA]
	FATAL	CLOSE FAILED
	MOVE	AA,UDNAMP+DIRBUF		; GET POINTER TO NAME AREA
	ADDI	AA,DIRBUF		; ESTABLIST REAL POINTER
	MOVEM	AA,DIRPTR		; SAVE DIRECTORY POINTER
	JRST	EUUOH

COPN:	PUSH	P,AA
	PUSH	P,BB			; SAVE ACS
	HRRZS	AA
	DOTCAL	STATUS,[AA,[2000,,BB]]
	LDB	AA,[%STATUS,,BB]		; READ STATUS BITS
	CAIN	AA,4			; SEE IF FAILED
	FATAL	CANT OPEN DIRECTORY
	POP	P,BB			; RESTORE ACS AND RETRY
	POP	P,AA
	JRST	RETR

; GETF GETS A FILE FROM A DIRECTORY AND SKIPS IF DONE
; GETF CH,LOC

DGETF:	MOVE	AA,DIRPTR		; GET DIRECTORY POINTER
	CAIL	AA,DIREND		; ARE WE AT END
	JRST	EUUOH
	HRRZ	BB,40			; GET DUMPING LOC
	PUSH	P,AA
	ADDI	AA,LUNBLK
	MOVEM	AA,DIRPTR
	MOVE	AA,@(P)			; GET FIRST NAME
	MOVEM	AA,(BB)			; STORE IT
	POP	P,AA
	MOVE	AA,1(AA)		; GET 2ND NAME
	MOVEM	AA,1(BB)		; STORE IT
	JRST	AEUUOH

; STARTBUF CH,[FPAGE CPAGE]
; STARTBUF SETS UP A 2 PAGE BUFFER USED IN DEM FOR PGDUMP HACKING
; THE SECOND PAGE IS SHARED WITH THE FILE AND THE FIRST PAGE IS
; USED FOR HACKING.  THE CPAGE POINTS TO THE SECOND PAGE
; NOTE THAT THE SECOND ARG IS NOT INDIRECTED

DSTRTB:	LDB	AA,[%AC,,40]
	HRRZ	BB,40
	DOTCAL	CORBLK,[[WRTP],[FME],1(BB),AA,@(BB)]
	FATAL	CORBLK FAILED
	MOVE	BB,1(BB)
	ASH	BB,10.			; CONVERT TO WORD
	HRRI	AA,-2000(BB)		; BUILD BLT POINTER
	HRLI	AA,(BB)
	BLT	AA,-1(BB)			; BLT OVER BUFFER
	JRST	EUUOH


; MAPIN CH,[MODE FPAGE CPAGE]
; MAPS IN FPAGE INTO CPAGE IN MODE
; CPAGE ARGUMENT NOT INDIRECTED

DMAPIN:	HRRZ	BB,40			; GET LOCATION TO OFFSET INTO
	PUSH	P,(BB)
	LDB	AA,[%AC,,40]		; GET CHANNEL #
	DOTCAL	CORBLK,[(P),[FME],2(BB),AA,@1(BB)]
	FATAL	CORBLK FAILED
	SUB	P,[1,,1]		; CLEAN UP STACK
	JRST	EUUOH

; MAPOUT MAPS OUT A PAGE
; MAPOUT CH,[MODE FPAGE CPAGE]
; CPAGE ARGUMENT NOT INDIRECTED

DMAPOU:	HRRZ	BB,40			; GET LOCATION TO OFFSET INTO
	PUSH	P,(BB)
	LDB	AA,[%AC,,40]
	DOTCAL	CORBLK,[(P),AA,@(BB),[FME],1(BB)]
	FATAL	CORBLK FAILED
	JRST	EUUOH

; PGDUMP ADDR DUMPS OUT A PAGE POINTED TO BY ADDR

DPGDUM:	HRRZ	BB,40			; GET LOC FROM UUO
	DOTCAL	PGDUMP,[@(BB)]
	FATAL	PGDUMP FAILED
	JRST	EUUOH 

; RFNAM CHNUM,LOC READS FILE NAMES OF THE CHANNEL INTO A 2 WORD BLOCK
; BEGINNING AT LOC

DRFNAM:	LDB	AA,[%AC,,40]		; GET CHNUM
	HRRZ	BB,40
	DOTCAL	RCHST,[AA,[2000,,DUMPWD],[2000,,(BB)],[2000,,1(BB)]]
	FATAL	RCHST FAILED
	JRST	EUUOH
	
; CORE [MODE,PAGE]

DCORE:	HRRZ	BB,40			; GET PTR
	MOVE	AA,(BB)			; GET MODE
	CAIN	AA,FLUSH
	JRST	FLSPAG			; FLUSH A PAGE
	CAIE	AA,CREATE	
	FATAL	BAD CALL TO CORE
	DOTCAL	CORBLK,[[WRTP],[FME],@1(BB),[CRJB]]
	PUSHJ	P,SLEEPR
	JRST	EUUOH
FLSPAG:	DOTCAL	CORBLK,[[FLS],[FME],@1(BB)]
	FATAL	CANT FLUSH PAGE
	JRST	EUUOH

SLEEPR:	PUSH	P,AA			; SAVE AA
	MOVEI	AA,1			; SLEEP INCREMENT
	.SLEEP	A1,
	SOS	-1(P)		; RETURN
	SOS	-1(P)
	POP	P,AA			; RESTORE AC
	POPJ	P,


.INSRT NDEM >




TOPCOD==.

LOC 	<<<.+ROUND>/PAGE>*PAGE>



DIRBLK:
DIRBUF:	BLOCK 2000
DIREND:


MDBLK:	BLOCK	PAGE
FDBLK:	BLOCK	PAGE
AFSBLK:	BLOCK	PAGE
FSBLK:	BLOCK	PAGE
AT2BLK:	BLOCK	PAGE
T2BLK:	BLOCK	PAGE
ATBLK:	BLOCK	PAGE
TBLK:	BLOCK	PAGE


T2BLKN==T2BLK/PAGE
MDBLKN==MDBLK/PAGE
FDBLKN==FDBLK/PAGE
FSBLKN==FSBLK/PAGE
TBLKN==TBLK/PAGE



; CONSTANTS

MNFB:	SIXBIT	/SAV/
	SIXBIT /FILE/

MFDB:	SIXBIT /FIXUP/
	SIXBIT /FILE/




; VARIABLES

RCL:	0				; TEMP SLOTS
RCL1:	0
TOPBLK:	TOPB				; HIGHEST ADDRESS OF CORE
SCTFLG:	0				; -1 MEANS TO DISCONTINUE SCRIPTING
TSAVB:	0				; SAVE B REG FOR IN INTERRUPT HANDLER
BUFBYT:	0				; COUNT OF BYTE POINTER TO SCRIPT BUFFER
BUFCNT:	0				; # OF CHARACTERS LEFT IN CURRENT WORD OF BUFFER
CDATE:	0				; TODAY'S DATE
SAVPDL:	0				; SAVED PSTACK
TOTST1:	0				; TOTAL EXPANSION REQUEST FOR SAV FILE
TOTST2:	0				; TOTAL EXPANSION REQUEST FOR FIXUP FILE
HIBLK1:	0				; HI BLOCK OF SAV FILE
HIBLK2:	0				; HI BLOCK OF FIXUP FILE
GETLNT:	0				; LOCATION OF ROUTINE TO ADJUST PAGE LENGTHS
ADJPAG:	0				; LOCATION OF ROUTINES TO UPDATE DATA BASE
DIRLNT:	0				; NUMBER OF PAGES TO A REAL PAGE IN A DIRECTORY
NOMUNG:	0				; IF NON-ZERO THEN DUMP BIT WAS ORIGINALLY ON
					; (I.E. DONT TURN OFF)
CSFILE:	0				; IF -1 THEN RENAME ADDED FILES
NOFILE:	0				; IF -1 DON'T HACK WITH ADDED FILES
SAVSNM:	0				; SAVED SNAME

; BUFFERS

PATCH:	BLOCK	100
PATEND:

BITVEC:	BLOCK	400
BITEND:	0


PDS:	BLOCK	PDLNT
SCBUF:	BLOCK	BUFLNT
DIRVEC:	BLOCK	100

DSK:	SIXBIT /DSK/
DUMPWD:	0
DIRPTR:	0


WRKDIR:	SIXBIT /MUDTMP/
MNDIR:	SIXBIT /MUDSAV/
SAVDIR: SIXBIT /MUDRST/
SAVTMP:	SIXBIT /_STMP_/
FIXTMP:	SIXBIT /_FTMP_/


END START

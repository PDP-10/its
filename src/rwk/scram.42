dsklen==1000*5
kybufl==100

uf6toa==-1
ufsiot==-1
ufdie==-1
uftyi==-1
uftyo==-1
ufrd6==-1
fgetp==-1


.insrt rwk;empty >


$$altp==-1			;include altmode typeing of defaults
$$rfn==-1			;include reading of file names
$$pfn==-1			;include printing of file names

	jrst go1		;skip stuff in files
.insrt rwk;files >


go1:	type /CSCRAMBLE version /	;notify who we are
	move a,versio
	6toa a,[tyo tyoc,a]

	.suset [.rsname,,sname]	;get default sname
	type /AEnter your input file:  /

	syscal ttyset,[argi,,tyic
		[424242,,424242]
		[424202,,424242]]
	  loss
	.suset [.rsname,,dir]

finget:	movei a,device		;get pointer to file block
	move d,[tyi tyic,b]	;d gets operation to read into b
	call rfn"rfn
	syscal open,[cnti,,.uai
		argi,,dski
		device
		...fn1
		...fn2
		sname]
	  do [type /
Sorry, that file does not seem to be there....try again.
/
		jrst finget]
	type /
Please enter an output file for my results (TTY: for the TTY)
/
foutgt:	movei a,device		;a gets pointer to file block
	move d,[tyi tyic,b]	;d gets operation to get chars
	call rfn"rfn		;and read the name
	syscal open,[cnti,,.uao
		argi,,dsko
		device
		['_SCRAM']
		['OUTPUT']
		sname]
	  do [type /
For some reason that does not seem to be a legit output file
Please try again.
/
		jrst foutgt]

	type /
Enter your key-phrase.
/
	move c,[440700,,keybuf]
	loop a,0,kybufl,[
		tyi tyic,b
		cain b,3
		  exit
		cain b,15
		  exit
		idpb b,c]
	movem c,keyend
	syscal ttyset,[argi,,tyic
			[020202,,020202]
			[020202,,020202]]
	  loss
	type /
Is this to be an ENCODE operation?  /
	tyi tyic,a
	caie a,131		;is it Y?
	 cain a,171		;or y?
	  do [type /Yes
/
		jrst start]
	type /No
/
	move a,[sub e,d]	;the reverse operation
	movem a,instr

start:	syscal ttyset,[argi,,tyic
			[424242,,424242]
			[424242,,424242]]
	  loss
	type /
Starting......
/

morcop:	skipn ttyp		;are we reading from TTY?
	  do [move a,[440700,,dskbuf]	;no...get buffer full from disk
		movei b,dsklen

		syscal siot,[argi,,dski
			a
			b]
		 	jrst [type /AScrewed on input somehow; I dunno, was partly done...A/
				syscal close,[argi,,dski]
				 .lose 1000
				syscal close,[argi,,dsko]
				 .lose 1000
				ret]
]				;end of do

	movei d,dsklen		;lets figure out how many were moved
	cain b,0		;is it the end?

	skipn ttyp		;if we're not reading from TTY
	  sub d,b		;we do things a whole buffer at a time!
				;look MA, no random +1 or -1 's!  (ITS WINS!!)
	setz a,
	subi a,(d)
	lsh a,22

	skipn ttyp		;if we are not reading from the TTY
	  movem d,count		;save the count in the buffer

	move c,[440700,,dskbuf]
	move f,keyptr
codlop:	skipe ttyp		;if reading from TTY
	 do [tyi tyic,e		;get it by reading
		aos count	;count the chars in the buffer
		cain e,3	;if it is a ^C
		  jrst [setom b,	;pretend our count wasn't counted out
			jrst codend]	;go finish up
][	ildb e,c]		;else from buffer
	ildb d,f		;get key
	XCT instr
	dpb e,c
	camn f,keyend
	  do [move f,[440700,,keybuf]
		movem f,keyptr]
	aobjn a,codlop

	movem f,keyptr
	move d,count
codend:	move c,[440700,,dskbuf]
	syscal siot,[argi,,dsko
  		c
		d]
	 jrst [type /AI was writing it out and lost somehow.  Are the disks full?A/
		syscal close,[argi,,dski]
		 .lose 1000
		syscal close,[argi,,dsko]
		 .lose 1000
		ret]
	cain b,0		;zero?  Are we really done?
	  jrst morcop		; nope, copy some more
	syscal close,[argi,,dski]
	 skip			;ignore
	syscal renmwo,[argi,,dsko
		...fn1
		...fn2]
	  skip			;ignore failure...it might not be DSK

	syscal close,[argi,,dsko]
	 .lose 1000
	die [text /ADone!
/]

ttyp:	0			;non-zero if input is from TTY
keyend:	0
keyptr:	440700,,keybuf
instr:	add e,d			;instruction to do for encode/decode
count:	0
dskbuf:	block dsklen/5
keybuf:	block <kybufl+4>/5


device:	'DSK   '
...FN1:	'@     '
...FN2:	'>     '
sname:	'      '

versio:	.fnam2

	end go
 
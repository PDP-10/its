.sbttl	Configuration file

;;; General info:
;;; 	When adding a new system, do the following:
;;; 	  * Make a copy of the last system, which should by xyzzy.
;;; 	  * Copy all other lines with xyzzy in them.
;;; 	  * Change all (new) xyzzy lines as appropriate.
;;; 	For info on the DEFDEV macros for the various pieces of
;;; 	  hardware, look in the source file you are inserting. 


;;; ALWAYS: define source directory, load convention macros, ask
;;; pdp11 type, and load macro packages

.if z %opsys-"IT		;if under ITS
	.macro $insrt fn1,fn2
		.insrt MC:MINITS;fn1 fn2
	.endm
.endc
.if z %opsys-"TW		;if under 20X
	.macro $insrt fn1,fn2
		.if b fn2
			.insrt minsrc:fn1'.palx
		.iff
			.insrt minsrc:fn1'.'fn2
		.endc
	.endm
.endc

$insrt conven,macros

setf ^"What system are you assembling for?
	xyzzy  <==>	System xyzzy
	...
::: ",system

xyzzy==-1

;Defaults redefined by some systems

bootad=173000			;standard I/O page bootstrap
dbugad=0			;no debugging routine

.macro $host$
  .asciz /MINITS PDP-11 system (UNKNOWN)/
.endm

;;; define the processor type

pdp11==0
.iif z system-xyzzy, pdp11==xyzzy

;;; define CPU dependent things

$insrt cpu,macros

;;; allow us to write structured code

$insrt style,macros

;;; include macros for the config file

$insrt minmac

defdev lk,,<			;always a line clock
	lkvec==000100		;line clock vector
	   v$lk==lkvec
	lkcsr==177546		;CSR
	   c$lk==lkcsr
	 lk.ien==bit.06		;interrupt enable bit
	>

	.sbttl	Start defining the various configurations

	.sbttl	System xyzzy: System xyzzy
.if z system-xyzzy
	.title	xyzzy

.host. <xyzzy>

memtop==xyzzy			;top of usable memory
bootad=xyzzy			;boot address
dbugad==xyzzy			;debug reboots

.endc system xyzzy

	.sbttl	Post configuration

setf ^"What is the top of memory? (140000) ",memtop
  fs$end==memtop

ntty==0				;start with no ttys
ndv%==0				;no device types yet
ner%==1 			;no errors defined yet (but zero not allowed)

%defin==-1			;define macros and symbols from support files
devfil				;include the support (device) files
%defin==0			;finished defining macros and symbols

devdef				;define all the devices

;;; insert the program
$insrt minits

;;; make @ happy
.if z 1
.insrt mc:minits;dl11
.insrt mc:minits;chsdev
.insrt mc:minits;v80
.insrt mc:minits;gould
.insrt mc:minits;camac
.insrt mc:minits;rmp116
.endc

;;; local modes:
;;; mode:midas
;;; comment column:32
;;; end:

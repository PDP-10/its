;;; -*-midas-*-

	.sbttl	Standard convention macros

;;; ;;; General info:
;;; ;;; 	Defines some standard pdp-11 coding convention macros.  

.macro	call subr
	jsr pc,subr
.endm

.macro return
	rts pc
.endm

.macro jcall subr
	jmp subr
.endm

.macro lock level
	mfps -(sp)
	spl level
.endm

.macro unlock
	mtps (sp)+
.endm

;;; Define YES and NO so they're acceptable SETF answers
yes===1
no===0

.macro	setf q,a
	.if ndf  a
	  .print "q "
	  .ttymac ans
	  .if ndf  ans
	    setf ^"Bad input, try again:",a
	    .mexit
	    .endc
	  a==ans
	  .endm
	.endc
.endm


;; PUSH and POP, up to eight values. (Also a byte version called PUSHB/POPB)
;; 	PUSH #0 ==> MOV #0,-(SP) ==> CLR -(SP)
;; 	POP  *  ==> MOV (SP)+,*  ==> TST (SP)+

.macro	push	a0,a1,a2,a3,a4,a5,a6,a7
.nlist
	.irp d,<a0,a1,a2,a3,a4,a5,a6,a7>
	  .if idn  d,#0
	    clr -(sp)
	  .iff
	    .lif nb  d
	      mov d,-(sp)
	  .endc #0
	  .endm irp
.list
.endm push

.macro	pushb	a0,a1,a2,a3,a4,a5,a6,a7
.nlist
	.irp d,<a0,a1,a2,a3,a4,a5,a6,a7>
	  .if idn  d,#0
	    clrb -(sp)
	  .iff
	    .lif nb  d
	      movb d,-(sp)
	  .endc #0
	  .endm irp
.list
.endm push

.macro	pop	a0,a1,a2,a3,a4,a5,a6,a7
.nlist
	.irp d,<a0,a1,a2,a3,a4,a5,a6,a7>
	  .if idn  d,*
	    tst (sp)+
	  .iff
	    .lif nb  d
	      mov (sp)+,d
	  .endc idn
	  .endm irp
.list
.endm pop

.macro	popb	a0,a1,a2,a3,a4,a5,a6,a7
.nlist
	.irp d,<a0,a1,a2,a3,a4,a5,a6,a7>
	  .if idn  d,*
	    tstb (sp)+
	  .iff
	    .lif nb  d
	      movb (sp)+,d
	  .endc idn
	  .endm irp
.list
.endm pop

;;; If there are several values to pop, use POPN
.macro popn howmny
	add howmny,sp
.endm popn

.macro .decim number
.nlist
  .if lt <number>-10.
	.byte <number>+'0
  .iff
	.decim <number>/10.
	.byte  <number>-<<number>/10.*10.>+'0
  .endc
.list
.endm


	.sbttl Standard masks and bits

mask1==177776
mask2==177774
mask3==177770
mask4==177760
mask5==177740
mask6==177700
mask7==177600
mask8==177400
mask9==177000
mask10==176000
mask11==174000
mask12==170000
mask13==160000
mask14==140000
mask15==100000

bit.00==000001
bit.01==000002
bit.02==000004
bit.03==000010
bit.04==000020
bit.05==000040
bit.06==000100
bit.07==000200
bit.08==000400
bit.09==001000
bit.10==002000
bit.11==004000
bit.12==010000
bit.13==020000
bit.14==040000
bit.15==100000


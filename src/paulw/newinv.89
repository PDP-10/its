;;;;;;;;;;;;;;;;;;; -*- Mode: Lisp; Package: Macsyma -*- ;;;;;;;;;;;;;;;;;;;
;;;     (c) Copyright 1980 Massachusetts Institute of Technology         ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(macsyma-module newinv)

(DECLARE (SPECIAL *NONZ* DETL* *R0 MUL* $SPARSE *DET* *RR* AX))
(DECLARE (FIXNUM *R0))

(DEFUN MULTBK (L AX M)
       (PROG (E)
		 (DO J (1+ M) (1+ J) (> J (* 2 M))
		 (SETQ E (CAR L) L (CDR L))
	     (DO I 1 (1+ I) (> I M)
		     (STORE (FUNCALL AX I J)
			    (RATTIMES E (FUNCALL AX I J) T))))))

(DEFUN CTIMEMT (X Y)
       (PROG (C)
	LOOP (COND ((NULL Y) (RETURN C))) 
	     (SETQ C (NCONC C (LIST (TIMESROW X (CAR Y))))
		   Y (CDR Y))
	     (GO LOOP)))


(DEFUN STORA (AX M EI R)
       (DECLARE(FIXNUM M R I J))
       (PROG (DET I J RO MAT)
	     (SETQ I 0)
       LOOP0 (COND ((NULL EI)(RETURN NIL)))
             (SETQ MAT (CAR EI) EI (CDR EI))
	     (SETQ DET (CAAR MAT) MAT (CDR MAT))
        LOOP (SETQ J R)
	     (COND ((NULL MAT)(GO LOOP0)))
	     (SETQ I (1+ I) RO (CAR MAT) MAT (CDR MAT))
       LOOP2 (COND ((NULL RO) (GO LOOP)))
             (SETQ J (1+ J))
	     (STORE (FUNCALL AX I (+ M J)) (RATREDUCE (CAAR RO) DET))
	     (STORE (FUNCALL AX (PTR I) (PTC J)) NIL)
	     (SETQ RO (CDR RO))
	     (GO LOOP2)))

(DEFUN PRODHK (RI D R M)
       (DECLARE (FIXNUM R M))
       (PROG (EI E *RR* *R0 CO)
	     (SETQ *R0 R EI RI)
	LOOP (COND ((NULL EI)
		    (STORA AX M (APPEND CO (LIST D)) R)
		    (SETQ DETL* (CONS (CAR D) DETL*))
		    (RETURN (CONS (LIST D)
				  (MAPCAR (FUNCTION
					   (LAMBDA (X Y)
					      (NCONC X (LIST Y))))
				      RI (NREVERSE *RR*))))))
	     (SETQ E (CAR EI) EI (CDR EI))
	     (SETQ CO (CONS (BMHK E D CO R DETL*) CO))
	     (GO LOOP)))

(DEFUN OBMTRX (AX R S I J)
       (DECLARE(FIXNUM R S I J DS DJ))
       (PROG (ANS DJ DS DR D)
	     (SETQ DS S DJ J)
        LOOP (COND((= I 0) (RETURN ANS)))
       LOOP1 (COND ((= J 0)
		    (SETQ J DJ
			  S DS
			  ANS (CONS (NREVERSE DR) ANS))
		    (SETQ DR NIL R (1- R) I (1- I))
		    (GO LOOP)))
             (SETQ S (1+ S) J (1- J))
	     (SETQ D (FUNCALL AX (PTR R) (PTC S))) 
	     (COND ((OR *NONZ* (EQUAL D 0)) NIL)
		   (T (SETQ *NONZ* T)))
	     (SETQ DR (CONS D DR))
	     (GO LOOP1)))

(DEFUN BMHK (DA B NC C0 DETL)
       (PROG (C A SUM DET DY *NONZ* X Y)
	 (SETQ DET (CAR B) B (CDR B) A (CAR DA) DA (CDR DA))
	 (SETQ NC (REVERSE NC))
	 (SETQ DA (REVERSE DA))
	 (SETQ C (OBMTRX AX *R0 C0 (LENGTH(CDR A)) (LENGTH B)))
	 (SETQ *RR* (CONS C *RR*))
	 (COND ((NULL *NONZ*)(RETURN (CONS '(1 . 1) C))))
	 (SETQ SUM (MULTMAT C B))
	 (SETQ *R0 (- *R0 (LENGTH (CDR A))))
    LOOP (COND ((NULL DA) (GO ON)))
         (SETQ X (CAR DA) Y(CAR NC) DY (CAR Y) Y (CDR Y))
	 (SETQ X (MULTMAT X Y))
	 (SETQ SUM (ADDMATRIX1 (CTIMEMT (CONS (PMINUS (CAAR DETL)) 1) SUM) X))
	 (SETQ DET DY DETL (CDR DETL))
	 (SETQ DA (CDR DA) NC (CDR NC))
	 (GO LOOP)
     ON  (SETQ DET (CONS (PTIMES (PMINUS (CAAR A)) (CAR DET)) 1))
         (RETURN (CONS DET (MULTMAT(CDR A) SUM)))))

(DECLARE (SPECIAL BL))
(COMMENT TMLATTICE RETURNS THE BLOCK STRUCTURE IN THE FORM OF A LIST OF BLOCKS
	 EACH IN THE FORM OF ((I1 J1) (I2 J2) ETC))

(DEFUN NEWINV (AX M N)
       (DECLARE (FIXNUM M N I J R BM DM DM2 ))
       (PROG (J MMAT BL D BM DETL* DM IPDM DM2 R I EI)
	 (DO I M (1- I) (= I 0)
	     (SETQ MMAT(CONS (FUNCALL AX I (+ I M)) MMAT)))
	 (*ARRAY 'PTR T  (1+ M))
	 (*ARRAY 'PTC T  (1+ M))
	 (SETQ BL (TMLATTICE AX 'PTR 'PTC M))
	 (COND ((NULL BL) (merror "SINGULAR")))
	 (SETQ BL (MAPCAR 'LENGTH BL))
	 (SETQ BM (APPLY 'MAX BL))
	 (*ARRAY 'IAR T (1+ BM) (1+ (* 2 BM)))
	 (SETQ R 0)
   LOOP1 (COND ((NULL BL)
		(TMUNPIVOT AX 'PTR 'PTC M N)
		(RETURN (MULTBK MMAT AX M))))
         (SETQ I (CAR BL))
	 (SETQ DM I)
	 (SETQ DM2 (* 2 DM))
   LOOP2 (COND ((= I 0)(GO INV)))
         (SETQ J DM2 IPDM(+ I DM))
   LOOP3 (COND ((= J 0) (SETQ I (1- I)) (GO LOOP2)))
         (STORE (IAR I J)
		(COND ((> J DM)
		       (COND ((= J IPDM) '(1 . 1))
			     (T '(0 . 1))))
		      (T (FUNCALL AX (PTR (+ R I)) (PTC(+ R J))))))
	 (SETQ J (1- J))
	 (GO LOOP3)
    INV  (COND ((= R 0)
		(SETQ EI (TMLIN 'IAR DM DM DM))
		(SETQ EI (LIST (CONS (CAAR EI) (CDR EI))))
		(STORA AX M EI R)
		(SETQ EI (LIST EI))(GO NEXT)))
         (SETQ D (TMLIN 'IAR DM DM DM))
	 (SETQ D (CONS (CAAR D) (CDR D)))
	 (SETQ EI(PRODHK EI D R M))
	 (SETQ D NIL)
   NEXT  (SETQ R(+ R (CAR BL)))
         (SETQ BL (CDR BL))
	 (GO LOOP1)))

(DECLARE (UNSPECIAL BL *NONZ* DETL* *R0 MUL* *DET* *RR* AX))

